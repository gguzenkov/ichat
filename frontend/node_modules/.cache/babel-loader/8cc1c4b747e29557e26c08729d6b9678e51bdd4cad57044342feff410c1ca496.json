{"ast":null,"code":"import { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    auth: {\n      isAuthenticated: false,\n      user: null\n    }\n  },\n  mutations: {\n    SET_AUTH(state, auth) {\n      state.auth = auth;\n    }\n  },\n  actions: {\n    async login({\n      commit\n    }, credentials) {\n      try {\n        // Имитация успешной авторизации\n        console.log('Login attempt with:', credentials);\n        commit('SET_AUTH', {\n          isAuthenticated: true,\n          user: credentials.username\n        });\n        return true;\n      } catch (error) {\n        console.error('Login error:', error);\n        return false;\n      }\n    },\n    logout({\n      commit\n    }) {\n      commit('SET_AUTH', {\n        isAuthenticated: false,\n        user: null\n      });\n    }\n  },\n  getters: {\n    isAuthenticated: state => state.auth.isAuthenticated,\n    currentUser: state => state.auth.user\n  }\n});","map":{"version":3,"names":["createStore","state","auth","isAuthenticated","user","mutations","SET_AUTH","actions","login","commit","credentials","console","log","username","error","logout","getters","currentUser"],"sources":["/home/dotcore/ichat/frontend/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n    auth: {\n      isAuthenticated: false,\n      user: null\n    }\n  },\n  mutations: {\n    SET_AUTH(state, auth) {\n      state.auth = auth\n    }\n  },\n  actions: {\n    async login({ commit }, credentials) {\n      try {\n        // Имитация успешной авторизации\n        console.log('Login attempt with:', credentials)\n        commit('SET_AUTH', { \n          isAuthenticated: true, \n          user: credentials.username \n        })\n        return true\n      } catch (error) {\n        console.error('Login error:', error)\n        return false\n      }\n    },\n    logout({ commit }) {\n      commit('SET_AUTH', { \n        isAuthenticated: false, \n        user: null \n      })\n    }\n  },\n  getters: {\n    isAuthenticated: state => state.auth.isAuthenticated,\n    currentUser: state => state.auth.user\n  }\n}) "],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAElC,eAAeA,WAAW,CAAC;EACzBC,KAAK,EAAE;IACLC,IAAI,EAAE;MACJC,eAAe,EAAE,KAAK;MACtBC,IAAI,EAAE;IACR;EACF,CAAC;EACDC,SAAS,EAAE;IACTC,QAAQA,CAACL,KAAK,EAAEC,IAAI,EAAE;MACpBD,KAAK,CAACC,IAAI,GAAGA,IAAI;IACnB;EACF,CAAC;EACDK,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAC;MAAEC;IAAO,CAAC,EAAEC,WAAW,EAAE;MACnC,IAAI;QACF;QACAC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,WAAW,CAAC;QAC/CD,MAAM,CAAC,UAAU,EAAE;UACjBN,eAAe,EAAE,IAAI;UACrBC,IAAI,EAAEM,WAAW,CAACG;QACpB,CAAC,CAAC;QACF,OAAO,IAAI;MACb,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;QACpC,OAAO,KAAK;MACd;IACF,CAAC;IACDC,MAAMA,CAAC;MAAEN;IAAO,CAAC,EAAE;MACjBA,MAAM,CAAC,UAAU,EAAE;QACjBN,eAAe,EAAE,KAAK;QACtBC,IAAI,EAAE;MACR,CAAC,CAAC;IACJ;EACF,CAAC;EACDY,OAAO,EAAE;IACPb,eAAe,EAAEF,KAAK,IAAIA,KAAK,CAACC,IAAI,CAACC,eAAe;IACpDc,WAAW,EAAEhB,KAAK,IAAIA,KAAK,CAACC,IAAI,CAACE;EACnC;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}