{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"login\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"success-message\"\n};\nconst _hoisted_4 = {\n  class: \"form-group\"\n};\nconst _hoisted_5 = {\n  class: \"form-group\"\n};\nconst _hoisted_6 = {\n  class: \"form-group\"\n};\nconst _hoisted_7 = {\n  class: \"form-group\"\n};\nconst _hoisted_8 = [\"disabled\"];\nconst _hoisted_9 = {\n  class: \"form-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[11] || (_cache[11] = _createElementVNode(\"h2\", null, \"Регистрация\", -1 /* HOISTED */)), $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString($data.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.successMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString($data.successMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.handleSubmit && $options.handleSubmit(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_4, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", null, \"Имя пользователя:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.username = $event),\n    required: \"\",\n    placeholder: \"Введите имя пользователя\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.username]])]), _createElementVNode(\"div\", _hoisted_5, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", null, \"Email:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.email = $event),\n    required: \"\",\n    placeholder: \"Введите email\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]])]), _createElementVNode(\"div\", _hoisted_6, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", null, \"Пароль:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.password = $event),\n    required: \"\",\n    placeholder: \"Введите пароль\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])]), _createElementVNode(\"div\", _hoisted_7, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", null, \"Подтверждение пароля:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.confirmPassword = $event),\n    required: \"\",\n    placeholder: \"Подтвердите пароль\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.confirmPassword]])]), _createElementVNode(\"button\", {\n    type: \"submit\",\n    disabled: $data.loading\n  }, _toDisplayString($data.loading ? 'Регистрация...' : 'Зарегистрироваться'), 9 /* TEXT, PROPS */, _hoisted_8)], 32 /* NEED_HYDRATION */), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"p\", null, [_cache[10] || (_cache[10] = _createTextVNode(\"Уже есть аккаунт? \")), _createVNode(_component_router_link, {\n    to: \"/login\"\n  }, {\n    default: _withCtx(() => _cache[9] || (_cache[9] = [_createTextVNode(\"Войти\")])),\n    _: 1 /* STABLE */\n  })])])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","$data","error","_hoisted_2","_toDisplayString","_createCommentVNode","successMessage","_hoisted_3","onSubmit","_cache","_withModifiers","args","$options","handleSubmit","_hoisted_4","type","$event","username","required","placeholder","_hoisted_5","email","_hoisted_6","password","_hoisted_7","confirmPassword","disabled","loading","_hoisted_8","_hoisted_9","_createTextVNode","_createVNode","_component_router_link","to","default","_withCtx","_"],"sources":["/home/dotcore/ichat/frontend/src/components/Register.vue"],"sourcesContent":["<template>\n  <div class=\"login\">\n    <h2>Регистрация</h2>\n    <div v-if=\"error\" class=\"error-message\">\n      {{ error }}\n    </div>\n    <div v-if=\"successMessage\" class=\"success-message\">\n      {{ successMessage }}\n    </div>\n    <form @submit.prevent=\"handleSubmit\">\n      <div class=\"form-group\">\n        <label>Имя пользователя:</label>\n        <input \n          type=\"text\" \n          v-model=\"username\" \n          required\n          placeholder=\"Введите имя пользователя\"\n        >\n      </div>\n      <div class=\"form-group\">\n        <label>Email:</label>\n        <input \n          type=\"email\" \n          v-model=\"email\" \n          required\n          placeholder=\"Введите email\"\n        >\n      </div>\n      <div class=\"form-group\">\n        <label>Пароль:</label>\n        <input \n          type=\"password\" \n          v-model=\"password\" \n          required\n          placeholder=\"Введите пароль\"\n        >\n      </div>\n      <div class=\"form-group\">\n        <label>Подтверждение пароля:</label>\n        <input \n          type=\"password\" \n          v-model=\"confirmPassword\" \n          required\n          placeholder=\"Подтвердите пароль\"\n        >\n      </div>\n      <button type=\"submit\" :disabled=\"loading\">\n        {{ loading ? 'Регистрация...' : 'Зарегистрироваться' }}\n      </button>\n    </form>\n    <div class=\"form-footer\">\n      <p>Уже есть аккаунт? <router-link to=\"/login\">Войти</router-link></p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Register',\n  data() {\n    return {\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      error: null,\n      successMessage: null,\n      loading: false\n    }\n  },\n  methods: {\n    async handleSubmit() {\n      this.error = null\n      this.successMessage = null\n      this.loading = true\n\n      if (this.password !== this.confirmPassword) {\n        this.error = 'Пароли не совпадают'\n        this.loading = false\n        return\n      }\n\n      try {\n        await this.$store.dispatch('auth/register', {\n          username: this.username,\n          email: this.email,\n          password: this.password\n        })\n        this.successMessage = 'Спасибо за регистрацию! Теперь вы можете войти'\n        \n        // Очищаем форму\n        this.username = ''\n        this.email = ''\n        this.password = ''\n        this.confirmPassword = ''\n        \n        // Перенаправляем на страницу входа через 2 секунды\n        setTimeout(() => {\n          this.$router.push('/login')\n        }, 2000)\n      } catch (error) {\n        this.error = error.message\n      } finally {\n        this.loading = false\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.error-message {\n  color: #dc3545;\n  background-color: #f8d7da;\n  border: 1px solid #f5c6cb;\n  border-radius: 4px;\n  padding: 10px;\n  margin-bottom: 15px;\n}\n\n.success-message {\n  color: #28a745;\n  background-color: #d4edda;\n  border: 1px solid #c3e6cb;\n  border-radius: 4px;\n  padding: 10px;\n  margin-bottom: 15px;\n}\n\n.form-footer {\n  text-align: center;\n  margin-top: 20px;\n  padding-top: 20px;\n  border-top: 1px solid #eee;\n}\n\n.form-footer a {\n  color: #42b983;\n  text-decoration: none;\n}\n\n.form-footer a:hover {\n  text-decoration: underline;\n}\n\nbutton:disabled {\n  background-color: #ccc;\n  cursor: not-allowed;\n}\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAO;;EADpBC,GAAA;EAGsBD,KAAK,EAAC;;;EAH5BC,GAAA;EAM+BD,KAAK,EAAC;;;EAI1BA,KAAK,EAAC;AAAY;;EASlBA,KAAK,EAAC;AAAY;;EASlBA,KAAK,EAAC;AAAY;;EASlBA,KAAK,EAAC;AAAY;mBArC7B;;EAkDSA,KAAK,EAAC;AAAa;;;uBAjD1BE,mBAAA,CAoDM,OApDNC,UAoDM,G,4BAnDJC,mBAAA,CAAoB,YAAhB,aAAW,sBACJC,KAAA,CAAAC,KAAK,I,cAAhBJ,mBAAA,CAEM,OAFNK,UAEM,EAAAC,gBAAA,CADDH,KAAA,CAAAC,KAAK,oBAJdG,mBAAA,gBAMeJ,KAAA,CAAAK,cAAc,I,cAAzBR,mBAAA,CAEM,OAFNS,UAEM,EAAAH,gBAAA,CADDH,KAAA,CAAAK,cAAc,oBAPvBD,mBAAA,gBASIL,mBAAA,CAwCO;IAxCAQ,QAAM,EAAAC,MAAA,QAAAA,MAAA,MATjBC,cAAA,KAAAC,IAAA,KAS2BC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;MACjCX,mBAAA,CAQM,OARNc,UAQM,G,0BAPJd,mBAAA,CAAgC,eAAzB,mBAAiB,sB,gBACxBA,mBAAA,CAKC;IAJCe,IAAI,EAAC,MAAM;IAbrB,uBAAAN,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAcmBf,KAAA,CAAAgB,QAAQ,GAAAD,MAAA;IACjBE,QAAQ,EAAR,EAAQ;IACRC,WAAW,EAAC;iDAFHlB,KAAA,CAAAgB,QAAQ,E,KAKrBjB,mBAAA,CAQM,OARNoB,UAQM,G,0BAPJpB,mBAAA,CAAqB,eAAd,QAAM,sB,gBACbA,mBAAA,CAKC;IAJCe,IAAI,EAAC,OAAO;IAtBtB,uBAAAN,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAuBmBf,KAAA,CAAAoB,KAAK,GAAAL,MAAA;IACdE,QAAQ,EAAR,EAAQ;IACRC,WAAW,EAAC;iDAFHlB,KAAA,CAAAoB,KAAK,E,KAKlBrB,mBAAA,CAQM,OARNsB,UAQM,G,0BAPJtB,mBAAA,CAAsB,eAAf,SAAO,sB,gBACdA,mBAAA,CAKC;IAJCe,IAAI,EAAC,UAAU;IA/BzB,uBAAAN,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAgCmBf,KAAA,CAAAsB,QAAQ,GAAAP,MAAA;IACjBE,QAAQ,EAAR,EAAQ;IACRC,WAAW,EAAC;iDAFHlB,KAAA,CAAAsB,QAAQ,E,KAKrBvB,mBAAA,CAQM,OARNwB,UAQM,G,0BAPJxB,mBAAA,CAAoC,eAA7B,uBAAqB,sB,gBAC5BA,mBAAA,CAKC;IAJCe,IAAI,EAAC,UAAU;IAxCzB,uBAAAN,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAyCmBf,KAAA,CAAAwB,eAAe,GAAAT,MAAA;IACxBE,QAAQ,EAAR,EAAQ;IACRC,WAAW,EAAC;iDAFHlB,KAAA,CAAAwB,eAAe,E,KAK5BzB,mBAAA,CAES;IAFDe,IAAI,EAAC,QAAQ;IAAEW,QAAQ,EAAEzB,KAAA,CAAA0B;sBAC5B1B,KAAA,CAAA0B,OAAO,kEA/ClBC,UAAA,E,4BAkDI5B,mBAAA,CAEM,OAFN6B,UAEM,GADJ7B,mBAAA,CAAqE,Y,4BAnD3E8B,gBAAA,CAmDS,oBAAkB,IAAAC,YAAA,CAA4CC,sBAAA;IAA/BC,EAAE,EAAC;EAAQ;IAnDnDC,OAAA,EAAAC,QAAA,CAmDoD,MAAK1B,MAAA,QAAAA,MAAA,OAnDzDqB,gBAAA,CAmDoD,OAAK,E;IAnDzDM,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}