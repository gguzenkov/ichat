{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, withModifiers as _withModifiers, createTextVNode as _createTextVNode, normalizeStyle as _normalizeStyle, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chat-container\"\n};\nconst _hoisted_2 = {\n  class: \"chat\"\n};\nconst _hoisted_3 = {\n  class: \"chat-messages\",\n  ref: \"messagesContainer\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"no-messages\"\n};\nconst _hoisted_5 = {\n  class: \"message-header\"\n};\nconst _hoisted_6 = {\n  class: \"user-info\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"message-avatar\"\n};\nconst _hoisted_8 = [\"src\"];\nconst _hoisted_9 = {\n  key: 1,\n  class: \"message-avatar default-avatar\"\n};\nconst _hoisted_10 = {\n  class: \"username\"\n};\nconst _hoisted_11 = {\n  class: \"message-controls\"\n};\nconst _hoisted_12 = {\n  class: \"timestamp\"\n};\nconst _hoisted_13 = [\"onClick\"];\nconst _hoisted_14 = {\n  class: \"message-content\"\n};\nconst _hoisted_15 = {\n  key: 0,\n  class: \"message-text\"\n};\nconst _hoisted_16 = {\n  key: 1,\n  class: \"message-attachments\"\n};\nconst _hoisted_17 = [\"href\"];\nconst _hoisted_18 = {\n  class: \"chat-input\"\n};\nconst _hoisted_19 = {\n  key: 0,\n  class: \"mention-popup\",\n  ref: \"mentionPopup\"\n};\nconst _hoisted_20 = [\"onClick\"];\nconst _hoisted_21 = {\n  key: 0,\n  class: \"mention-avatar\"\n};\nconst _hoisted_22 = [\"src\"];\nconst _hoisted_23 = {\n  key: 1,\n  class: \"mention-avatar default-avatar\"\n};\nconst _hoisted_24 = {\n  class: \"mention-username\"\n};\nconst _hoisted_25 = {\n  key: 1,\n  class: \"emoji-picker\",\n  ref: \"emojiPicker\"\n};\nconst _hoisted_26 = {\n  class: \"emoji-categories\"\n};\nconst _hoisted_27 = [\"onClick\"];\nconst _hoisted_28 = {\n  class: \"emoji-list\"\n};\nconst _hoisted_29 = [\"onClick\"];\nconst _hoisted_30 = {\n  key: 2,\n  class: \"selected-files\"\n};\nconst _hoisted_31 = {\n  class: \"file-name\"\n};\nconst _hoisted_32 = {\n  class: \"file-size\"\n};\nconst _hoisted_33 = [\"onClick\"];\nconst _hoisted_34 = {\n  class: \"input-wrapper\"\n};\nconst _hoisted_35 = [\"disabled\"];\nconst _hoisted_36 = {\n  class: \"attachment-trigger\",\n  title: \"Прикрепить файлы\"\n};\nconst _hoisted_37 = [\"disabled\"];\nconst _hoisted_38 = {\n  key: 0,\n  class: \"modal\"\n};\nconst _hoisted_39 = {\n  class: \"modal-content\"\n};\nconst _hoisted_40 = {\n  class: \"modal-buttons\"\n};\nconst _hoisted_41 = {\n  class: \"users-list\"\n};\nconst _hoisted_42 = {\n  class: \"users\"\n};\nconst _hoisted_43 = [\"onClick\"];\nconst _hoisted_44 = {\n  key: 0,\n  class: \"user-avatar\"\n};\nconst _hoisted_45 = [\"src\"];\nconst _hoisted_46 = {\n  key: 1,\n  class: \"user-avatar default-avatar\"\n};\nconst _hoisted_47 = {\n  class: \"user-info-container\"\n};\nconst _hoisted_48 = {\n  class: \"user-name\"\n};\nconst _hoisted_49 = [\"onClick\"];\nconst _hoisted_50 = {\n  class: \"popup-chats\"\n};\nconst _hoisted_51 = {\n  key: 0,\n  class: \"total-unread\"\n};\nconst _hoisted_52 = {\n  key: 0,\n  class: \"all-messages-panel\"\n};\nconst _hoisted_53 = {\n  class: \"panel-header\"\n};\nconst _hoisted_54 = {\n  class: \"messages-list\"\n};\nconst _hoisted_55 = {\n  key: 0,\n  class: \"no-chats\"\n};\nconst _hoisted_56 = [\"onClick\"];\nconst _hoisted_57 = {\n  class: \"chat-avatar\"\n};\nconst _hoisted_58 = {\n  key: 0,\n  class: \"user-avatar\"\n};\nconst _hoisted_59 = [\"src\"];\nconst _hoisted_60 = {\n  key: 1,\n  class: \"default-avatar\"\n};\nconst _hoisted_61 = {\n  class: \"chat-info\"\n};\nconst _hoisted_62 = {\n  class: \"chat-header\"\n};\nconst _hoisted_63 = {\n  class: \"username\"\n};\nconst _hoisted_64 = {\n  class: \"timestamp\"\n};\nconst _hoisted_65 = {\n  key: 0,\n  class: \"unread-count\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_PopupChat = _resolveComponent(\"PopupChat\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [$data.messages.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \" Нет сообщений \")) : (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 1\n  }, _renderList($options.sortedMessages, message => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: message.id,\n      class: \"message\"\n    }, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [message.avatar_url ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"img\", {\n      src: `http://localhost:8000${message.avatar_url}`,\n      alt: \"Аватар\"\n    }, null, 8 /* PROPS */, _hoisted_8)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [...(_cache[14] || (_cache[14] = [_createElementVNode(\"svg\", {\n      viewBox: \"0 0 24 24\",\n      fill: \"currentColor\"\n    }, [_createElementVNode(\"path\", {\n      d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n    })], -1 /* HOISTED */)]))])), _createElementVNode(\"span\", _hoisted_10, _toDisplayString(message.username), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"span\", _hoisted_12, _toDisplayString($options.formatDate(message.created_at)), 1 /* TEXT */), $options.canDeleteMessage(message) ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      onClick: $event => $options.confirmDelete(message),\n      class: \"control-btn delete-btn\"\n    }, \" ✕ \", 8 /* PROPS */, _hoisted_13)) : _createCommentVNode(\"v-if\", true)])]), _createElementVNode(\"div\", _hoisted_14, [message.content ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, _toDisplayString(message.content), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), message.attachments && message.attachments.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(message.attachments, (attachment, index) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: index,\n        class: \"attachment\"\n      }, [_cache[15] || (_cache[15] = _createElementVNode(\"i\", {\n        class: \"fas fa-file\"\n      }, null, -1 /* HOISTED */)), _createElementVNode(\"a\", {\n        href: `http://localhost:8000${attachment.file_path}`,\n        target: \"_blank\",\n        class: \"attachment-link\"\n      }, _toDisplayString(attachment.file_name) + \" (\" + _toDisplayString($options.formatFileSize(attachment.file_size)) + \") \", 9 /* TEXT, PROPS */, _hoisted_17)]);\n    }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)])]);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), _createElementVNode(\"div\", _hoisted_18, [$data.showMentionPopup ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredUsers, user => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: user.id,\n      class: \"mention-item\",\n      onClick: $event => $options.selectMention(user)\n    }, [user.avatar_url ? (_openBlock(), _createElementBlock(\"div\", _hoisted_21, [_createElementVNode(\"img\", {\n      src: `http://localhost:8000${user.avatar_url}`,\n      alt: \"Аватар\"\n    }, null, 8 /* PROPS */, _hoisted_22)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_23, [...(_cache[16] || (_cache[16] = [_createElementVNode(\"svg\", {\n      viewBox: \"0 0 24 24\",\n      fill: \"currentColor\"\n    }, [_createElementVNode(\"path\", {\n      d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n    })], -1 /* HOISTED */)]))])), _createElementVNode(\"span\", _hoisted_24, _toDisplayString(user.username), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_20);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Добавляем панель эмодзи \"), $data.showEmojiPicker ? (_openBlock(), _createElementBlock(\"div\", _hoisted_25, [_createElementVNode(\"div\", _hoisted_26, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.emojiCategories, (category, name) => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: name,\n      onClick: $event => $data.currentCategory = name,\n      class: _normalizeClass({\n        active: $data.currentCategory === name\n      })\n    }, _toDisplayString(category.icon), 11 /* TEXT, CLASS, PROPS */, _hoisted_27);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_28, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.currentEmojis, emoji => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: emoji,\n      onClick: $event => $options.addEmoji(emoji),\n      class: \"emoji-button\"\n    }, _toDisplayString(emoji), 9 /* TEXT, PROPS */, _hoisted_29);\n  }), 128 /* KEYED_FRAGMENT */))])], 512 /* NEED_PATCH */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Добавляем превью выбранных файлов \"), $data.selectedFiles.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_30, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.selectedFiles, (file, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"file-preview\"\n    }, [_cache[17] || (_cache[17] = _createElementVNode(\"i\", {\n      class: \"fas fa-paperclip\"\n    }, null, -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_31, _toDisplayString(file.name), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_32, \"(\" + _toDisplayString($options.formatFileSize(file.size)) + \")\", 1 /* TEXT */), _createElementVNode(\"button\", {\n      class: \"remove-file\",\n      onClick: $event => $options.removeFile(index)\n    }, \"✕\", 8 /* PROPS */, _hoisted_33)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_34, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newMessage = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.sendMessage && $options.sendMessage(...args), [\"enter\"])),\n    onInput: _cache[2] || (_cache[2] = (...args) => $options.handleInput && $options.handleInput(...args)),\n    onKeydown: _cache[3] || (_cache[3] = (...args) => $options.handleKeydown && $options.handleKeydown(...args)),\n    placeholder: \"Введите сообщение...\",\n    disabled: $data.loading,\n    ref: \"messageInput\"\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_35), [[_vModelText, $data.newMessage]]), _createElementVNode(\"label\", _hoisted_36, [_cache[18] || (_cache[18] = _createElementVNode(\"i\", {\n    class: \"fas fa-paperclip\"\n  }, null, -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    multiple: \"\",\n    onChange: _cache[4] || (_cache[4] = (...args) => $options.handleFileSelect && $options.handleFileSelect(...args)),\n    ref: \"fileInput\",\n    accept: \"*/*\",\n    style: {\n      \"display\": \"none\"\n    }\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */)]), _createElementVNode(\"span\", {\n    class: \"emoji-trigger\",\n    onClick: _cache[5] || (_cache[5] = _withModifiers((...args) => $options.toggleEmojiPicker && $options.toggleEmojiPicker(...args), [\"stop\"])),\n    title: \"Добавить эмодзи\"\n  }, _cache[19] || (_cache[19] = [_createElementVNode(\"i\", {\n    class: \"far fa-smile\"\n  }, null, -1 /* HOISTED */)]))]), _createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.sendMessage && $options.sendMessage(...args)),\n    disabled: $data.newMessage.trim() === '' && $data.selectedFiles.length === 0 || $data.loading\n  }, _toDisplayString($data.loading ? 'Отправка...' : 'Отправить'), 9 /* TEXT, PROPS */, _hoisted_37)]), $data.showDeleteModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_38, [_createElementVNode(\"div\", _hoisted_39, [_cache[20] || (_cache[20] = _createElementVNode(\"h3\", null, \"Подтверждение удаления\", -1 /* HOISTED */)), _cache[21] || (_cache[21] = _createElementVNode(\"p\", null, \"Вы действительно хотите удалить это сообщение?\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_40, [_createElementVNode(\"button\", {\n    onClick: _cache[7] || (_cache[7] = (...args) => $options.deleteMessage && $options.deleteMessage(...args)),\n    class: \"delete-confirm-btn\"\n  }, \"Удалить\"), _createElementVNode(\"button\", {\n    onClick: _cache[8] || (_cache[8] = (...args) => $options.cancelDelete && $options.cancelDelete(...args)),\n    class: \"cancel-btn\"\n  }, \"Отмена\")])])])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_41, [_cache[27] || (_cache[27] = _createElementVNode(\"h3\", null, \"Участники чата\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_42, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.activeUsers, user => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: user.id,\n      class: \"user-item\",\n      onClick: $event => $options.showUserMenu(user, $event)\n    }, [user.avatar_url ? (_openBlock(), _createElementBlock(\"div\", _hoisted_44, [_createElementVNode(\"img\", {\n      src: `http://localhost:8000${user.avatar_url}`,\n      alt: \"Аватар\"\n    }, null, 8 /* PROPS */, _hoisted_45)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_46, [...(_cache[22] || (_cache[22] = [_createElementVNode(\"svg\", {\n      viewBox: \"0 0 24 24\",\n      fill: \"currentColor\"\n    }, [_createElementVNode(\"path\", {\n      d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n    })], -1 /* HOISTED */)]))])), _createElementVNode(\"div\", _hoisted_47, [_cache[23] || (_cache[23] = _createElementVNode(\"span\", {\n      class: \"user-status\"\n    }, null, -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_48, _toDisplayString(user.username), 1 /* TEXT */), $data.unreadCounts[user.id] ? (_openBlock(), _createElementBlock(\"span\", {\n      key: 0,\n      class: \"unread-badge\",\n      onClick: _withModifiers($event => $options.openPrivateChat(user), [\"stop\"])\n    }, _toDisplayString($data.unreadCounts[user.id]), 9 /* TEXT, PROPS */, _hoisted_49)) : _createCommentVNode(\"v-if\", true)])], 8 /* PROPS */, _hoisted_43);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" Контекстное меню пользователя \"), $data.showContextMenu ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"user-context-menu\",\n    style: _normalizeStyle({\n      top: $data.contextMenuPosition.y + 'px',\n      left: $data.contextMenuPosition.x + 'px'\n    })\n  }, [_createElementVNode(\"div\", {\n    class: \"menu-item\",\n    onClick: _cache[9] || (_cache[9] = (...args) => $options.mentionUser && $options.mentionUser(...args))\n  }, _cache[24] || (_cache[24] = [_createElementVNode(\"i\", {\n    class: \"fas fa-at\"\n  }, null, -1 /* HOISTED */), _createTextVNode(\" Упомянуть \")])), _createElementVNode(\"div\", {\n    class: \"menu-item\",\n    onClick: _cache[10] || (_cache[10] = (...args) => $options.sendPrivateMessage && $options.sendPrivateMessage(...args))\n  }, _cache[25] || (_cache[25] = [_createElementVNode(\"i\", {\n    class: \"fas fa-envelope\"\n  }, null, -1 /* HOISTED */), _createTextVNode(\" Личное сообщение \")])), _createElementVNode(\"div\", {\n    class: \"menu-item\",\n    onClick: _cache[11] || (_cache[11] = (...args) => $options.viewProfile && $options.viewProfile(...args))\n  }, _cache[26] || (_cache[26] = [_createElementVNode(\"i\", {\n    class: \"fas fa-user\"\n  }, null, -1 /* HOISTED */), _createTextVNode(\" Просмотреть профиль \")]))], 4 /* STYLE */)) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" Добавляем всплывающие чаты \"), _createElementVNode(\"div\", _hoisted_50, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.activeChats, chat => {\n    return _openBlock(), _createBlock(_component_PopupChat, {\n      key: chat.userId,\n      \"receiver-id\": chat.userId,\n      onClose: $event => $options.closeChat(chat.userId)\n    }, null, 8 /* PROPS */, [\"receiver-id\", \"onClose\"]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" Добавляем кнопку для открытия всех личных сообщений \"), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"messages-button\", {\n      active: $data.showAllMessages\n    }]),\n    onClick: _cache[12] || (_cache[12] = (...args) => $options.toggleAllMessages && $options.toggleAllMessages(...args))\n  }, [_cache[28] || (_cache[28] = _createElementVNode(\"i\", {\n    class: \"fas fa-envelope\"\n  }, null, -1 /* HOISTED */)), $options.totalUnreadCount ? (_openBlock(), _createElementBlock(\"span\", _hoisted_51, _toDisplayString($options.totalUnreadCount), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 2 /* CLASS */), _createCommentVNode(\" Добавляем панель со всеми личными сообщениями \"), $data.showAllMessages ? (_openBlock(), _createElementBlock(\"div\", _hoisted_52, [_createElementVNode(\"div\", _hoisted_53, [_cache[29] || (_cache[29] = _createElementVNode(\"h3\", null, \"Личные сообщения\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    class: \"close-btn\",\n    onClick: _cache[13] || (_cache[13] = $event => $data.showAllMessages = false)\n  }, \"✕\")]), _createElementVNode(\"div\", _hoisted_54, [$data.privateChats.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_55, \" У вас пока нет личных сообщений \")) : (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 1\n  }, _renderList($data.privateChats, chat => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: chat.userId,\n      class: \"chat-item\",\n      onClick: $event => $options.openPrivateChat(chat.user)\n    }, [_createElementVNode(\"div\", _hoisted_57, [chat.user.avatar_url ? (_openBlock(), _createElementBlock(\"div\", _hoisted_58, [_createElementVNode(\"img\", {\n      src: `http://localhost:8000${chat.user.avatar_url}`,\n      alt: \"Аватар\"\n    }, null, 8 /* PROPS */, _hoisted_59)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_60, [...(_cache[30] || (_cache[30] = [_createElementVNode(\"svg\", {\n      viewBox: \"0 0 24 24\",\n      fill: \"currentColor\"\n    }, [_createElementVNode(\"path\", {\n      d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n    })], -1 /* HOISTED */)]))]))]), _createElementVNode(\"div\", _hoisted_61, [_createElementVNode(\"div\", _hoisted_62, [_createElementVNode(\"span\", _hoisted_63, _toDisplayString(chat.user.username), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_64, _toDisplayString($options.formatDate(chat.lastMessage.created_at)), 1 /* TEXT */)]), _createElementVNode(\"div\", {\n      class: _normalizeClass([\"last-message\", {\n        unread: chat.unreadCount\n      }])\n    }, _toDisplayString(chat.lastMessage.content), 3 /* TEXT, CLASS */)]), chat.unreadCount ? (_openBlock(), _createElementBlock(\"div\", _hoisted_65, _toDisplayString(chat.unreadCount), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 8 /* PROPS */, _hoisted_56);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","ref","key","title","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","$data","messages","length","_hoisted_4","_Fragment","_renderList","$options","sortedMessages","message","id","_hoisted_5","_hoisted_6","avatar_url","_hoisted_7","src","alt","_hoisted_8","_hoisted_9","_cache","viewBox","fill","d","_hoisted_10","_toDisplayString","username","_hoisted_11","_hoisted_12","formatDate","created_at","canDeleteMessage","onClick","$event","confirmDelete","_hoisted_13","_createCommentVNode","_hoisted_14","content","_hoisted_15","attachments","_hoisted_16","attachment","index","href","file_path","target","file_name","formatFileSize","file_size","_hoisted_17","_hoisted_18","showMentionPopup","_hoisted_19","filteredUsers","user","selectMention","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_20","showEmojiPicker","_hoisted_25","_hoisted_26","emojiCategories","category","name","currentCategory","_normalizeClass","active","icon","_hoisted_27","_hoisted_28","currentEmojis","emoji","addEmoji","_hoisted_29","selectedFiles","_hoisted_30","file","_hoisted_31","_hoisted_32","size","removeFile","_hoisted_33","_hoisted_34","newMessage","onKeyup","_withKeys","args","sendMessage","onInput","handleInput","onKeydown","handleKeydown","placeholder","disabled","loading","_hoisted_35","_hoisted_36","type","multiple","onChange","handleFileSelect","accept","style","_withModifiers","toggleEmojiPicker","trim","_hoisted_37","showDeleteModal","_hoisted_38","_hoisted_39","_hoisted_40","deleteMessage","cancelDelete","_hoisted_41","_hoisted_42","activeUsers","showUserMenu","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_48","unreadCounts","openPrivateChat","_hoisted_49","_hoisted_43","showContextMenu","_normalizeStyle","top","contextMenuPosition","y","left","x","mentionUser","_createTextVNode","sendPrivateMessage","viewProfile","_hoisted_50","activeChats","chat","_createBlock","_component_PopupChat","userId","onClose","closeChat","showAllMessages","toggleAllMessages","totalUnreadCount","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","privateChats","_hoisted_55","_hoisted_57","_hoisted_58","_hoisted_59","_hoisted_60","_hoisted_61","_hoisted_62","_hoisted_63","_hoisted_64","lastMessage","unread","unreadCount","_hoisted_65","_hoisted_56"],"sources":["/home/dotcore/ichat/frontend/src/components/Chat.vue"],"sourcesContent":["<template>\n  <div class=\"chat-container\">\n    <div class=\"chat\">\n      <div class=\"chat-messages\" ref=\"messagesContainer\">\n        <div v-if=\"messages.length === 0\" class=\"no-messages\">\n          Нет сообщений\n        </div>\n        <div v-else v-for=\"message in sortedMessages\" :key=\"message.id\" class=\"message\">\n          <div class=\"message-header\">\n            <div class=\"user-info\">\n              <div v-if=\"message.avatar_url\" class=\"message-avatar\">\n                <img \n                  :src=\"`http://localhost:8000${message.avatar_url}`\" \n                  alt=\"Аватар\"\n                >\n              </div>\n              <div v-else class=\"message-avatar default-avatar\">\n                <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                  <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"/>\n                </svg>\n              </div>\n              <span class=\"username\">{{ message.username }}</span>\n            </div>\n            <div class=\"message-controls\">\n              <span class=\"timestamp\">{{ formatDate(message.created_at) }}</span>\n              <button \n                v-if=\"canDeleteMessage(message)\" \n                @click=\"confirmDelete(message)\"\n                class=\"control-btn delete-btn\"\n              >\n                ✕\n              </button>\n            </div>\n          </div>\n          <div class=\"message-content\">\n            <div v-if=\"message.content\" class=\"message-text\">\n              {{ message.content }}\n            </div>\n            <div v-if=\"message.attachments && message.attachments.length > 0\" class=\"message-attachments\">\n              <div v-for=\"(attachment, index) in message.attachments\" :key=\"index\" class=\"attachment\">\n                <i class=\"fas fa-file\"></i>\n                <a \n                  :href=\"`http://localhost:8000${attachment.file_path}`\" \n                  target=\"_blank\"\n                  class=\"attachment-link\"\n                >\n                  {{ attachment.file_name }} ({{ formatFileSize(attachment.file_size) }})\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"chat-input\">\n        <div class=\"mention-popup\" v-if=\"showMentionPopup\" ref=\"mentionPopup\">\n          <div \n            v-for=\"user in filteredUsers\" \n            :key=\"user.id\" \n            class=\"mention-item\"\n            @click=\"selectMention(user)\"\n          >\n            <div v-if=\"user.avatar_url\" class=\"mention-avatar\">\n              <img :src=\"`http://localhost:8000${user.avatar_url}`\" alt=\"Аватар\">\n            </div>\n            <div v-else class=\"mention-avatar default-avatar\">\n              <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"/>\n              </svg>\n            </div>\n            <span class=\"mention-username\">{{ user.username }}</span>\n          </div>\n        </div>\n        \n        <!-- Добавляем панель эмодзи -->\n        <div v-if=\"showEmojiPicker\" class=\"emoji-picker\" ref=\"emojiPicker\">\n          <div class=\"emoji-categories\">\n            <button \n              v-for=\"(category, name) in emojiCategories\" \n              :key=\"name\"\n              @click=\"currentCategory = name\"\n              :class=\"{ active: currentCategory === name }\"\n            >\n              {{ category.icon }}\n            </button>\n          </div>\n          <div class=\"emoji-list\">\n            <button \n              v-for=\"emoji in currentEmojis\" \n              :key=\"emoji\"\n              @click=\"addEmoji(emoji)\"\n              class=\"emoji-button\"\n            >\n              {{ emoji }}\n            </button>\n          </div>\n        </div>\n\n        <!-- Добавляем превью выбранных файлов -->\n        <div v-if=\"selectedFiles.length > 0\" class=\"selected-files\">\n          <div v-for=\"(file, index) in selectedFiles\" :key=\"index\" class=\"file-preview\">\n            <i class=\"fas fa-paperclip\"></i>\n            <span class=\"file-name\">{{ file.name }}</span>\n            <span class=\"file-size\">({{ formatFileSize(file.size) }})</span>\n            <button class=\"remove-file\" @click=\"removeFile(index)\">✕</button>\n          </div>\n        </div>\n\n        <div class=\"input-wrapper\">\n          <input \n            v-model=\"newMessage\" \n            @keyup.enter=\"sendMessage\"\n            @input=\"handleInput\"\n            @keydown=\"handleKeydown\"\n            placeholder=\"Введите сообщение...\"\n            :disabled=\"loading\"\n            ref=\"messageInput\"\n          >\n          <label class=\"attachment-trigger\" title=\"Прикрепить файлы\">\n            <i class=\"fas fa-paperclip\"></i>\n            <input \n              type=\"file\" \n              multiple \n              @change=\"handleFileSelect\" \n              ref=\"fileInput\"\n              accept=\"*/*\"\n              style=\"display: none;\"\n            >\n          </label>\n          <span \n            class=\"emoji-trigger\"\n            @click.stop=\"toggleEmojiPicker\"\n            title=\"Добавить эмодзи\"\n          >\n            <i class=\"far fa-smile\"></i>\n          </span>\n        </div>\n\n        <button \n          @click=\"sendMessage\" \n          :disabled=\"(newMessage.trim() === '' && selectedFiles.length === 0) || loading\"\n        >\n          {{ loading ? 'Отправка...' : 'Отправить' }}\n        </button>\n      </div>\n\n      <div v-if=\"showDeleteModal\" class=\"modal\">\n        <div class=\"modal-content\">\n          <h3>Подтверждение удаления</h3>\n          <p>Вы действительно хотите удалить это сообщение?</p>\n          <div class=\"modal-buttons\">\n            <button @click=\"deleteMessage\" class=\"delete-confirm-btn\">Удалить</button>\n            <button @click=\"cancelDelete\" class=\"cancel-btn\">Отмена</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"users-list\">\n      <h3>Участники чата</h3>\n      <div class=\"users\">\n        <div v-for=\"user in activeUsers\" :key=\"user.id\" class=\"user-item\" @click=\"showUserMenu(user, $event)\">\n          <div v-if=\"user.avatar_url\" class=\"user-avatar\">\n            <img \n              :src=\"`http://localhost:8000${user.avatar_url}`\" \n              alt=\"Аватар\"\n            >\n          </div>\n          <div v-else class=\"user-avatar default-avatar\">\n            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"/>\n            </svg>\n          </div>\n          <div class=\"user-info-container\">\n            <span class=\"user-status\"></span>\n            <span class=\"user-name\">{{ user.username }}</span>\n            <span \n              v-if=\"unreadCounts[user.id]\" \n              class=\"unread-badge\"\n              @click.stop=\"openPrivateChat(user)\"\n            >\n              {{ unreadCounts[user.id] }}\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <!-- Контекстное меню пользователя -->\n      <div v-if=\"showContextMenu\" \n           class=\"user-context-menu\"\n           :style=\"{ top: contextMenuPosition.y + 'px', left: contextMenuPosition.x + 'px' }\">\n        <div class=\"menu-item\" @click=\"mentionUser\">\n          <i class=\"fas fa-at\"></i> Упомянуть\n        </div>\n        <div class=\"menu-item\" @click=\"sendPrivateMessage\">\n          <i class=\"fas fa-envelope\"></i> Личное сообщение\n        </div>\n        <div class=\"menu-item\" @click=\"viewProfile\">\n          <i class=\"fas fa-user\"></i> Просмотреть профиль\n        </div>\n      </div>\n    </div>\n\n    <!-- Добавляем всплывающие чаты -->\n    <div class=\"popup-chats\">\n      <PopupChat\n        v-for=\"chat in activeChats\"\n        :key=\"chat.userId\"\n        :receiver-id=\"chat.userId\"\n        @close=\"closeChat(chat.userId)\"\n      />\n    </div>\n\n    <!-- Добавляем кнопку для открытия всех личных сообщений -->\n    <div class=\"messages-button\" @click=\"toggleAllMessages\" :class=\"{ active: showAllMessages }\">\n      <i class=\"fas fa-envelope\"></i>\n      <span v-if=\"totalUnreadCount\" class=\"total-unread\">{{ totalUnreadCount }}</span>\n    </div>\n\n    <!-- Добавляем панель со всеми личными сообщениями -->\n    <div v-if=\"showAllMessages\" class=\"all-messages-panel\">\n      <div class=\"panel-header\">\n        <h3>Личные сообщения</h3>\n        <button class=\"close-btn\" @click=\"showAllMessages = false\">✕</button>\n      </div>\n      <div class=\"messages-list\">\n        <div v-if=\"privateChats.length === 0\" class=\"no-chats\">\n          У вас пока нет личных сообщений\n        </div>\n        <div v-else v-for=\"chat in privateChats\" :key=\"chat.userId\" class=\"chat-item\" @click=\"openPrivateChat(chat.user)\">\n          <div class=\"chat-avatar\">\n            <div v-if=\"chat.user.avatar_url\" class=\"user-avatar\">\n              <img :src=\"`http://localhost:8000${chat.user.avatar_url}`\" alt=\"Аватар\">\n            </div>\n            <div v-else class=\"default-avatar\">\n              <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"/>\n              </svg>\n            </div>\n          </div>\n          <div class=\"chat-info\">\n            <div class=\"chat-header\">\n              <span class=\"username\">{{ chat.user.username }}</span>\n              <span class=\"timestamp\">{{ formatDate(chat.lastMessage.created_at) }}</span>\n            </div>\n            <div class=\"last-message\" :class=\"{ unread: chat.unreadCount }\">\n              {{ chat.lastMessage.content }}\n            </div>\n          </div>\n          <div v-if=\"chat.unreadCount\" class=\"unread-count\">\n            {{ chat.unreadCount }}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { axiosInstance } from '../store/modules/auth'\nimport PopupChat from './PopupChat.vue'\n\nexport default {\n  name: 'Chat',\n  components: {\n    PopupChat\n  },\n  data() {\n    return {\n      messages: [],\n      newMessage: '',\n      polling: null,\n      loading: false,\n      error: null,\n      showDeleteModal: false,\n      messageToDelete: null,\n      activeUsers: [],\n      showContextMenu: false,\n      contextMenuPosition: { x: 0, y: 0 },\n      selectedUser: null,\n      activeChats: [],\n      unreadCounts: {},\n      unreadPolling: null,\n      readMessagesByUser: {},\n      showAllMessages: false,\n      privateChats: [],\n      showMentionPopup: false,\n      mentionFilter: '',\n      mentionStartIndex: -1,\n      showEmojiPicker: false,\n      currentCategory: 'smileys',\n      emojiCategories: {\n        smileys: {\n          icon: '😊',\n          emojis: ['😀', '😊', '😅', '😂', '🤣', '😇', '🙂', '😉', '😍', '🥰', '😘', '😋', '😜', '😴', '😎']\n        },\n        hearts: {\n          icon: '❤️',\n          emojis: ['❤️', '🧡', '💛', '💚', '💙', '💜', '🖤', '🤍', '💯', '💢', '💥', '✨', '💫', '💝', '💕']\n        },\n        hands: {\n          icon: '👍',\n          emojis: ['👍', '👎', '👌', '✌️', '🤞', '👊', '🤝', '🙏', '💪', '🤲', '👐', '🙌', '👏', '🤌', '🫶']\n        }\n      },\n      showReactionPickerFor: null,\n      quickReactions: ['👍', '❤️', '😊', '😂', '😮', '😢', '👏', '🎉'],\n      selectedFiles: [],\n      isFirstLoad: true,\n    }\n  },\n  computed: {\n    userId() {\n      return this.$store.state.auth.userId\n    },\n    totalUnreadCount() {\n      return Object.values(this.unreadCounts).reduce((sum, count) => sum + count, 0)\n    },\n    filteredUsers() {\n      if (!this.mentionFilter) return this.activeUsers\n      const filter = this.mentionFilter.toLowerCase()\n      return this.activeUsers.filter(user => \n        user.username.toLowerCase().includes(filter)\n      )\n    },\n    sortedMessages() {\n      return [...this.messages].sort((a, b) => {\n        return new Date(a.created_at) - new Date(b.created_at)\n      })\n    },\n    currentEmojis() {\n      return this.emojiCategories[this.currentCategory].emojis\n    }\n  },\n  async created() {\n    await this.loadMessages()\n    await this.loadActiveUsers()\n    this.startPolling()\n    this.startUsersPolling()\n    this.startActivityTracking()\n    await this.updateUserActivity()\n    this.startUnreadPolling()\n  },\n  beforeUnmount() {\n    this.stopPolling()\n    this.stopUsersPolling()\n    this.stopActivityTracking()\n    document.removeEventListener('click', this.hideContextMenu)\n    this.stopUnreadPolling()\n    document.removeEventListener('click', this.handleClickOutside)\n  },\n  mounted() {\n    // Закрываем меню при клике вне его\n    document.addEventListener('click', this.hideContextMenu)\n    document.addEventListener('click', this.handleClickOutside)\n  },\n  methods: {\n    startPolling() {\n      this.pollInterval = setInterval(async () => {\n        await this.loadMessages()\n        // Убираем автопрокрутку при обновлении через polling\n      }, 3000)\n    },\n    stopPolling() {\n      if (this.pollInterval) {\n        clearInterval(this.pollInterval)\n        this.pollInterval = null\n      }\n    },\n    async loadMessages() {\n      try {\n        const response = await axiosInstance.get('/messages')\n        if (response.data) {\n          this.messages = response.data\n          // Прокручиваем только при первой загрузке\n          if (this.isFirstLoad) {\n            this.$nextTick(() => {\n              this.scrollToBottom()\n              this.isFirstLoad = false\n            })\n          }\n        }\n      } catch (error) {\n        console.error('Error loading messages:', error)\n      }\n    },\n    async sendMessage() {\n      if ((this.newMessage.trim() === '' && this.selectedFiles.length === 0) || this.loading) return\n\n      this.loading = true\n      try {\n        let attachments = []\n        \n        if (this.selectedFiles.length > 0) {\n          const formData = new FormData()\n          this.selectedFiles.forEach(file => {\n            formData.append('files', file)\n          })\n\n          const response = await axiosInstance.post('/messages/attachments', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data',\n              'X-Current-User-Id': this.userId\n            }\n          })\n          attachments = response.data.attachments\n        }\n\n        const messageData = {\n          content: this.newMessage.trim() || '',\n          user_id: parseInt(this.userId),\n          attachments: attachments\n        }\n        \n        await axiosInstance.post('/messages', messageData)\n        await this.updateUserActivity()\n        this.newMessage = ''\n        this.selectedFiles = []\n        this.$refs.fileInput.value = ''\n        await this.loadMessages()\n        // Прокручиваем к низу только при отправке своего сообщения\n        this.scrollToBottom()\n      } catch (error) {\n        console.error('Error sending message:', error)\n        alert('Ошибка при отправке сообщения')\n      } finally {\n        this.loading = false\n      }\n    },\n    formatDate(dateStr) {\n      if (!dateStr) return ''\n      try {\n        const date = new Date(dateStr)\n        return date.toLocaleString('ru-RU', {\n          year: 'numeric',\n          month: '2-digit',\n          day: '2-digit',\n          hour: '2-digit',\n          minute: '2-digit',\n          timeZone: 'Europe/Moscow'\n        })\n      } catch (e) {\n        console.error('Error formatting date:', e)\n        return 'Некорректная дата'\n      }\n    },\n    scrollToBottom() {\n      const container = this.$refs.messagesContainer\n      if (container) {\n        container.scrollTo({\n          top: container.scrollHeight,\n          behavior: 'smooth'\n        })\n      }\n    },\n    canDeleteMessage(message) {\n      return message.user_id === parseInt(this.userId)\n    },\n    confirmDelete(message) {\n      this.messageToDelete = message\n      this.showDeleteModal = true\n    },\n    cancelDelete() {\n      this.messageToDelete = null\n      this.showDeleteModal = false\n    },\n    async deleteMessage() {\n      if (!this.messageToDelete) return\n\n      try {\n        await axiosInstance.delete(`/messages/${this.messageToDelete.id}?current_user_id=${this.userId}`)\n        await this.loadMessages()\n        this.showDeleteModal = false\n        this.messageToDelete = null\n      } catch (error) {\n        console.error('Error deleting message:', error)\n        alert('Ошибка при удалении сообщения')\n      }\n    },\n    async loadActiveUsers() {\n      try {\n        const response = await axiosInstance.get('/users/active')\n        this.activeUsers = response.data\n      } catch (error) {\n        console.error('Error loading active users:', error)\n      }\n    },\n    startUsersPolling() {\n      this.usersPolling = setInterval(this.loadActiveUsers, 10000)\n    },\n    stopUsersPolling() {\n      if (this.usersPolling) {\n        clearInterval(this.usersPolling)\n        this.usersPolling = null\n      }\n    },\n    async updateUserActivity() {\n      try {\n        await axiosInstance.post(`/users/${this.userId}/heartbeat`)\n      } catch (error) {\n        console.error('Error updating user activity:', error)\n      }\n    },\n    startActivityTracking() {\n      this.activityInterval = setInterval(this.updateUserActivity, 30000)\n      window.addEventListener('mousemove', this.updateUserActivity)\n      window.addEventListener('keydown', this.updateUserActivity)\n    },\n    stopActivityTracking() {\n      if (this.activityInterval) {\n        clearInterval(this.activityInterval)\n        this.activityInterval = null\n      }\n      window.removeEventListener('mousemove', this.updateUserActivity)\n      window.removeEventListener('keydown', this.updateUserActivity)\n    },\n    showUserMenu(user, event) {\n      event.preventDefault()\n      event.stopPropagation()\n      \n      this.selectedUser = user\n      this.contextMenuPosition = {\n        x: event.clientX,\n        y: event.clientY\n      }\n      this.showContextMenu = true\n    },\n    hideContextMenu(event) {\n      if (!event.target.closest('.user-context-menu')) {\n        this.showContextMenu = false\n      }\n    },\n    mentionUser() {\n      if (this.selectedUser) {\n        this.newMessage = `${this.newMessage}@${this.selectedUser.username} `\n        this.$refs.messageInput?.focus()\n      }\n      this.showContextMenu = false\n    },\n    async openPrivateChat(user) {\n      const userId = user.id\n      if (!this.activeChats.find(chat => chat.userId === userId)) {\n        this.activeChats.push({ userId })\n        \n        try {\n          const response = await axiosInstance.get(\n            `/private-messages/${userId}`,\n            { \n              headers: {\n                'X-Current-User-Id': this.userId\n              }\n            }\n          )\n          \n          const unreadMessages = response.data.filter(\n            msg => msg.receiver_id === this.userId && !msg.is_read\n          )\n          \n          // Отмечаем все непрочитанные сообщения как прочитанные\n          for (const msg of unreadMessages) {\n            await axiosInstance.put(\n              `/private-messages/${msg.id}/read`,\n              null,\n              {\n                headers: {\n                  'X-Current-User-Id': this.userId\n                }\n              }\n            )\n          }\n\n          // Сохраняем последнее прочитанное время для этого пользователя\n          this.readMessagesByUser[userId] = new Date().toISOString()\n          \n          await this.loadUnreadCounts()\n        } catch (error) {\n          console.error('Error marking messages as read:', error)\n        }\n      }\n      \n      // Закрываем окно списка личных сообщений\n      this.showAllMessages = false\n    },\n    sendPrivateMessage() {\n      this.openPrivateChat(this.selectedUser)\n      this.showContextMenu = false\n    },\n    viewProfile() {\n      this.$router.push(`/profile/${this.selectedUser.id}`)\n      this.showContextMenu = false\n    },\n    closeChat(userId) {\n      // Сохраняем время закрытия чата как время последнего прочтения\n      this.readMessagesByUser[userId] = new Date().toISOString()\n      this.activeChats = this.activeChats.filter(chat => chat.userId !== userId)\n      this.loadUnreadCounts()\n    },\n    async loadUnreadCounts() {\n      try {\n        const response = await axiosInstance.get('/private-messages-unread', {\n          headers: {\n            'X-Current-User-Id': this.userId\n          }\n        })\n        \n        // Получаем все сообщения для каждого пользователя с непрочитанными сообщениями\n        const counts = { ...response.data }\n        \n        // Проверяем каждого пользователя с непрочитанными сообщениями\n        for (const userId in counts) {\n          try {\n            const messagesResponse = await axiosInstance.get(\n              `/private-messages/${userId}`,\n              { \n                headers: {\n                  'X-Current-User-Id': this.userId\n                }\n              }\n            )\n            \n            // Фильтруем только те сообщения, которые пришли после последнего прочтения\n            const lastReadTime = this.readMessagesByUser[userId]\n            if (lastReadTime) {\n              const unreadCount = messagesResponse.data.filter(msg => \n                msg.receiver_id === this.userId && \n                msg.created_at > lastReadTime\n              ).length\n              \n              if (unreadCount === 0) {\n                delete counts[userId]\n              } else {\n                counts[userId] = unreadCount\n              }\n            }\n          } catch (error) {\n            console.error('Error loading messages for user:', userId, error)\n          }\n        }\n        \n        // Исключаем открытые чаты\n        this.activeChats.forEach(chat => {\n          delete counts[chat.userId]\n        })\n        \n        this.unreadCounts = counts\n      } catch (error) {\n        console.error('Error loading unread counts:', error)\n      }\n    },\n    startUnreadPolling() {\n      this.loadUnreadCounts()\n      this.unreadPolling = setInterval(this.loadUnreadCounts, 3000)\n    },\n    stopUnreadPolling() {\n      if (this.unreadPolling) {\n        clearInterval(this.unreadPolling)\n        this.unreadPolling = null\n      }\n    },\n    async toggleAllMessages() {\n      this.showAllMessages = !this.showAllMessages\n      if (this.showAllMessages) {\n        await this.loadPrivateChats()\n      }\n    },\n    async loadPrivateChats() {\n      try {\n        const response = await axiosInstance.get('/pm-chats', {\n          headers: {\n            'X-Current-User-Id': this.userId\n          }\n        })\n        this.privateChats = response.data\n        console.log('Loaded chats:', this.privateChats) // Для отладки\n      } catch (error) {\n        console.error('Error loading private chats:', error)\n      }\n    },\n    handleInput(event) {\n      const text = event.target.value\n      const lastAtIndex = text.lastIndexOf('@')\n      \n      if (lastAtIndex !== -1 && (lastAtIndex === 0 || text[lastAtIndex - 1] === ' ')) {\n        this.mentionStartIndex = lastAtIndex\n        this.mentionFilter = text.slice(lastAtIndex + 1)\n        this.showMentionPopup = true\n      } else if (this.showMentionPopup && this.mentionStartIndex !== -1) {\n        this.mentionFilter = text.slice(this.mentionStartIndex + 1)\n        if (!this.mentionFilter || text[this.mentionStartIndex] !== '@') {\n          this.closeMentionPopup()\n        }\n      }\n    },\n    handleKeydown(event) {\n      if (!this.showMentionPopup) return\n\n      if (event.key === 'Escape') {\n        this.closeMentionPopup()\n      }\n    },\n    selectMention(user) {\n      const beforeMention = this.newMessage.slice(0, this.mentionStartIndex)\n      const afterMention = this.newMessage.slice(this.mentionStartIndex + this.mentionFilter.length + 1)\n      this.newMessage = `${beforeMention}@${user.username} ${afterMention}`\n      this.closeMentionPopup()\n      this.$refs.messageInput.focus()\n    },\n    closeMentionPopup() {\n      this.showMentionPopup = false\n      this.mentionFilter = ''\n      this.mentionStartIndex = -1\n    },\n    toggleEmojiPicker() {\n      this.showEmojiPicker = !this.showEmojiPicker\n    },\n    addEmoji(emoji) {\n      const cursorPosition = this.$refs.messageInput.selectionStart\n      const textBeforeCursor = this.newMessage.slice(0, cursorPosition)\n      const textAfterCursor = this.newMessage.slice(cursorPosition)\n      this.newMessage = textBeforeCursor + emoji + textAfterCursor\n      \n      // Устанавливаем курсор после вставленного эмодзи\n      this.$nextTick(() => {\n        const newPosition = cursorPosition + emoji.length\n        this.$refs.messageInput.setSelectionRange(newPosition, newPosition)\n        this.$refs.messageInput.focus()\n      })\n    },\n    handleClickOutside(event) {\n      const emojiPicker = this.$refs.emojiPicker\n      const emojiTrigger = event.target.closest('.emoji-trigger')\n      \n      if (emojiPicker && !emojiPicker.contains(event.target) && !emojiTrigger) {\n        this.showEmojiPicker = false\n      }\n    },\n    handleFileSelect(event) {\n      const files = Array.from(event.target.files)\n      if (files.length > 3) {\n        alert('Можно прикрепить максимум 3 файла')\n        this.$refs.fileInput.value = ''\n        return\n      }\n\n      const totalSize = files.reduce((sum, file) => sum + file.size, 0)\n      const maxSize = 10 * 1024 * 1024 // 10MB\n\n      for (const file of files) {\n        if (file.size > maxSize) {\n          alert(`Файл ${file.name} превышает максимальный размер 10MB`)\n          this.$refs.fileInput.value = ''\n          return\n        }\n      }\n\n      this.selectedFiles = files\n    },\n    removeFile(index) {\n      this.selectedFiles.splice(index, 1)\n      if (this.selectedFiles.length === 0) {\n        this.$refs.fileInput.value = ''\n      }\n    },\n    formatFileSize(bytes) {\n      if (bytes === 0) return '0 Bytes'\n      const k = 1024\n      const sizes = ['Bytes', 'KB', 'MB', 'GB']\n      const i = Math.floor(Math.log(bytes) / Math.log(k))\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n    },\n  }\n}\n</script>\n\n<style scoped>\n.chat-container {\n  display: flex;\n  gap: 20px;\n  height: calc(100vh - 100px);\n  padding: 20px;\n}\n\n.chat {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n}\n\n.chat-messages {\n  flex-grow: 1;\n  overflow-y: auto;\n  margin-bottom: 20px;\n  padding: 10px;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.no-messages {\n  text-align: center;\n  color: #666;\n  padding: 20px;\n}\n\n.message {\n  margin-bottom: 15px;\n  padding: 10px;\n  background: #f5f5f5;\n  border-radius: 4px;\n  position: relative;\n}\n\n.message-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 5px;\n}\n\n.message-controls {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.user-info {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.message-avatar,\n.user-avatar {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  overflow: hidden;\n  flex-shrink: 0;\n}\n\n.message-avatar img,\n.user-avatar img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.default-avatar {\n  background-color: #e0e0e0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n}\n\n.default-avatar svg {\n  width: 24px;\n  height: 24px;\n  color: #757575;\n}\n\n.username {\n  font-weight: bold;\n  color: #42b983;\n}\n\n.timestamp {\n  color: #666;\n  font-size: 0.8em;\n}\n\n.message-content {\n  margin-left: 50px;\n  word-break: break-word;\n}\n\n.message-text {\n  margin-bottom: 8px;\n}\n\n.message-attachments {\n  margin-top: 8px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.attachment {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 8px 12px;\n  background: #f8f9fa;\n  border-radius: 4px;\n  font-size: 0.9em;\n  transition: background-color 0.2s;\n}\n\n.attachment:hover {\n  background: #e9ecef;\n}\n\n.attachment i {\n  color: #6c757d;\n  font-size: 1.1em;\n}\n\n.attachment-link {\n  color: #0066cc;\n  text-decoration: none;\n  flex-grow: 1;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.attachment-link:hover {\n  text-decoration: underline;\n}\n\n.chat-input {\n  padding: 10px;\n  border-top: 1px solid #eee;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  position: relative;\n}\n\n.input-wrapper {\n  display: flex;\n  gap: 8px;\n  position: relative;\n}\n\n.selected-files {\n  position: absolute;\n  bottom: 100%;\n  left: 0;\n  right: 0;\n  padding: 4px 8px;\n  background: #f8f9fa;\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n  border: 1px solid #eee;\n  border-bottom: none;\n  font-size: 0.85em;\n}\n\n.file-preview {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  padding: 2px 0;\n  color: #666;\n}\n\n.file-preview i {\n  font-size: 0.9em;\n  color: #999;\n}\n\n.file-name {\n  max-width: 150px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.file-size {\n  color: #999;\n  font-size: 0.9em;\n}\n\n.remove-file {\n  background: none;\n  border: none;\n  color: #999;\n  cursor: pointer;\n  padding: 0;\n  font-size: 0.9em;\n  margin-left: auto;\n}\n\n.remove-file:hover {\n  color: #ff4444;\n}\n\n.emoji-trigger {\n  position: absolute;\n  right: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n  cursor: pointer;\n  color: #999;\n  transition: color 0.2s;\n  padding: 5px;\n}\n\n.emoji-trigger:hover {\n  color: #666;\n}\n\n.emoji-trigger i {\n  font-size: 1.2em;\n}\n\n.emoji-picker {\n  position: absolute;\n  bottom: 100%;\n  right: 0;\n  width: 300px;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);\n  margin-bottom: 10px;\n  padding: 10px;\n  z-index: 1000;\n}\n\n.mention-popup {\n  position: absolute;\n  bottom: 100%;\n  left: 0;\n  width: 200px;\n  max-height: 200px;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);\n  overflow-y: auto;\n  z-index: 1000;\n  margin-bottom: 5px;\n}\n\n.mention-item {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  padding: 8px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.mention-item:hover {\n  background-color: #f5f5f5;\n}\n\n.mention-avatar {\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  overflow: hidden;\n}\n\n.mention-avatar img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.mention-username {\n  font-size: 0.9em;\n  color: #333;\n}\n\n.chat-input button {\n  min-width: 100px;\n  padding: 10px 20px;\n  background: #42b983;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.chat-input button:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n\n.control-btn {\n  background: none;\n  border: none;\n  padding: 4px;\n  cursor: pointer;\n  opacity: 0.6;\n  transition: opacity 0.2s;\n  font-size: 14px;\n  color: #666;\n}\n\n.control-btn:hover {\n  opacity: 1;\n}\n\n.delete-btn {\n  background: none;\n  border: none;\n  color: #999;\n  cursor: pointer;\n  padding: 0 5px;\n  font-size: 1.2em;\n  line-height: 1;\n}\n\n.delete-btn:hover {\n  color: #ff4444;\n}\n\n.modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background: white;\n  padding: 20px;\n  border-radius: 8px;\n  width: 300px;\n  text-align: center;\n}\n\n.modal-buttons {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  margin-top: 20px;\n}\n\n.delete-confirm-btn {\n  background: #ff4444;\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.delete-confirm-btn:hover {\n  background: #ff2222;\n}\n\n.cancel-btn {\n  background: #666;\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.cancel-btn:hover {\n  background: #555;\n}\n\n.users-list {\n  width: 250px;\n  background: white;\n  border-radius: 8px;\n  padding: 15px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.users-list h3 {\n  margin: 0 0 15px 0;\n  color: #333;\n  font-size: 1.1em;\n  padding-bottom: 10px;\n  border-bottom: 1px solid #eee;\n}\n\n.users {\n  overflow-y: auto;\n  max-height: calc(100% - 50px);\n}\n\n.user-item {\n  display: flex;\n  align-items: center;\n  padding: 8px 0;\n  border-bottom: 1px solid #f5f5f5;\n  gap: 12px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.user-item:hover {\n  background-color: #f5f5f5;\n}\n\n.user-info-container {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  flex-grow: 1;\n  padding-right: 8px;\n}\n\n.user-status {\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background: #42b983;\n  flex-shrink: 0;\n}\n\n.user-name {\n  color: #333;\n  font-size: 0.9em;\n}\n\n.user-context-menu {\n  position: fixed;\n  background: white;\n  border-radius: 4px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  padding: 8px 0;\n  z-index: 1000;\n  min-width: 200px;\n}\n\n.menu-item {\n  padding: 8px 16px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  transition: background-color 0.2s;\n}\n\n.menu-item:hover {\n  background-color: #f5f5f5;\n}\n\n.menu-item i {\n  width: 16px;\n  color: #666;\n}\n\n.popup-chats {\n  position: fixed;\n  bottom: 0;\n  right: 0;\n  display: flex;\n  flex-direction: row-reverse;\n  gap: 20px;\n  padding: 0 20px;\n  pointer-events: none;\n}\n\n.popup-chats > * {\n  pointer-events: auto;\n}\n\n.unread-badge {\n  background-color: #ff4444;\n  color: white;\n  border-radius: 50%;\n  min-width: 20px;\n  height: 20px;\n  padding: 0 6px;\n  font-size: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: auto;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.unread-badge:hover {\n  background-color: #ff2222;\n}\n\n.messages-button {\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  background: #42b983;\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n  transition: transform 0.2s;\n  z-index: 1000;\n}\n\n.messages-button:hover {\n  transform: scale(1.1);\n}\n\n.messages-button.active {\n  background: #3aa876;\n}\n\n.messages-button i {\n  font-size: 24px;\n}\n\n.total-unread {\n  position: absolute;\n  top: -5px;\n  right: -5px;\n  background: #ff4444;\n  color: white;\n  border-radius: 50%;\n  min-width: 20px;\n  height: 20px;\n  padding: 0 6px;\n  font-size: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.all-messages-panel {\n  position: fixed;\n  bottom: 90px;\n  right: 20px;\n  width: 300px;\n  height: 400px;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  display: flex;\n  flex-direction: column;\n  z-index: 999;\n}\n\n.panel-header {\n  padding: 15px;\n  border-bottom: 1px solid #eee;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.panel-header h3 {\n  margin: 0;\n  color: #333;\n}\n\n.messages-list {\n  flex-grow: 1;\n  overflow-y: auto;\n  padding: 10px;\n}\n\n.chat-item {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  padding: 10px;\n  cursor: pointer;\n  border-radius: 4px;\n  transition: background-color 0.2s;\n}\n\n.chat-item:hover {\n  background-color: #f5f5f5;\n}\n\n.chat-avatar {\n  width: 40px;\n  height: 40px;\n  flex-shrink: 0;\n}\n\n.chat-info {\n  flex-grow: 1;\n  min-width: 0;\n}\n\n.chat-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 4px;\n}\n\n.chat-header .timestamp {\n  font-size: 0.8em;\n  color: #666;\n}\n\n.last-message {\n  color: #666;\n  font-size: 0.9em;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.last-message.unread {\n  color: #333;\n  font-weight: bold;\n}\n\n.unread-count {\n  background: #42b983;\n  color: white;\n  border-radius: 50%;\n  min-width: 20px;\n  height: 20px;\n  padding: 0 6px;\n  font-size: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.no-chats {\n  text-align: center;\n  color: #666;\n  padding: 20px;\n  font-style: italic;\n}\n\n.emoji-categories {\n  display: flex;\n  justify-content: space-around;\n  margin-bottom: 6px;\n  padding-bottom: 6px;\n  border-bottom: 1px solid #eee;\n}\n\n.emoji-categories button {\n  background: none;\n  border: none;\n  padding: 2px;\n  cursor: pointer;\n  font-size: 1em;\n  opacity: 0.6;\n  transition: opacity 0.2s;\n}\n\n.emoji-categories button:hover,\n.emoji-categories button.active {\n  opacity: 1;\n  background: none;\n}\n\n.emoji-list {\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  gap: 1px;\n  max-height: 150px;\n  overflow-y: auto;\n  padding: 2px;\n}\n\n.emoji-button {\n  background: none;\n  border: none;\n  padding: 2px;\n  cursor: pointer;\n  font-size: 1.2em;\n  transition: opacity 0.2s;\n  opacity: 0.8;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.emoji-button:hover {\n  opacity: 1;\n  background: none;\n}\n\n/* Стилизация скроллбара для более компактного вида */\n.emoji-list::-webkit-scrollbar {\n  width: 6px;\n}\n\n.emoji-list::-webkit-scrollbar-track {\n  background: #f1f1f1;\n  border-radius: 3px;\n}\n\n.emoji-list::-webkit-scrollbar-thumb {\n  background: #ddd;\n  border-radius: 3px;\n}\n\n.emoji-list::-webkit-scrollbar-thumb:hover {\n  background: #ccc;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}