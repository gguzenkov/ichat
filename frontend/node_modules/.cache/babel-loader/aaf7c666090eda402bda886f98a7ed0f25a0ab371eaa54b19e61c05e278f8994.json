{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"private-chat\"\n};\nconst _hoisted_2 = {\n  class: \"chat-header\"\n};\nconst _hoisted_3 = {\n  class: \"user-info\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"user-avatar\"\n};\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = {\n  key: 1,\n  class: \"user-avatar default-avatar\"\n};\nconst _hoisted_7 = {\n  class: \"username\"\n};\nconst _hoisted_8 = {\n  class: \"messages\",\n  ref: \"messagesContainer\"\n};\nconst _hoisted_9 = {\n  class: \"message-content\"\n};\nconst _hoisted_10 = {\n  class: \"message-info\"\n};\nconst _hoisted_11 = {\n  class: \"timestamp\"\n};\nconst _hoisted_12 = {\n  key: 0,\n  class: \"read-status\"\n};\nconst _hoisted_13 = {\n  class: \"input-area\"\n};\nconst _hoisted_14 = [\"disabled\"];\nconst _hoisted_15 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [$data.receiver.avatar_url ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"img\", {\n    src: `http://localhost:8000${$data.receiver.avatar_url}`,\n    alt: \"Аватар\"\n  }, null, 8 /* PROPS */, _hoisted_5)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _cache[4] || (_cache[4] = [_createElementVNode(\"svg\", {\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\"\n  }, [_createElementVNode(\"path\", {\n    d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n  })], -1 /* HOISTED */)]))), _createElementVNode(\"span\", _hoisted_7, _toDisplayString($data.receiver.username), 1 /* TEXT */)]), _createElementVNode(\"button\", {\n    class: \"close-btn\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$router.push('/chat'))\n  }, \"✕\")]), _createElementVNode(\"div\", _hoisted_8, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.messages, message => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: message.id,\n      class: _normalizeClass(['message', {\n        'own-message': message.sender_id === $options.currentUserId\n      }])\n    }, [_createElementVNode(\"div\", _hoisted_9, _toDisplayString(message.content), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"span\", _hoisted_11, _toDisplayString($options.formatDate(message.created_at)), 1 /* TEXT */), message.sender_id === $options.currentUserId ? (_openBlock(), _createElementBlock(\"span\", _hoisted_12, _toDisplayString(message.is_read ? '✓✓' : '✓'), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), _createElementVNode(\"div\", _hoisted_13, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newMessage = $event),\n    onKeyup: _cache[2] || (_cache[2] = _withKeys((...args) => $options.sendMessage && $options.sendMessage(...args), [\"enter\"])),\n    placeholder: \"Введите сообщение...\",\n    disabled: $data.loading\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_14), [[_vModelText, $data.newMessage]]), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.sendMessage && $options.sendMessage(...args)),\n    disabled: !$data.newMessage.trim() || $data.loading\n  }, _toDisplayString($data.loading ? 'Отправка...' : 'Отправить'), 9 /* TEXT, PROPS */, _hoisted_15)])]);\n}","map":{"version":3,"names":["class","key","ref","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","$data","receiver","avatar_url","_hoisted_4","src","alt","_hoisted_5","_hoisted_6","_cache","viewBox","fill","d","_hoisted_7","_toDisplayString","username","onClick","$event","_ctx","$router","push","_hoisted_8","_Fragment","_renderList","messages","message","id","_normalizeClass","sender_id","$options","currentUserId","_hoisted_9","content","_hoisted_10","_hoisted_11","formatDate","created_at","_hoisted_12","is_read","_createCommentVNode","_hoisted_13","newMessage","onKeyup","_withKeys","args","sendMessage","placeholder","disabled","loading","_hoisted_14","trim","_hoisted_15"],"sources":["/home/dotcore/ichat/frontend/src/components/PrivateChat.vue"],"sourcesContent":["<template>\n  <div class=\"private-chat\">\n    <div class=\"chat-header\">\n      <div class=\"user-info\">\n        <div v-if=\"receiver.avatar_url\" class=\"user-avatar\">\n          <img :src=\"`http://localhost:8000${receiver.avatar_url}`\" alt=\"Аватар\">\n        </div>\n        <div v-else class=\"user-avatar default-avatar\">\n          <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n            <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"/>\n          </svg>\n        </div>\n        <span class=\"username\">{{ receiver.username }}</span>\n      </div>\n      <button class=\"close-btn\" @click=\"$router.push('/chat')\">✕</button>\n    </div>\n\n    <div class=\"messages\" ref=\"messagesContainer\">\n      <div v-for=\"message in messages\" :key=\"message.id\" \n           :class=\"['message', { 'own-message': message.sender_id === currentUserId }]\">\n        <div class=\"message-content\">{{ message.content }}</div>\n        <div class=\"message-info\">\n          <span class=\"timestamp\">{{ formatDate(message.created_at) }}</span>\n          <span v-if=\"message.sender_id === currentUserId\" class=\"read-status\">\n            {{ message.is_read ? '✓✓' : '✓' }}\n          </span>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"input-area\">\n      <input \n        v-model=\"newMessage\" \n        @keyup.enter=\"sendMessage\"\n        placeholder=\"Введите сообщение...\"\n        :disabled=\"loading\"\n      >\n      <button @click=\"sendMessage\" :disabled=\"!newMessage.trim() || loading\">\n        {{ loading ? 'Отправка...' : 'Отправить' }}\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { axiosInstance } from '../store/modules/auth'\n\nexport default {\n  name: 'PrivateChat',\n  props: {\n    receiverId: {\n      type: [String, Number],\n      required: true\n    }\n  },\n  data() {\n    return {\n      messages: [],\n      newMessage: '',\n      loading: false,\n      receiver: {},\n      polling: null\n    }\n  },\n  computed: {\n    currentUserId() {\n      return this.$store.state.auth.userId\n    }\n  },\n  async created() {\n    await this.loadReceiverInfo()\n    await this.loadMessages()\n    this.startPolling()\n  },\n  beforeUnmount() {\n    this.stopPolling()\n  },\n  methods: {\n    async loadReceiverInfo() {\n      try {\n        const response = await axiosInstance.get(`/users/${this.receiverId}`)\n        this.receiver = response.data\n      } catch (error) {\n        console.error('Error loading receiver info:', error)\n      }\n    },\n    async loadMessages() {\n      try {\n        const response = await axiosInstance.get(`/private-messages/${this.receiverId}?current_user_id=${this.currentUserId}`)\n        this.messages = response.data\n        this.$nextTick(() => {\n          this.scrollToBottom()\n        })\n      } catch (error) {\n        console.error('Error loading messages:', error)\n      }\n    },\n    async sendMessage() {\n      if (!this.newMessage.trim() || this.loading) return\n\n      this.loading = true\n      try {\n        await axiosInstance.post('/private-messages', {\n          content: this.newMessage.trim(),\n          receiver_id: parseInt(this.receiverId)\n        })\n        this.newMessage = ''\n        await this.loadMessages()\n      } catch (error) {\n        console.error('Error sending message:', error)\n      } finally {\n        this.loading = false\n      }\n    },\n    startPolling() {\n      this.polling = setInterval(this.loadMessages, 3000)\n    },\n    stopPolling() {\n      if (this.polling) {\n        clearInterval(this.polling)\n        this.polling = null\n      }\n    },\n    scrollToBottom() {\n      const container = this.$refs.messagesContainer\n      if (container) {\n        container.scrollTop = container.scrollHeight\n      }\n    },\n    formatDate(dateStr) {\n      if (!dateStr) return ''\n      const date = new Date(dateStr)\n      return date.toLocaleString('ru-RU', {\n        hour: '2-digit',\n        minute: '2-digit'\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.private-chat {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.chat-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px;\n  border-bottom: 1px solid #eee;\n}\n\n.user-info {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.close-btn {\n  background: none;\n  border: none;\n  font-size: 20px;\n  color: #666;\n  cursor: pointer;\n}\n\n.messages {\n  flex-grow: 1;\n  overflow-y: auto;\n  padding: 15px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.message {\n  max-width: 70%;\n  padding: 10px;\n  border-radius: 8px;\n  background: #f5f5f5;\n}\n\n.own-message {\n  align-self: flex-end;\n  background: #e3f2fd;\n}\n\n.message-content {\n  margin-bottom: 5px;\n}\n\n.message-info {\n  display: flex;\n  justify-content: flex-end;\n  gap: 5px;\n  font-size: 0.8em;\n  color: #666;\n}\n\n.input-area {\n  padding: 15px;\n  border-top: 1px solid #eee;\n  display: flex;\n  gap: 10px;\n}\n\ninput {\n  flex-grow: 1;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\nbutton {\n  padding: 10px 20px;\n  background: #42b983;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:disabled {\n  background: #ccc;\n  cursor: not-allowed;\n}\n\n.read-status {\n  color: #42b983;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}