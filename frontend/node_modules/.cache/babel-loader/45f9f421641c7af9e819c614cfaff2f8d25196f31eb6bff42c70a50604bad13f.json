{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chat-container\"\n};\nconst _hoisted_2 = {\n  class: \"chat\"\n};\nconst _hoisted_3 = {\n  class: \"chat-messages\",\n  ref: \"messagesContainer\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"no-messages\"\n};\nconst _hoisted_5 = {\n  class: \"message-header\"\n};\nconst _hoisted_6 = {\n  class: \"username\"\n};\nconst _hoisted_7 = {\n  class: \"message-controls\"\n};\nconst _hoisted_8 = {\n  class: \"timestamp\"\n};\nconst _hoisted_9 = [\"onClick\"];\nconst _hoisted_10 = {\n  class: \"message-content\"\n};\nconst _hoisted_11 = {\n  class: \"chat-input\"\n};\nconst _hoisted_12 = [\"disabled\"];\nconst _hoisted_13 = [\"disabled\"];\nconst _hoisted_14 = {\n  key: 0,\n  class: \"modal\"\n};\nconst _hoisted_15 = {\n  class: \"modal-content\"\n};\nconst _hoisted_16 = {\n  class: \"modal-buttons\"\n};\nconst _hoisted_17 = {\n  class: \"users-list\"\n};\nconst _hoisted_18 = {\n  class: \"users\"\n};\nconst _hoisted_19 = {\n  class: \"user-name\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [$data.messages.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \" Нет сообщений \")) : (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 1\n  }, _renderList($data.messages, message => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: message.id,\n      class: \"message\"\n    }, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"span\", _hoisted_6, _toDisplayString(message.username), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"span\", _hoisted_8, _toDisplayString($options.formatDate(message.created_at)), 1 /* TEXT */), $options.canDeleteMessage(message) ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      onClick: $event => $options.confirmDelete(message),\n      class: \"delete-btn\"\n    }, \" ✕ \", 8 /* PROPS */, _hoisted_9)) : _createCommentVNode(\"v-if\", true)])]), _createElementVNode(\"div\", _hoisted_10, _toDisplayString(message.content), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), _createElementVNode(\"div\", _hoisted_11, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newMessage = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.sendMessage && $options.sendMessage(...args), [\"enter\"])),\n    placeholder: \"Введите сообщение...\",\n    disabled: $data.loading\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_12), [[_vModelText, $data.newMessage]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.sendMessage && $options.sendMessage(...args)),\n    disabled: !$data.newMessage.trim() || $data.loading\n  }, _toDisplayString($data.loading ? 'Отправка...' : 'Отправить'), 9 /* TEXT, PROPS */, _hoisted_13)]), $data.showDeleteModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [_createElementVNode(\"div\", _hoisted_15, [_cache[5] || (_cache[5] = _createElementVNode(\"h3\", null, \"Подтверждение удаления\", -1 /* HOISTED */)), _cache[6] || (_cache[6] = _createElementVNode(\"p\", null, \"Вы действительно хотите удалить это сообщение?\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.deleteMessage && $options.deleteMessage(...args)),\n    class: \"delete-confirm-btn\"\n  }, \"Удалить\"), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.cancelDelete && $options.cancelDelete(...args)),\n    class: \"cancel-btn\"\n  }, \"Отмена\")])])])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_17, [_cache[8] || (_cache[8] = _createElementVNode(\"h3\", null, \"Участники чата\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_18, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.activeUsers, user => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: user.id,\n      class: \"user-item\"\n    }, [_cache[7] || (_cache[7] = _createElementVNode(\"span\", {\n      class: \"user-status\"\n    }, null, -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_19, _toDisplayString(user.username), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","ref","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","$data","messages","length","_hoisted_4","_Fragment","_renderList","message","id","_hoisted_5","_hoisted_6","_toDisplayString","username","_hoisted_7","_hoisted_8","$options","formatDate","created_at","canDeleteMessage","onClick","$event","confirmDelete","_hoisted_9","_createCommentVNode","_hoisted_10","content","_hoisted_11","_cache","newMessage","onKeyup","_withKeys","args","sendMessage","placeholder","disabled","loading","_hoisted_12","trim","_hoisted_13","showDeleteModal","_hoisted_14","_hoisted_15","_hoisted_16","deleteMessage","cancelDelete","_hoisted_17","_hoisted_18","activeUsers","user","_hoisted_19"],"sources":["/home/dotcore/ichat/frontend/src/components/Chat.vue"],"sourcesContent":["<template>\n  <div class=\"chat-container\">\n    <div class=\"chat\">\n      <div class=\"chat-messages\" ref=\"messagesContainer\">\n        <div v-if=\"messages.length === 0\" class=\"no-messages\">\n          Нет сообщений\n        </div>\n        <div v-else v-for=\"message in messages\" :key=\"message.id\" class=\"message\">\n          <div class=\"message-header\">\n            <span class=\"username\">{{ message.username }}</span>\n            <div class=\"message-controls\">\n              <span class=\"timestamp\">{{ formatDate(message.created_at) }}</span>\n              <button \n                v-if=\"canDeleteMessage(message)\" \n                @click=\"confirmDelete(message)\"\n                class=\"delete-btn\"\n              >\n                ✕\n              </button>\n            </div>\n          </div>\n          <div class=\"message-content\">{{ message.content }}</div>\n        </div>\n      </div>\n      <div class=\"chat-input\">\n        <input \n          v-model=\"newMessage\" \n          @keyup.enter=\"sendMessage\"\n          placeholder=\"Введите сообщение...\"\n          :disabled=\"loading\"\n        >\n        <button @click=\"sendMessage\" :disabled=\"!newMessage.trim() || loading\">\n          {{ loading ? 'Отправка...' : 'Отправить' }}\n        </button>\n      </div>\n\n      <div v-if=\"showDeleteModal\" class=\"modal\">\n        <div class=\"modal-content\">\n          <h3>Подтверждение удаления</h3>\n          <p>Вы действительно хотите удалить это сообщение?</p>\n          <div class=\"modal-buttons\">\n            <button @click=\"deleteMessage\" class=\"delete-confirm-btn\">Удалить</button>\n            <button @click=\"cancelDelete\" class=\"cancel-btn\">Отмена</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"users-list\">\n      <h3>Участники чата</h3>\n      <div class=\"users\">\n        <div v-for=\"user in activeUsers\" :key=\"user.id\" class=\"user-item\">\n          <span class=\"user-status\"></span>\n          <span class=\"user-name\">{{ user.username }}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { axiosInstance } from '../store/modules/auth'\n\nexport default {\n  name: 'Chat',\n  data() {\n    return {\n      messages: [],\n      newMessage: '',\n      polling: null,\n      loading: false,\n      error: null,\n      showDeleteModal: false,\n      messageToDelete: null,\n      activeUsers: []\n    }\n  },\n  computed: {\n    userId() {\n      return this.$store.state.auth.userId\n    }\n  },\n  async created() {\n    await this.loadMessages()\n    await this.loadActiveUsers()\n    this.startPolling()\n    this.startUsersPolling()\n    this.startActivityTracking()\n    await this.updateUserActivity()\n  },\n  beforeUnmount() {\n    this.stopPolling()\n    this.stopUsersPolling()\n    this.stopActivityTracking()\n  },\n  methods: {\n    startPolling() {\n      this.polling = setInterval(this.loadMessages, 3000)\n    },\n    stopPolling() {\n      if (this.polling) {\n        clearInterval(this.polling)\n        this.polling = null\n      }\n    },\n    async loadMessages() {\n      try {\n        const response = await axiosInstance.get('/messages')\n        if (response.data) {\n          this.messages = response.data\n          this.$nextTick(() => {\n            this.scrollToBottom()\n          })\n        }\n      } catch (error) {\n        console.error('Error loading messages:', error)\n        this.error = 'Ошибка при загрузке сообщений'\n      }\n    },\n    async sendMessage() {\n      if (!this.newMessage.trim() || this.loading) return\n\n      this.loading = true\n      try {\n        const messageData = {\n          content: this.newMessage.trim(),\n          user_id: parseInt(this.userId)\n        }\n        await axiosInstance.post('/messages', messageData)\n        await this.updateUserActivity()\n        this.newMessage = ''\n        await this.loadMessages()\n      } catch (error) {\n        console.error('Error sending message:', error)\n        alert('Ошибка при отправке сообщения')\n      } finally {\n        this.loading = false\n      }\n    },\n    formatDate(dateStr) {\n      if (!dateStr) return ''\n      try {\n        const date = new Date(dateStr)\n        return date.toLocaleString('ru-RU', {\n          year: 'numeric',\n          month: '2-digit',\n          day: '2-digit',\n          hour: '2-digit',\n          minute: '2-digit',\n          timeZone: 'Europe/Moscow'\n        })\n      } catch (e) {\n        console.error('Error formatting date:', e)\n        return 'Некорректная дата'\n      }\n    },\n    scrollToBottom() {\n      const container = this.$refs.messagesContainer\n      if (container) {\n        container.scrollTop = container.scrollHeight\n      }\n    },\n    canDeleteMessage(message) {\n      return message.user_id === parseInt(this.userId)\n    },\n    confirmDelete(message) {\n      this.messageToDelete = message\n      this.showDeleteModal = true\n    },\n    cancelDelete() {\n      this.messageToDelete = null\n      this.showDeleteModal = false\n    },\n    async deleteMessage() {\n      if (!this.messageToDelete) return\n\n      try {\n        await axiosInstance.delete(`/messages/${this.messageToDelete.id}?current_user_id=${this.userId}`)\n        await this.loadMessages()\n        this.showDeleteModal = false\n        this.messageToDelete = null\n      } catch (error) {\n        console.error('Error deleting message:', error)\n        alert('Ошибка при удалении сообщения')\n      }\n    },\n    async loadActiveUsers() {\n      try {\n        const response = await axiosInstance.get('/users/active')\n        this.activeUsers = response.data\n      } catch (error) {\n        console.error('Error loading active users:', error)\n      }\n    },\n    startUsersPolling() {\n      this.usersPolling = setInterval(this.loadActiveUsers, 10000)\n    },\n    stopUsersPolling() {\n      if (this.usersPolling) {\n        clearInterval(this.usersPolling)\n        this.usersPolling = null\n      }\n    },\n    async updateUserActivity() {\n      try {\n        await axiosInstance.post(`/users/${this.userId}/heartbeat`)\n      } catch (error) {\n        console.error('Error updating user activity:', error)\n      }\n    },\n    startActivityTracking() {\n      this.activityInterval = setInterval(this.updateUserActivity, 30000)\n      window.addEventListener('mousemove', this.updateUserActivity)\n      window.addEventListener('keydown', this.updateUserActivity)\n    },\n    stopActivityTracking() {\n      if (this.activityInterval) {\n        clearInterval(this.activityInterval)\n        this.activityInterval = null\n      }\n      window.removeEventListener('mousemove', this.updateUserActivity)\n      window.removeEventListener('keydown', this.updateUserActivity)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.chat-container {\n  display: flex;\n  gap: 20px;\n  height: calc(100vh - 100px);\n  padding: 20px;\n}\n\n.chat {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n}\n\n.chat-messages {\n  flex-grow: 1;\n  overflow-y: auto;\n  margin-bottom: 20px;\n  padding: 10px;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.no-messages {\n  text-align: center;\n  color: #666;\n  padding: 20px;\n}\n\n.message {\n  margin-bottom: 15px;\n  padding: 10px;\n  background: #f5f5f5;\n  border-radius: 4px;\n}\n\n.message-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 5px;\n}\n\n.message-controls {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.username {\n  font-weight: bold;\n  color: #42b983;\n}\n\n.timestamp {\n  color: #666;\n  font-size: 0.8em;\n}\n\n.message-content {\n  word-break: break-word;\n}\n\n.chat-input {\n  display: flex;\n  gap: 10px;\n}\n\ninput {\n  flex-grow: 1;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\ninput:disabled {\n  background-color: #f5f5f5;\n  cursor: not-allowed;\n}\n\n.chat-input button {\n  min-width: 100px;\n  padding: 10px 20px;\n  background: #42b983;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.chat-input button:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n\n.delete-btn {\n  background: none;\n  border: none;\n  color: #999;\n  cursor: pointer;\n  padding: 0 5px;\n  font-size: 1.2em;\n  line-height: 1;\n}\n\n.delete-btn:hover {\n  color: #ff4444;\n}\n\n.modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background: white;\n  padding: 20px;\n  border-radius: 8px;\n  width: 300px;\n  text-align: center;\n}\n\n.modal-buttons {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  margin-top: 20px;\n}\n\n.delete-confirm-btn {\n  background: #ff4444;\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.delete-confirm-btn:hover {\n  background: #ff2222;\n}\n\n.cancel-btn {\n  background: #666;\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.cancel-btn:hover {\n  background: #555;\n}\n\n.users-list {\n  width: 250px;\n  background: white;\n  border-radius: 8px;\n  padding: 15px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.users-list h3 {\n  margin: 0 0 15px 0;\n  color: #333;\n  font-size: 1.1em;\n  padding-bottom: 10px;\n  border-bottom: 1px solid #eee;\n}\n\n.users {\n  overflow-y: auto;\n  max-height: calc(100% - 50px);\n}\n\n.user-item {\n  display: flex;\n  align-items: center;\n  padding: 8px 0;\n  border-bottom: 1px solid #f5f5f5;\n}\n\n.user-status {\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background: #42b983;\n  margin-right: 10px;\n}\n\n.user-name {\n  color: #333;\n  font-size: 0.9em;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}