{"ast":null,"code":"import { createStore } from 'vuex';\nimport axios from 'axios';\nconst API_URL = 'http://localhost:8000/api';\nexport default createStore({\n  state: {\n    auth: {\n      isAuthenticated: false,\n      user: null,\n      token: null\n    }\n  },\n  mutations: {\n    SET_AUTH(state, auth) {\n      state.auth = auth;\n    }\n  },\n  actions: {\n    async register({\n      commit\n    }, userData) {\n      try {\n        const response = await axios.post(`${API_URL}/register`, userData);\n        console.log('Registration successful:', response.data);\n        return true;\n      } catch (error) {\n        console.error('Register error:', error.response?.data || error.message);\n        throw error;\n      }\n    },\n    async login({\n      commit\n    }, credentials) {\n      try {\n        // Преобразуем данные в FormData для FastAPI\n        const formData = new FormData();\n        formData.append('username', credentials.username);\n        formData.append('password', credentials.password);\n        const response = await axios.post(`${API_URL}/login`, formData);\n        const {\n          access_token,\n          username\n        } = response.data;\n        commit('SET_AUTH', {\n          isAuthenticated: true,\n          user: username,\n          token: access_token\n        });\n\n        // Сохраняем токен для последующих запросов\n        axios.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n        return true;\n      } catch (error) {\n        console.error('Login error:', error.response?.data || error.message);\n        throw error;\n      }\n    },\n    logout({\n      commit\n    }) {\n      commit('SET_AUTH', {\n        isAuthenticated: false,\n        user: null,\n        token: null\n      });\n      delete axios.defaults.headers.common['Authorization'];\n    }\n  },\n  getters: {\n    isAuthenticated: state => state.auth.isAuthenticated,\n    currentUser: state => state.auth.user\n  }\n});","map":{"version":3,"names":["createStore","axios","API_URL","state","auth","isAuthenticated","user","token","mutations","SET_AUTH","actions","register","commit","userData","response","post","console","log","data","error","message","login","credentials","formData","FormData","append","username","password","access_token","defaults","headers","common","logout","getters","currentUser"],"sources":["/home/dotcore/ichat/frontend/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\nimport axios from 'axios'\n\nconst API_URL = 'http://localhost:8000/api'\n\nexport default createStore({\n  state: {\n    auth: {\n      isAuthenticated: false,\n      user: null,\n      token: null\n    }\n  },\n  mutations: {\n    SET_AUTH(state, auth) {\n      state.auth = auth\n    }\n  },\n  actions: {\n    async register({ commit }, userData) {\n      try {\n        const response = await axios.post(`${API_URL}/register`, userData)\n        console.log('Registration successful:', response.data)\n        return true\n      } catch (error) {\n        console.error('Register error:', error.response?.data || error.message)\n        throw error\n      }\n    },\n    async login({ commit }, credentials) {\n      try {\n        // Преобразуем данные в FormData для FastAPI\n        const formData = new FormData()\n        formData.append('username', credentials.username)\n        formData.append('password', credentials.password)\n\n        const response = await axios.post(`${API_URL}/login`, formData)\n        const { access_token, username } = response.data\n        \n        commit('SET_AUTH', {\n          isAuthenticated: true,\n          user: username,\n          token: access_token\n        })\n        \n        // Сохраняем токен для последующих запросов\n        axios.defaults.headers.common['Authorization'] = `Bearer ${access_token}`\n        \n        return true\n      } catch (error) {\n        console.error('Login error:', error.response?.data || error.message)\n        throw error\n      }\n    },\n    logout({ commit }) {\n      commit('SET_AUTH', {\n        isAuthenticated: false,\n        user: null,\n        token: null\n      })\n      delete axios.defaults.headers.common['Authorization']\n    }\n  },\n  getters: {\n    isAuthenticated: state => state.auth.isAuthenticated,\n    currentUser: state => state.auth.user\n  }\n}) "],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,eAAeF,WAAW,CAAC;EACzBG,KAAK,EAAE;IACLC,IAAI,EAAE;MACJC,eAAe,EAAE,KAAK;MACtBC,IAAI,EAAE,IAAI;MACVC,KAAK,EAAE;IACT;EACF,CAAC;EACDC,SAAS,EAAE;IACTC,QAAQA,CAACN,KAAK,EAAEC,IAAI,EAAE;MACpBD,KAAK,CAACC,IAAI,GAAGA,IAAI;IACnB;EACF,CAAC;EACDM,OAAO,EAAE;IACP,MAAMC,QAAQA,CAAC;MAAEC;IAAO,CAAC,EAAEC,QAAQ,EAAE;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,GAAGb,OAAO,WAAW,EAAEW,QAAQ,CAAC;QAClEG,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEH,QAAQ,CAACI,IAAI,CAAC;QACtD,OAAO,IAAI;MACb,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAACL,QAAQ,EAAEI,IAAI,IAAIC,KAAK,CAACC,OAAO,CAAC;QACvE,MAAMD,KAAK;MACb;IACF,CAAC;IACD,MAAME,KAAKA,CAAC;MAAET;IAAO,CAAC,EAAEU,WAAW,EAAE;MACnC,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEH,WAAW,CAACI,QAAQ,CAAC;QACjDH,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEH,WAAW,CAACK,QAAQ,CAAC;QAEjD,MAAMb,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,GAAGb,OAAO,QAAQ,EAAEqB,QAAQ,CAAC;QAC/D,MAAM;UAAEK,YAAY;UAAEF;QAAS,CAAC,GAAGZ,QAAQ,CAACI,IAAI;QAEhDN,MAAM,CAAC,UAAU,EAAE;UACjBP,eAAe,EAAE,IAAI;UACrBC,IAAI,EAAEoB,QAAQ;UACdnB,KAAK,EAAEqB;QACT,CAAC,CAAC;;QAEF;QACA3B,KAAK,CAAC4B,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUH,YAAY,EAAE;QAEzE,OAAO,IAAI;MACb,CAAC,CAAC,OAAOT,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACL,QAAQ,EAAEI,IAAI,IAAIC,KAAK,CAACC,OAAO,CAAC;QACpE,MAAMD,KAAK;MACb;IACF,CAAC;IACDa,MAAMA,CAAC;MAAEpB;IAAO,CAAC,EAAE;MACjBA,MAAM,CAAC,UAAU,EAAE;QACjBP,eAAe,EAAE,KAAK;QACtBC,IAAI,EAAE,IAAI;QACVC,KAAK,EAAE;MACT,CAAC,CAAC;MACF,OAAON,KAAK,CAAC4B,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;IACvD;EACF,CAAC;EACDE,OAAO,EAAE;IACP5B,eAAe,EAAEF,KAAK,IAAIA,KAAK,CAACC,IAAI,CAACC,eAAe;IACpD6B,WAAW,EAAE/B,KAAK,IAAIA,KAAK,CAACC,IAAI,CAACE;EACnC;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}