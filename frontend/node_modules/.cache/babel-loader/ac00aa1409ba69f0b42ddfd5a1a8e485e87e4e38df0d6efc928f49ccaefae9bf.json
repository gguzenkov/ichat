{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, createTextVNode as _createTextVNode, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chat-container\"\n};\nconst _hoisted_2 = {\n  class: \"chat\"\n};\nconst _hoisted_3 = {\n  class: \"chat-messages\",\n  ref: \"messagesContainer\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"no-messages\"\n};\nconst _hoisted_5 = {\n  class: \"message-header\"\n};\nconst _hoisted_6 = {\n  class: \"user-info\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"message-avatar\"\n};\nconst _hoisted_8 = [\"src\"];\nconst _hoisted_9 = {\n  key: 1,\n  class: \"message-avatar default-avatar\"\n};\nconst _hoisted_10 = {\n  class: \"username\"\n};\nconst _hoisted_11 = {\n  class: \"message-controls\"\n};\nconst _hoisted_12 = {\n  class: \"timestamp\"\n};\nconst _hoisted_13 = [\"onClick\"];\nconst _hoisted_14 = {\n  class: \"message-content\"\n};\nconst _hoisted_15 = {\n  class: \"chat-input\"\n};\nconst _hoisted_16 = [\"disabled\"];\nconst _hoisted_17 = [\"disabled\"];\nconst _hoisted_18 = {\n  key: 0,\n  class: \"modal\"\n};\nconst _hoisted_19 = {\n  class: \"modal-content\"\n};\nconst _hoisted_20 = {\n  class: \"modal-buttons\"\n};\nconst _hoisted_21 = {\n  class: \"users-list\"\n};\nconst _hoisted_22 = {\n  class: \"users\"\n};\nconst _hoisted_23 = [\"onClick\"];\nconst _hoisted_24 = {\n  key: 0,\n  class: \"user-avatar\"\n};\nconst _hoisted_25 = [\"src\"];\nconst _hoisted_26 = {\n  key: 1,\n  class: \"user-avatar default-avatar\"\n};\nconst _hoisted_27 = {\n  class: \"user-info-container\"\n};\nconst _hoisted_28 = {\n  class: \"user-name\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [$data.messages.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \" Нет сообщений \")) : (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 1\n  }, _renderList($data.messages, message => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: message.id,\n      class: \"message\"\n    }, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [message.avatar_url ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"img\", {\n      src: `http://localhost:8000${message.avatar_url}`,\n      alt: \"Аватар\"\n    }, null, 8 /* PROPS */, _hoisted_8)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [...(_cache[8] || (_cache[8] = [_createElementVNode(\"svg\", {\n      viewBox: \"0 0 24 24\",\n      fill: \"currentColor\"\n    }, [_createElementVNode(\"path\", {\n      d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n    })], -1 /* HOISTED */)]))])), _createElementVNode(\"span\", _hoisted_10, _toDisplayString(message.username), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"span\", _hoisted_12, _toDisplayString($options.formatDate(message.created_at)), 1 /* TEXT */), $options.canDeleteMessage(message) ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      onClick: $event => $options.confirmDelete(message),\n      class: \"delete-btn\"\n    }, \" ✕ \", 8 /* PROPS */, _hoisted_13)) : _createCommentVNode(\"v-if\", true)])]), _createElementVNode(\"div\", _hoisted_14, _toDisplayString(message.content), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), _createElementVNode(\"div\", _hoisted_15, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newMessage = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.sendMessage && $options.sendMessage(...args), [\"enter\"])),\n    placeholder: \"Введите сообщение...\",\n    disabled: $data.loading\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_16), [[_vModelText, $data.newMessage]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.sendMessage && $options.sendMessage(...args)),\n    disabled: !$data.newMessage.trim() || $data.loading\n  }, _toDisplayString($data.loading ? 'Отправка...' : 'Отправить'), 9 /* TEXT, PROPS */, _hoisted_17)]), $data.showDeleteModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [_createElementVNode(\"div\", _hoisted_19, [_cache[9] || (_cache[9] = _createElementVNode(\"h3\", null, \"Подтверждение удаления\", -1 /* HOISTED */)), _cache[10] || (_cache[10] = _createElementVNode(\"p\", null, \"Вы действительно хотите удалить это сообщение?\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.deleteMessage && $options.deleteMessage(...args)),\n    class: \"delete-confirm-btn\"\n  }, \"Удалить\"), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.cancelDelete && $options.cancelDelete(...args)),\n    class: \"cancel-btn\"\n  }, \"Отмена\")])])])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_21, [_cache[16] || (_cache[16] = _createElementVNode(\"h3\", null, \"Участники чата\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_22, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.activeUsers, user => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: user.id,\n      class: \"user-item\",\n      onClick: $event => $options.showUserMenu(user, $event)\n    }, [user.avatar_url ? (_openBlock(), _createElementBlock(\"div\", _hoisted_24, [_createElementVNode(\"img\", {\n      src: `http://localhost:8000${user.avatar_url}`,\n      alt: \"Аватар\"\n    }, null, 8 /* PROPS */, _hoisted_25)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_26, [...(_cache[11] || (_cache[11] = [_createElementVNode(\"svg\", {\n      viewBox: \"0 0 24 24\",\n      fill: \"currentColor\"\n    }, [_createElementVNode(\"path\", {\n      d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n    })], -1 /* HOISTED */)]))])), _createElementVNode(\"div\", _hoisted_27, [_cache[12] || (_cache[12] = _createElementVNode(\"span\", {\n      class: \"user-status\"\n    }, null, -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_28, _toDisplayString(user.username), 1 /* TEXT */)])], 8 /* PROPS */, _hoisted_23);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" Контекстное меню пользователя \"), $data.showContextMenu ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"user-context-menu\",\n    style: _normalizeStyle({\n      top: $data.contextMenuPosition.y + 'px',\n      left: $data.contextMenuPosition.x + 'px'\n    })\n  }, [_createElementVNode(\"div\", {\n    class: \"menu-item\",\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.mentionUser && $options.mentionUser(...args))\n  }, _cache[13] || (_cache[13] = [_createElementVNode(\"i\", {\n    class: \"fas fa-at\"\n  }, null, -1 /* HOISTED */), _createTextVNode(\" Упомянуть \")])), _createElementVNode(\"div\", {\n    class: \"menu-item\",\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.sendPrivateMessage && $options.sendPrivateMessage(...args))\n  }, _cache[14] || (_cache[14] = [_createElementVNode(\"i\", {\n    class: \"fas fa-envelope\"\n  }, null, -1 /* HOISTED */), _createTextVNode(\" Личное сообщение \")])), _createElementVNode(\"div\", {\n    class: \"menu-item\",\n    onClick: _cache[7] || (_cache[7] = (...args) => $options.viewProfile && $options.viewProfile(...args))\n  }, _cache[15] || (_cache[15] = [_createElementVNode(\"i\", {\n    class: \"fas fa-user\"\n  }, null, -1 /* HOISTED */), _createTextVNode(\" Просмотреть профиль \")]))], 4 /* STYLE */)) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","ref","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","$data","messages","length","_hoisted_4","_Fragment","_renderList","message","id","_hoisted_5","_hoisted_6","avatar_url","_hoisted_7","src","alt","_hoisted_8","_hoisted_9","_cache","viewBox","fill","d","_hoisted_10","_toDisplayString","username","_hoisted_11","_hoisted_12","$options","formatDate","created_at","canDeleteMessage","onClick","$event","confirmDelete","_hoisted_13","_createCommentVNode","_hoisted_14","content","_hoisted_15","newMessage","onKeyup","_withKeys","args","sendMessage","placeholder","disabled","loading","_hoisted_16","trim","_hoisted_17","showDeleteModal","_hoisted_18","_hoisted_19","_hoisted_20","deleteMessage","cancelDelete","_hoisted_21","_hoisted_22","activeUsers","user","showUserMenu","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_23","showContextMenu","style","_normalizeStyle","top","contextMenuPosition","y","left","x","mentionUser","_createTextVNode","sendPrivateMessage","viewProfile"],"sources":["/home/dotcore/ichat/frontend/src/components/Chat.vue"],"sourcesContent":["<template>\n  <div class=\"chat-container\">\n    <div class=\"chat\">\n      <div class=\"chat-messages\" ref=\"messagesContainer\">\n        <div v-if=\"messages.length === 0\" class=\"no-messages\">\n          Нет сообщений\n        </div>\n        <div v-else v-for=\"message in messages\" :key=\"message.id\" class=\"message\">\n          <div class=\"message-header\">\n            <div class=\"user-info\">\n              <div v-if=\"message.avatar_url\" class=\"message-avatar\">\n                <img \n                  :src=\"`http://localhost:8000${message.avatar_url}`\" \n                  alt=\"Аватар\"\n                >\n              </div>\n              <div v-else class=\"message-avatar default-avatar\">\n                <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                  <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"/>\n                </svg>\n              </div>\n              <span class=\"username\">{{ message.username }}</span>\n            </div>\n            <div class=\"message-controls\">\n              <span class=\"timestamp\">{{ formatDate(message.created_at) }}</span>\n              <button \n                v-if=\"canDeleteMessage(message)\" \n                @click=\"confirmDelete(message)\"\n                class=\"delete-btn\"\n              >\n                ✕\n              </button>\n            </div>\n          </div>\n          <div class=\"message-content\">{{ message.content }}</div>\n        </div>\n      </div>\n      <div class=\"chat-input\">\n        <input \n          v-model=\"newMessage\" \n          @keyup.enter=\"sendMessage\"\n          placeholder=\"Введите сообщение...\"\n          :disabled=\"loading\"\n        >\n        <button @click=\"sendMessage\" :disabled=\"!newMessage.trim() || loading\">\n          {{ loading ? 'Отправка...' : 'Отправить' }}\n        </button>\n      </div>\n\n      <div v-if=\"showDeleteModal\" class=\"modal\">\n        <div class=\"modal-content\">\n          <h3>Подтверждение удаления</h3>\n          <p>Вы действительно хотите удалить это сообщение?</p>\n          <div class=\"modal-buttons\">\n            <button @click=\"deleteMessage\" class=\"delete-confirm-btn\">Удалить</button>\n            <button @click=\"cancelDelete\" class=\"cancel-btn\">Отмена</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"users-list\">\n      <h3>Участники чата</h3>\n      <div class=\"users\">\n        <div v-for=\"user in activeUsers\" :key=\"user.id\" class=\"user-item\" @click=\"showUserMenu(user, $event)\">\n          <div v-if=\"user.avatar_url\" class=\"user-avatar\">\n            <img \n              :src=\"`http://localhost:8000${user.avatar_url}`\" \n              alt=\"Аватар\"\n            >\n          </div>\n          <div v-else class=\"user-avatar default-avatar\">\n            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"/>\n            </svg>\n          </div>\n          <div class=\"user-info-container\">\n            <span class=\"user-status\"></span>\n            <span class=\"user-name\">{{ user.username }}</span>\n          </div>\n        </div>\n      </div>\n\n      <!-- Контекстное меню пользователя -->\n      <div v-if=\"showContextMenu\" \n           class=\"user-context-menu\"\n           :style=\"{ top: contextMenuPosition.y + 'px', left: contextMenuPosition.x + 'px' }\">\n        <div class=\"menu-item\" @click=\"mentionUser\">\n          <i class=\"fas fa-at\"></i> Упомянуть\n        </div>\n        <div class=\"menu-item\" @click=\"sendPrivateMessage\">\n          <i class=\"fas fa-envelope\"></i> Личное сообщение\n        </div>\n        <div class=\"menu-item\" @click=\"viewProfile\">\n          <i class=\"fas fa-user\"></i> Просмотреть профиль\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { axiosInstance } from '../store/modules/auth'\n\nexport default {\n  name: 'Chat',\n  data() {\n    return {\n      messages: [],\n      newMessage: '',\n      polling: null,\n      loading: false,\n      error: null,\n      showDeleteModal: false,\n      messageToDelete: null,\n      activeUsers: [],\n      showContextMenu: false,\n      contextMenuPosition: { x: 0, y: 0 },\n      selectedUser: null\n    }\n  },\n  computed: {\n    userId() {\n      return this.$store.state.auth.userId\n    }\n  },\n  async created() {\n    await this.loadMessages()\n    await this.loadActiveUsers()\n    this.startPolling()\n    this.startUsersPolling()\n    this.startActivityTracking()\n    await this.updateUserActivity()\n  },\n  beforeUnmount() {\n    this.stopPolling()\n    this.stopUsersPolling()\n    this.stopActivityTracking()\n    document.removeEventListener('click', this.hideContextMenu)\n  },\n  mounted() {\n    // Закрываем меню при клике вне его\n    document.addEventListener('click', this.hideContextMenu)\n  },\n  methods: {\n    startPolling() {\n      this.polling = setInterval(this.loadMessages, 3000)\n    },\n    stopPolling() {\n      if (this.polling) {\n        clearInterval(this.polling)\n        this.polling = null\n      }\n    },\n    async loadMessages() {\n      try {\n        const response = await axiosInstance.get('/messages')\n        if (response.data) {\n          this.messages = response.data\n          this.$nextTick(() => {\n            this.scrollToBottom()\n          })\n        }\n      } catch (error) {\n        console.error('Error loading messages:', error)\n        this.error = 'Ошибка при загрузке сообщений'\n      }\n    },\n    async sendMessage() {\n      if (!this.newMessage.trim() || this.loading) return\n\n      this.loading = true\n      try {\n        const messageData = {\n          content: this.newMessage.trim(),\n          user_id: parseInt(this.userId)\n        }\n        await axiosInstance.post('/messages', messageData)\n        await this.updateUserActivity()\n        this.newMessage = ''\n        await this.loadMessages()\n      } catch (error) {\n        console.error('Error sending message:', error)\n        alert('Ошибка при отправке сообщения')\n      } finally {\n        this.loading = false\n      }\n    },\n    formatDate(dateStr) {\n      if (!dateStr) return ''\n      try {\n        const date = new Date(dateStr)\n        return date.toLocaleString('ru-RU', {\n          year: 'numeric',\n          month: '2-digit',\n          day: '2-digit',\n          hour: '2-digit',\n          minute: '2-digit',\n          timeZone: 'Europe/Moscow'\n        })\n      } catch (e) {\n        console.error('Error formatting date:', e)\n        return 'Некорректная дата'\n      }\n    },\n    scrollToBottom() {\n      const container = this.$refs.messagesContainer\n      if (container) {\n        container.scrollTop = container.scrollHeight\n      }\n    },\n    canDeleteMessage(message) {\n      return message.user_id === parseInt(this.userId)\n    },\n    confirmDelete(message) {\n      this.messageToDelete = message\n      this.showDeleteModal = true\n    },\n    cancelDelete() {\n      this.messageToDelete = null\n      this.showDeleteModal = false\n    },\n    async deleteMessage() {\n      if (!this.messageToDelete) return\n\n      try {\n        await axiosInstance.delete(`/messages/${this.messageToDelete.id}?current_user_id=${this.userId}`)\n        await this.loadMessages()\n        this.showDeleteModal = false\n        this.messageToDelete = null\n      } catch (error) {\n        console.error('Error deleting message:', error)\n        alert('Ошибка при удалении сообщения')\n      }\n    },\n    async loadActiveUsers() {\n      try {\n        const response = await axiosInstance.get('/users/active')\n        this.activeUsers = response.data\n      } catch (error) {\n        console.error('Error loading active users:', error)\n      }\n    },\n    startUsersPolling() {\n      this.usersPolling = setInterval(this.loadActiveUsers, 10000)\n    },\n    stopUsersPolling() {\n      if (this.usersPolling) {\n        clearInterval(this.usersPolling)\n        this.usersPolling = null\n      }\n    },\n    async updateUserActivity() {\n      try {\n        await axiosInstance.post(`/users/${this.userId}/heartbeat`)\n      } catch (error) {\n        console.error('Error updating user activity:', error)\n      }\n    },\n    startActivityTracking() {\n      this.activityInterval = setInterval(this.updateUserActivity, 30000)\n      window.addEventListener('mousemove', this.updateUserActivity)\n      window.addEventListener('keydown', this.updateUserActivity)\n    },\n    stopActivityTracking() {\n      if (this.activityInterval) {\n        clearInterval(this.activityInterval)\n        this.activityInterval = null\n      }\n      window.removeEventListener('mousemove', this.updateUserActivity)\n      window.removeEventListener('keydown', this.updateUserActivity)\n    },\n    showUserMenu(user, event) {\n      event.preventDefault()\n      event.stopPropagation()\n      \n      this.selectedUser = user\n      this.contextMenuPosition = {\n        x: event.clientX,\n        y: event.clientY\n      }\n      this.showContextMenu = true\n    },\n    hideContextMenu(event) {\n      if (!event.target.closest('.user-context-menu')) {\n        this.showContextMenu = false\n      }\n    },\n    mentionUser() {\n      if (this.selectedUser) {\n        this.newMessage = `${this.newMessage}@${this.selectedUser.username} `\n        this.$refs.messageInput?.focus()\n      }\n      this.showContextMenu = false\n    },\n    sendPrivateMessage() {\n      this.$router.push(`/chat/${this.selectedUser.id}`)\n      this.showContextMenu = false\n    },\n    viewProfile() {\n      this.$router.push(`/profile/${this.selectedUser.id}`)\n      this.showContextMenu = false\n    }\n  }\n}\n</script>\n\n<style scoped>\n.chat-container {\n  display: flex;\n  gap: 20px;\n  height: calc(100vh - 100px);\n  padding: 20px;\n}\n\n.chat {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n}\n\n.chat-messages {\n  flex-grow: 1;\n  overflow-y: auto;\n  margin-bottom: 20px;\n  padding: 10px;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.no-messages {\n  text-align: center;\n  color: #666;\n  padding: 20px;\n}\n\n.message {\n  margin-bottom: 15px;\n  padding: 10px;\n  background: #f5f5f5;\n  border-radius: 4px;\n}\n\n.message-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 5px;\n}\n\n.message-controls {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.user-info {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.message-avatar,\n.user-avatar {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  overflow: hidden;\n  flex-shrink: 0;\n}\n\n.message-avatar img,\n.user-avatar img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.default-avatar {\n  background-color: #e0e0e0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n}\n\n.default-avatar svg {\n  width: 24px;\n  height: 24px;\n  color: #757575;\n}\n\n.username {\n  font-weight: bold;\n  color: #42b983;\n}\n\n.timestamp {\n  color: #666;\n  font-size: 0.8em;\n}\n\n.message-content {\n  margin-left: 50px;\n  word-break: break-word;\n}\n\n.chat-input {\n  display: flex;\n  gap: 10px;\n}\n\ninput {\n  flex-grow: 1;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\ninput:disabled {\n  background-color: #f5f5f5;\n  cursor: not-allowed;\n}\n\n.chat-input button {\n  min-width: 100px;\n  padding: 10px 20px;\n  background: #42b983;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.chat-input button:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n\n.delete-btn {\n  background: none;\n  border: none;\n  color: #999;\n  cursor: pointer;\n  padding: 0 5px;\n  font-size: 1.2em;\n  line-height: 1;\n}\n\n.delete-btn:hover {\n  color: #ff4444;\n}\n\n.modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background: white;\n  padding: 20px;\n  border-radius: 8px;\n  width: 300px;\n  text-align: center;\n}\n\n.modal-buttons {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  margin-top: 20px;\n}\n\n.delete-confirm-btn {\n  background: #ff4444;\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.delete-confirm-btn:hover {\n  background: #ff2222;\n}\n\n.cancel-btn {\n  background: #666;\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.cancel-btn:hover {\n  background: #555;\n}\n\n.users-list {\n  width: 250px;\n  background: white;\n  border-radius: 8px;\n  padding: 15px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.users-list h3 {\n  margin: 0 0 15px 0;\n  color: #333;\n  font-size: 1.1em;\n  padding-bottom: 10px;\n  border-bottom: 1px solid #eee;\n}\n\n.users {\n  overflow-y: auto;\n  max-height: calc(100% - 50px);\n}\n\n.user-item {\n  display: flex;\n  align-items: center;\n  padding: 8px 0;\n  border-bottom: 1px solid #f5f5f5;\n  gap: 12px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.user-item:hover {\n  background-color: #f5f5f5;\n}\n\n.user-info-container {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  flex-grow: 1;\n}\n\n.user-status {\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background: #42b983;\n  flex-shrink: 0;\n}\n\n.user-name {\n  color: #333;\n  font-size: 0.9em;\n}\n\n.user-context-menu {\n  position: fixed;\n  background: white;\n  border-radius: 4px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  padding: 8px 0;\n  z-index: 1000;\n  min-width: 200px;\n}\n\n.menu-item {\n  padding: 8px 16px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  transition: background-color 0.2s;\n}\n\n.menu-item:hover {\n  background-color: #f5f5f5;\n}\n\n.menu-item i {\n  width: 16px;\n  color: #666;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}