{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"user-info\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"user-avatar\"\n};\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = {\n  key: 1,\n  class: \"user-avatar default-avatar\"\n};\nconst _hoisted_5 = {\n  class: \"username\"\n};\nconst _hoisted_6 = {\n  class: \"chat-controls\"\n};\nconst _hoisted_7 = {\n  class: \"minimize-btn\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"chat-content\"\n};\nconst _hoisted_9 = {\n  class: \"messages\",\n  ref: \"messagesContainer\"\n};\nconst _hoisted_10 = [\"innerHTML\"];\nconst _hoisted_11 = {\n  class: \"message-info\"\n};\nconst _hoisted_12 = {\n  class: \"timestamp\"\n};\nconst _hoisted_13 = [\"onClick\"];\nconst _hoisted_14 = {\n  key: 0,\n  class: \"read-status\"\n};\nconst _hoisted_15 = {\n  class: \"input-area\"\n};\nconst _hoisted_16 = {\n  key: 0,\n  class: \"emoji-picker\",\n  ref: \"emojiPicker\"\n};\nconst _hoisted_17 = {\n  class: \"emoji-categories\"\n};\nconst _hoisted_18 = [\"onClick\"];\nconst _hoisted_19 = {\n  class: \"emoji-list\"\n};\nconst _hoisted_20 = [\"onClick\"];\nconst _hoisted_21 = {\n  key: 1,\n  class: \"selected-files\"\n};\nconst _hoisted_22 = {\n  class: \"file-name\"\n};\nconst _hoisted_23 = {\n  class: \"file-size\"\n};\nconst _hoisted_24 = [\"onClick\"];\nconst _hoisted_25 = {\n  class: \"input-wrapper\"\n};\nconst _hoisted_26 = [\"disabled\"];\nconst _hoisted_27 = {\n  class: \"attachment-trigger\",\n  title: \"Прикрепить файлы\"\n};\nconst _hoisted_28 = [\"disabled\"];\nconst _hoisted_29 = {\n  key: 1,\n  class: \"modal\"\n};\nconst _hoisted_30 = {\n  class: \"modal-content\"\n};\nconst _hoisted_31 = {\n  class: \"modal-buttons\"\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"popup-chat\", {\n      minimized: _ctx.minimized\n    }])\n  }, [_createElementVNode(\"div\", {\n    class: \"chat-header\",\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.toggleMinimize && _ctx.toggleMinimize(...args))\n  }, [_createElementVNode(\"div\", _hoisted_1, [_ctx.receiver.avatar_url ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"img\", {\n    src: `http://localhost:8000${_ctx.receiver.avatar_url}`,\n    alt: \"Аватар\"\n  }, null, 8 /* PROPS */, _hoisted_3)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _cache[11] || (_cache[11] = [_createElementVNode(\"svg\", {\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\"\n  }, [_createElementVNode(\"path\", {\n    d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n  })], -1 /* HOISTED */)]))), _createElementVNode(\"span\", _hoisted_5, _toDisplayString(_ctx.receiver.username), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"button\", _hoisted_7, _toDisplayString(_ctx.minimized ? '△' : '▽'), 1 /* TEXT */), _createElementVNode(\"button\", {\n    class: \"close-btn\",\n    onClick: _cache[0] || (_cache[0] = _withModifiers((...args) => _ctx.closeChat && _ctx.closeChat(...args), [\"stop\"]))\n  }, \"✕\")])]), !_ctx.minimized ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.messages, message => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: message.id,\n      class: _normalizeClass(['message', {\n        'own-message': message.sender_id === _ctx.currentUserId\n      }])\n    }, [_createElementVNode(\"div\", {\n      class: \"message-content\",\n      innerHTML: _ctx.formatMessageWithLinks(message.content)\n    }, null, 8 /* PROPS */, _hoisted_10), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"span\", _hoisted_12, _toDisplayString(_ctx.formatDate(message.created_at)), 1 /* TEXT */), _createElementVNode(\"button\", {\n      class: \"delete-btn\",\n      onClick: $event => _ctx.confirmDelete(message)\n    }, \" ✕ \", 8 /* PROPS */, _hoisted_13), message.sender_id === _ctx.currentUserId ? (_openBlock(), _createElementBlock(\"span\", _hoisted_14, _toDisplayString(message.is_read ? '✓✓' : '✓'), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), _createElementVNode(\"div\", _hoisted_15, [_ctx.showEmojiPicker ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [_createElementVNode(\"div\", _hoisted_17, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.emojiCategories, (category, name) => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: name,\n      onClick: $event => _ctx.currentCategory = name,\n      class: _normalizeClass({\n        active: _ctx.currentCategory === name\n      })\n    }, _toDisplayString(category.icon), 11 /* TEXT, CLASS, PROPS */, _hoisted_18);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_19, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.currentEmojis, emoji => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: emoji,\n      onClick: $event => _ctx.addEmoji(emoji),\n      class: \"emoji-button\"\n    }, _toDisplayString(emoji), 9 /* TEXT, PROPS */, _hoisted_20);\n  }), 128 /* KEYED_FRAGMENT */))])], 512 /* NEED_PATCH */)) : _createCommentVNode(\"v-if\", true), _ctx.selectedFiles.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_21, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.selectedFiles, (file, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"file-preview\"\n    }, [_cache[12] || (_cache[12] = _createElementVNode(\"i\", {\n      class: \"fas fa-paperclip\"\n    }, null, -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_22, _toDisplayString(file.name), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_23, \"(\" + _toDisplayString(_ctx.formatFileSize(file.size)) + \")\", 1 /* TEXT */), _createElementVNode(\"button\", {\n      class: \"remove-file\",\n      onClick: $event => _ctx.removeFile(index)\n    }, \"✕\", 8 /* PROPS */, _hoisted_24)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_25, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.newMessage = $event),\n    onKeyup: _cache[3] || (_cache[3] = _withKeys((...args) => _ctx.sendMessage && _ctx.sendMessage(...args), [\"enter\"])),\n    onInput: _cache[4] || (_cache[4] = (...args) => _ctx.handleInput && _ctx.handleInput(...args)),\n    onKeydown: _cache[5] || (_cache[5] = (...args) => _ctx.handleKeydown && _ctx.handleKeydown(...args)),\n    placeholder: \"Введите сообщение...\",\n    disabled: _ctx.loading,\n    ref: \"messageInput\"\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_26), [[_vModelText, _ctx.newMessage]]), _createElementVNode(\"label\", _hoisted_27, [_cache[13] || (_cache[13] = _createElementVNode(\"i\", {\n    class: \"fas fa-paperclip\"\n  }, null, -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    multiple: \"\",\n    onChange: _cache[6] || (_cache[6] = (...args) => _ctx.handleFileSelect && _ctx.handleFileSelect(...args)),\n    ref: \"fileInput\",\n    accept: \"*/*\",\n    style: {\n      \"display\": \"none\"\n    }\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */)]), _createElementVNode(\"span\", {\n    class: \"emoji-trigger\",\n    onClick: _cache[7] || (_cache[7] = _withModifiers((...args) => _ctx.toggleEmojiPicker && _ctx.toggleEmojiPicker(...args), [\"stop\"])),\n    title: \"Добавить эмодзи\"\n  }, _cache[14] || (_cache[14] = [_createElementVNode(\"i\", {\n    class: \"far fa-smile\"\n  }, null, -1 /* HOISTED */)]))]), _createElementVNode(\"button\", {\n    onClick: _cache[8] || (_cache[8] = (...args) => _ctx.sendMessage && _ctx.sendMessage(...args)),\n    disabled: _ctx.newMessage.trim() === '' && _ctx.selectedFiles.length === 0 || _ctx.loading\n  }, _cache[15] || (_cache[15] = [_createElementVNode(\"i\", {\n    class: \"fas fa-paper-plane\"\n  }, null, -1 /* HOISTED */)]), 8 /* PROPS */, _hoisted_28)])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Модальное окно подтверждения удаления \"), _ctx.showDeleteModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_29, [_createElementVNode(\"div\", _hoisted_30, [_cache[16] || (_cache[16] = _createElementVNode(\"h3\", null, \"Подтверждение удаления\", -1 /* HOISTED */)), _cache[17] || (_cache[17] = _createElementVNode(\"p\", null, \"Вы действительно хотите удалить это сообщение?\", -1 /* HOISTED */)), _cache[18] || (_cache[18] = _createElementVNode(\"p\", {\n    class: \"warning\"\n  }, \"Сообщение будет удалено для всех участников переписки\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_31, [_createElementVNode(\"button\", {\n    onClick: _cache[9] || (_cache[9] = (...args) => _ctx.deleteMessage && _ctx.deleteMessage(...args)),\n    class: \"delete-confirm-btn\"\n  }, \"Удалить\"), _createElementVNode(\"button\", {\n    onClick: _cache[10] || (_cache[10] = (...args) => _ctx.cancelDelete && _ctx.cancelDelete(...args)),\n    class: \"cancel-btn\"\n  }, \"Отмена\")])])])) : _createCommentVNode(\"v-if\", true)], 2 /* CLASS */);\n}","map":{"version":3,"names":["class","key","ref","title","_createElementBlock","_normalizeClass","minimized","_ctx","_createElementVNode","onClick","_cache","args","toggleMinimize","_hoisted_1","receiver","avatar_url","_hoisted_2","src","alt","_hoisted_3","_hoisted_4","viewBox","fill","d","_hoisted_5","_toDisplayString","username","_hoisted_6","_hoisted_7","_withModifiers","closeChat","_hoisted_8","_hoisted_9","_Fragment","_renderList","messages","message","id","sender_id","currentUserId","innerHTML","formatMessageWithLinks","content","_hoisted_10","_hoisted_11","_hoisted_12","formatDate","created_at","$event","confirmDelete","_hoisted_13","_hoisted_14","is_read","_createCommentVNode","_hoisted_15","showEmojiPicker","_hoisted_16","_hoisted_17","emojiCategories","category","name","currentCategory","active","icon","_hoisted_18","_hoisted_19","currentEmojis","emoji","addEmoji","_hoisted_20","selectedFiles","length","_hoisted_21","file","index","_hoisted_22","_hoisted_23","formatFileSize","size","removeFile","_hoisted_24","_hoisted_25","newMessage","onKeyup","_withKeys","sendMessage","onInput","handleInput","onKeydown","handleKeydown","placeholder","disabled","loading","_hoisted_26","_hoisted_27","type","multiple","onChange","handleFileSelect","accept","style","toggleEmojiPicker","trim","_hoisted_28","showDeleteModal","_hoisted_29","_hoisted_30","_hoisted_31","deleteMessage","cancelDelete"],"sources":["/home/dotcore/ichat/frontend/src/components/PopupChat.vue"],"sourcesContent":["<template>\n  <div class=\"popup-chat\" :class=\"{ minimized }\">\n    <div class=\"chat-header\" @click=\"toggleMinimize\">\n      <div class=\"user-info\">\n        <div v-if=\"receiver.avatar_url\" class=\"user-avatar\">\n          <img :src=\"`http://localhost:8000${receiver.avatar_url}`\" alt=\"Аватар\">\n        </div>\n        <div v-else class=\"user-avatar default-avatar\">\n          <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n            <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"/>\n          </svg>\n        </div>\n        <span class=\"username\">{{ receiver.username }}</span>\n      </div>\n      <div class=\"chat-controls\">\n        <button class=\"minimize-btn\">\n          {{ minimized ? '△' : '▽' }}\n        </button>\n        <button class=\"close-btn\" @click.stop=\"closeChat\">✕</button>\n      </div>\n    </div>\n\n    <div v-if=\"!minimized\" class=\"chat-content\">\n      <div class=\"messages\" ref=\"messagesContainer\">\n        <div v-for=\"message in messages\" :key=\"message.id\" \n             :class=\"['message', { 'own-message': message.sender_id === currentUserId }]\">\n          <div class=\"message-content\" v-html=\"formatMessageWithLinks(message.content)\"></div>\n          <div class=\"message-info\">\n            <span class=\"timestamp\">{{ formatDate(message.created_at) }}</span>\n            <button \n              class=\"delete-btn\"\n              @click=\"confirmDelete(message)\"\n            >\n              ✕\n            </button>\n            <span v-if=\"message.sender_id === currentUserId\" class=\"read-status\">\n              {{ message.is_read ? '✓✓' : '✓' }}\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"input-area\">\n        <div v-if=\"showEmojiPicker\" class=\"emoji-picker\" ref=\"emojiPicker\">\n          <div class=\"emoji-categories\">\n            <button \n              v-for=\"(category, name) in emojiCategories\" \n              :key=\"name\"\n              @click=\"currentCategory = name\"\n              :class=\"{ active: currentCategory === name }\"\n            >\n              {{ category.icon }}\n            </button>\n          </div>\n          <div class=\"emoji-list\">\n            <button \n              v-for=\"emoji in currentEmojis\" \n              :key=\"emoji\"\n              @click=\"addEmoji(emoji)\"\n              class=\"emoji-button\"\n            >\n              {{ emoji }}\n            </button>\n          </div>\n        </div>\n\n        <div v-if=\"selectedFiles.length > 0\" class=\"selected-files\">\n          <div v-for=\"(file, index) in selectedFiles\" :key=\"index\" class=\"file-preview\">\n            <i class=\"fas fa-paperclip\"></i>\n            <span class=\"file-name\">{{ file.name }}</span>\n            <span class=\"file-size\">({{ formatFileSize(file.size) }})</span>\n            <button class=\"remove-file\" @click=\"removeFile(index)\">✕</button>\n          </div>\n        </div>\n\n        <div class=\"input-wrapper\">\n          <input \n            v-model=\"newMessage\" \n            @keyup.enter=\"sendMessage\"\n            @input=\"handleInput\"\n            @keydown=\"handleKeydown\"\n            placeholder=\"Введите сообщение...\"\n            :disabled=\"loading\"\n            ref=\"messageInput\"\n          >\n          <label class=\"attachment-trigger\" title=\"Прикрепить файлы\">\n            <i class=\"fas fa-paperclip\"></i>\n            <input \n              type=\"file\" \n              multiple \n              @change=\"handleFileSelect\" \n              ref=\"fileInput\"\n              accept=\"*/*\"\n              style=\"display: none;\"\n            >\n          </label>\n          <span \n            class=\"emoji-trigger\"\n            @click.stop=\"toggleEmojiPicker\"\n            title=\"Добавить эмодзи\"\n          >\n            <i class=\"far fa-smile\"></i>\n          </span>\n        </div>\n\n        <button \n          @click=\"sendMessage\" \n          :disabled=\"(newMessage.trim() === '' && selectedFiles.length === 0) || loading\"\n        >\n          <i class=\"fas fa-paper-plane\"></i>\n        </button>\n      </div>\n    </div>\n\n    <!-- Модальное окно подтверждения удаления -->\n    <div v-if=\"showDeleteModal\" class=\"modal\">\n      <div class=\"modal-content\">\n        <h3>Подтверждение удаления</h3>\n        <p>Вы действительно хотите удалить это сообщение?</p>\n        <p class=\"warning\">Сообщение будет удалено для всех участников переписки</p>\n        <div class=\"modal-buttons\">\n          <button @click=\"deleteMessage\" class=\"delete-confirm-btn\">Удалить</button>\n          <button @click=\"cancelDelete\" class=\"cancel-btn\">Отмена</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { axiosInstance } from '../store/modules/auth'\nimport { emojiCategories } from '../utils/emojis'\n\nexport default {\n  name: 'PopupChat',\n  props: {\n    receiverId: {\n      type: [String, Number],\n      required: true\n    }\n  },\n  data() {\n    return {\n      messages: [],\n      newMessage: '',\n      loading: false,\n      receiver: {},\n      polling: null,\n      minimized: false,\n      showDeleteModal: false,\n      messageToDelete: null,\n      showMentionPopup: false,\n      mentionFilter: '',\n      mentionStartIndex: -1,\n      activeUsers: [],\n      showEmojiPicker: false,\n      currentCategory: 'smileys',\n      emojiCategories,\n      selectedFiles: [],\n      notificationSound: null,\n      unreadMessagesCount: 0,\n      originalTitle: document.title,\n      titleInterval: null,\n      isFirstLoad: true,\n      messageObserver: null\n    }\n  },\n  computed: {\n    currentUserId() {\n      return this.$store.state.auth.userId\n    },\n    filteredUsers() {\n      if (!this.mentionFilter) return this.activeUsers\n      const filter = this.mentionFilter.toLowerCase()\n      return this.activeUsers.filter(user => \n        user.username.toLowerCase().includes(filter)\n      )\n    },\n    currentEmojis() {\n      return this.emojiCategories[this.currentCategory].emojis\n    }\n  },\n  async created() {\n    await this.loadReceiverInfo()\n    await this.loadMessages()\n    await this.loadActiveUsers()\n    this.startPolling()\n    this.notificationSound = new Audio('/sounds/notification.mp3')\n    this.originalTitle = document.title\n    this.messageObserver = new MutationObserver(this.handleMessageMutation)\n  },\n  beforeUnmount() {\n    this.stopPolling()\n    this.clearTitleNotification()\n    this.messageObserver.disconnect()\n  },\n  methods: {\n    async loadReceiverInfo() {\n      try {\n        const response = await axiosInstance.get(`/users/${this.receiverId}`)\n        this.receiver = response.data\n      } catch (error) {\n        console.error('Error loading receiver info:', error)\n      }\n    },\n    async loadMessages() {\n      try {\n        const response = await axiosInstance.get(\n          `/private-messages/${this.receiverId}`, \n          { \n            headers: {\n              'X-Current-User-Id': this.currentUserId\n            }\n          }\n        )\n        \n        const newMessages = response.data.filter(\n          msg => !this.messages.some(existingMsg => existingMsg.id === msg.id) && \n                msg.sender_id !== this.currentUserId\n        )\n        \n        if (newMessages.length > 0 && this.minimized) {\n          this.playNotificationSound()\n          this.showTitleNotification()\n        }\n        \n        this.messages = response.data\n        \n        this.$nextTick(() => {\n          const messageElements = document.querySelectorAll('.message[data-message-id]')\n          messageElements.forEach(element => {\n            const messageId = element.dataset.messageId\n            const message = this.messages.find(m => m.id.toString() === messageId)\n            if (message) {\n              element.dataset.unread = (!message.is_read && message.receiver_id === this.currentUserId).toString()\n            }\n            this.messageObserver.observe(element)\n          })\n\n          // Если это первая загрузка и чат не свернут, прокручиваем к первому непрочитанному\n          if (this.isFirstLoad && !this.minimized) {\n            this.scrollToFirstUnread()\n            this.isFirstLoad = false\n          }\n        })\n        \n        if (this.minimized) {\n          this.unreadMessagesCount = this.messages.filter(\n            msg => msg.receiver_id === this.currentUserId && !msg.is_read\n          ).length\n        }\n      } catch (error) {\n        console.error('Error loading messages:', error)\n      }\n    },\n    async sendMessage() {\n      if ((this.newMessage.trim() === '' && this.selectedFiles.length === 0) || this.loading) return\n\n      this.loading = true\n      try {\n        let attachments = []\n        \n        if (this.selectedFiles.length > 0) {\n          const formData = new FormData()\n          this.selectedFiles.forEach(file => {\n            formData.append('files', file)\n          })\n\n          const response = await axiosInstance.post('/messages/attachments', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data',\n              'X-Current-User-Id': this.currentUserId\n            }\n          })\n          attachments = response.data.attachments\n        }\n\n        await axiosInstance.post('/private-messages', {\n          content: this.newMessage.trim() || '',\n          receiver_id: parseInt(this.receiverId),\n          sender_id: parseInt(this.currentUserId),\n          attachments: attachments\n        }, {\n          headers: {\n            'X-Current-User-Id': this.currentUserId\n          }\n        })\n\n        this.newMessage = ''\n        this.selectedFiles = []\n        if (this.$refs.fileInput) {\n          this.$refs.fileInput.value = ''\n        }\n        await this.loadMessages()\n        this.scrollToBottom()\n      } catch (error) {\n        console.error('Error sending message:', error)\n        alert('Ошибка при отправке сообщения')\n      } finally {\n        this.loading = false\n      }\n    },\n    startPolling() {\n      this.polling = setInterval(this.loadMessages, 3000)\n    },\n    stopPolling() {\n      if (this.polling) {\n        clearInterval(this.polling)\n        this.polling = null\n      }\n    },\n    scrollToBottom() {\n      const container = this.$refs.messagesContainer\n      if (container) {\n        container.scrollTop = container.scrollHeight\n      }\n    },\n    scrollToFirstUnread() {\n      this.$nextTick(() => {\n        const firstUnreadMessage = this.$el.querySelector('.message[data-unread=\"true\"]')\n        if (firstUnreadMessage) {\n          firstUnreadMessage.scrollIntoView({ behavior: 'smooth', block: 'center' })\n        } else {\n          this.scrollToBottom()\n        }\n      })\n    },\n    formatDate(dateStr) {\n      if (!dateStr) return ''\n      const date = new Date(dateStr)\n      return date.toLocaleString('ru-RU', {\n        hour: '2-digit',\n        minute: '2-digit'\n      })\n    },\n    toggleMinimize() {\n      this.minimized = !this.minimized\n      \n      if (!this.minimized) {\n        this.$nextTick(() => {\n          this.scrollToFirstUnread()\n        })\n      }\n    },\n    closeChat() {\n      this.$emit('close')\n    },\n    confirmDelete(message) {\n      this.messageToDelete = message\n      this.showDeleteModal = true\n    },\n    cancelDelete() {\n      this.messageToDelete = null\n      this.showDeleteModal = false\n    },\n    async deleteMessage() {\n      if (!this.messageToDelete) return\n\n      try {\n        await axiosInstance.delete(\n          `/private-messages/${this.messageToDelete.id}`,\n          {\n            headers: {\n              'X-Current-User-Id': this.currentUserId\n            }\n          }\n        )\n        await this.loadMessages()\n        this.showDeleteModal = false\n        this.messageToDelete = null\n      } catch (error) {\n        console.error('Error deleting message:', error)\n      }\n    },\n    async loadActiveUsers() {\n      try {\n        const response = await axiosInstance.get('/users/active')\n        this.activeUsers = response.data\n      } catch (error) {\n        console.error('Error loading active users:', error)\n      }\n    },\n    handleInput(event) {\n      const text = event.target.value\n      const lastAtIndex = text.lastIndexOf('@')\n      \n      if (lastAtIndex !== -1 && (lastAtIndex === 0 || text[lastAtIndex - 1] === ' ')) {\n        this.mentionStartIndex = lastAtIndex\n        this.mentionFilter = text.slice(lastAtIndex + 1)\n        this.showMentionPopup = true\n      } else if (this.showMentionPopup && this.mentionStartIndex !== -1) {\n        this.mentionFilter = text.slice(this.mentionStartIndex + 1)\n        if (!this.mentionFilter || text[this.mentionStartIndex] !== '@') {\n          this.closeMentionPopup()\n        }\n      }\n    },\n    handleKeydown(event) {\n      if (!this.showMentionPopup) return\n\n      if (event.key === 'Escape') {\n        this.closeMentionPopup()\n      }\n    },\n    selectMention(user) {\n      const beforeMention = this.newMessage.slice(0, this.mentionStartIndex)\n      const afterMention = this.newMessage.slice(this.mentionStartIndex + this.mentionFilter.length + 1)\n      this.newMessage = `${beforeMention}@${user.username} ${afterMention}`\n      this.closeMentionPopup()\n      this.$refs.messageInput.focus()\n    },\n    closeMentionPopup() {\n      this.showMentionPopup = false\n      this.mentionFilter = ''\n      this.mentionStartIndex = -1\n    },\n    handleFileSelect(event) {\n      const files = Array.from(event.target.files)\n      if (files.length > 3) {\n        alert('Можно прикрепить максимум 3 файла')\n        return\n      }\n      this.selectedFiles = files\n    },\n    removeFile(index) {\n      this.selectedFiles.splice(index, 1)\n      if (this.selectedFiles.length === 0) {\n        this.$refs.fileInput.value = ''\n      }\n    },\n    formatFileSize(bytes) {\n      if (bytes < 1024) return bytes + ' B'\n      else if (bytes < 1048576) return (bytes / 1024).toFixed(1) + ' KB'\n      else return (bytes / 1048576).toFixed(1) + ' MB'\n    },\n    toggleEmojiPicker() {\n      this.showEmojiPicker = !this.showEmojiPicker\n    },\n    addEmoji(emoji) {\n      const cursorPosition = this.$refs.messageInput.selectionStart\n      const textBeforeCursor = this.newMessage.slice(0, cursorPosition)\n      const textAfterCursor = this.newMessage.slice(cursorPosition)\n      this.newMessage = textBeforeCursor + emoji + textAfterCursor\n      \n      this.$nextTick(() => {\n        const newPosition = cursorPosition + emoji.length\n        this.$refs.messageInput.setSelectionRange(newPosition, newPosition)\n        this.$refs.messageInput.focus()\n      })\n\n      this.showEmojiPicker = false\n    },\n    async markAsRead(messageId) {\n      try {\n        await axiosInstance.put(\n          `/private-messages/${messageId}/read`,\n          null,\n          {\n            headers: {\n              'X-Current-User-Id': this.currentUserId\n            }\n          }\n        )\n        await this.loadMessages()\n      } catch (error) {\n        console.error('Error marking message as read:', error)\n      }\n    },\n    async markAllAsRead() {\n      const unreadMessages = this.messages.filter(\n        msg => msg.receiver_id === this.currentUserId && !msg.is_read\n      )\n      \n      for (const msg of unreadMessages) {\n        await this.markAsRead(msg.id)\n      }\n      \n      this.unreadMessagesCount = 0\n    },\n    playNotificationSound() {\n      try {\n        this.notificationSound.currentTime = 0\n        this.notificationSound.play()\n      } catch (error) {\n        console.error('Error playing notification sound:', error)\n      }\n    },\n    showTitleNotification() {\n      if (this.titleInterval) return // Уже показывается\n      \n      this.titleInterval = setInterval(() => {\n        document.title = document.title === this.originalTitle \n          ? `(${this.unreadMessagesCount}) Новое сообщение` \n          : this.originalTitle\n      }, 1000)\n      \n      // Добавляем favicon с уведомлением\n      this.updateFavicon(true)\n    },\n    clearTitleNotification() {\n      if (this.titleInterval) {\n        clearInterval(this.titleInterval)\n        this.titleInterval = null\n        document.title = this.originalTitle\n        \n        // Возвращаем обычный favicon\n        this.updateFavicon(false)\n      }\n    },\n    updateFavicon(showNotification) {\n      const favicon = document.querySelector('link[rel=\"icon\"]')\n      if (!favicon) return\n      \n      if (showNotification) {\n        // Сохраняем оригинальный favicon, если еще не сохранен\n        if (!favicon.dataset.original) {\n          favicon.dataset.original = favicon.href\n        }\n        \n        // Здесь можно использовать готовый favicon с уведомлением\n        // или создать его динамически с помощью canvas\n        favicon.href = '/favicon-notification.ico' // Путь к favicon с уведомлением\n      } else if (favicon.dataset.original) {\n        // Возвращаем оригинальный favicon\n        favicon.href = favicon.dataset.original\n      }\n    },\n    formatMessageWithLinks(text) {\n      if (!text) return ''\n      \n      // Сначала экранируем HTML\n      const escapedText = text\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#039;')\n      \n      // Регулярное выражение для поиска URL и email\n      const urlRegex = /(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/g\n      const emailRegex = /([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+)/gi\n      \n      // Сначала заменяем URL на HTML-ссылки\n      let formattedText = escapedText.replace(urlRegex, (url) => {\n        return `<a href=\"${url}\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"message-link\">${url}</a>`\n      })\n      \n      // Затем заменяем email на HTML-ссылки\n      formattedText = formattedText.replace(emailRegex, (email) => {\n        return `<a href=\"mailto:${email}\" class=\"message-link email-link\">${email}</a>`\n      })\n      \n      return formattedText\n    },\n    handleMessageMutation(mutations) {\n      mutations.forEach(mutation => {\n        if (mutation.type === 'childList') {\n          mutation.addedNodes.forEach(node => {\n            if (node.nodeType === Node.ELEMENT_NODE) {\n              const messageElement = node as HTMLElement\n              if (messageElement.classList.contains('message')) {\n                const messageId = messageElement.dataset.messageId\n                const message = this.messages.find(m => m.id.toString() === messageId)\n                if (message) {\n                  messageElement.dataset.unread = (!message.is_read && message.receiver_id === this.currentUserId).toString()\n                }\n              }\n            }\n          })\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.popup-chat {\n  position: fixed;\n  bottom: 90px;\n  right: 20px;\n  width: 300px;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  display: flex;\n  flex-direction: column;\n  z-index: 998;\n}\n\n.chat-header {\n  padding: 10px;\n  background: #42b983;\n  color: white;\n  border-radius: 8px 8px 0 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  cursor: pointer;\n}\n\n.user-info {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.user-avatar {\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  overflow: hidden;\n}\n\n.user-avatar img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.default-avatar {\n  background-color: #e0e0e0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n}\n\n.default-avatar svg {\n  width: 20px;\n  height: 20px;\n  color: #757575;\n}\n\n.chat-controls {\n  display: flex;\n  gap: 5px;\n}\n\n.minimize-btn, .close-btn {\n  background: none;\n  border: none;\n  color: white;\n  cursor: pointer;\n  padding: 0 5px;\n}\n\n.chat-content {\n  height: 400px;\n  display: flex;\n  flex-direction: column;\n}\n\n.messages {\n  flex-grow: 1;\n  overflow-y: auto;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.message {\n  max-width: 80%;\n  padding: 8px;\n  border-radius: 8px;\n  background: #f5f5f5;\n}\n\n.own-message {\n  align-self: flex-end;\n  background: #e3f2fd;\n}\n\n.message-content {\n  margin-bottom: 4px;\n  word-break: break-word;\n}\n\n.message-info {\n  display: flex;\n  justify-content: flex-end;\n  gap: 5px;\n  font-size: 0.8em;\n  color: #666;\n}\n\n.input-area {\n  padding: 10px;\n  border-top: 1px solid #eee;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  position: relative;\n}\n\n.input-wrapper {\n  display: flex;\n  gap: 8px;\n  position: relative;\n}\n\n.attachment-trigger {\n  position: absolute;\n  right: 40px;\n  top: 50%;\n  transform: translateY(-50%);\n  cursor: pointer;\n  color: #999;\n  transition: color 0.2s;\n  padding: 5px;\n}\n\n.attachment-trigger:hover {\n  color: #666;\n}\n\n.emoji-trigger {\n  position: absolute;\n  right: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n  cursor: pointer;\n  color: #999;\n  transition: color 0.2s;\n  padding: 5px;\n}\n\n.emoji-trigger:hover {\n  color: #666;\n}\n\n.selected-files {\n  position: absolute;\n  bottom: 100%;\n  left: 0;\n  right: 0;\n  padding: 4px 8px;\n  background: #f8f9fa;\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n  border: 1px solid #eee;\n  border-bottom: none;\n  font-size: 0.85em;\n}\n\n.file-preview {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  padding: 2px 0;\n  color: #666;\n}\n\n.file-preview i {\n  font-size: 0.9em;\n  color: #999;\n}\n\n.file-name {\n  max-width: 150px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.file-size {\n  color: #999;\n  font-size: 0.9em;\n}\n\n.remove-file {\n  background: none;\n  border: none;\n  color: #999;\n  cursor: pointer;\n  padding: 0;\n  font-size: 0.9em;\n  margin-left: auto;\n}\n\n.remove-file:hover {\n  color: #ff4444;\n}\n\n.emoji-picker {\n  position: absolute;\n  bottom: 100%;\n  right: 0;\n  background: white;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  z-index: 1000;\n}\n\n.emoji-categories {\n  display: flex;\n  justify-content: space-around;\n  margin-bottom: 6px;\n  padding-bottom: 6px;\n  border-bottom: 1px solid #eee;\n}\n\n.emoji-categories button {\n  background: none;\n  border: none;\n  padding: 2px;\n  cursor: pointer;\n  font-size: 1em;\n  opacity: 0.6;\n  transition: opacity 0.2s;\n}\n\n.emoji-categories button:hover,\n.emoji-categories button.active {\n  opacity: 1;\n}\n\n.emoji-list {\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  gap: 1px;\n  max-height: 150px;\n  overflow-y: auto;\n  padding: 2px;\n}\n\n.emoji-button {\n  background: none;\n  border: none;\n  padding: 2px;\n  cursor: pointer;\n  font-size: 1.2em;\n  transition: opacity 0.2s;\n  opacity: 0.8;\n}\n\n.emoji-button:hover {\n  opacity: 1;\n}\n\n.minimized {\n  height: auto;\n}\n\n.minimized .chat-content {\n  display: none;\n}\n\n.read-status {\n  color: #42b983;\n}\n\n.delete-btn {\n  background: none;\n  border: none;\n  color: #999;\n  cursor: pointer;\n  padding: 0 5px;\n  font-size: 1.2em;\n  line-height: 1;\n  opacity: 0;\n  transition: opacity 0.2s;\n}\n\n.message:hover .delete-btn {\n  opacity: 1;\n}\n\n.delete-btn:hover {\n  color: #ff4444;\n}\n\n.modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1100;\n}\n\n.modal-content {\n  background: white;\n  padding: 20px;\n  border-radius: 8px;\n  width: 300px;\n  text-align: center;\n}\n\n.warning {\n  color: #ff4444;\n  font-size: 0.9em;\n  margin: 10px 0;\n}\n\n.modal-buttons {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  margin-top: 20px;\n}\n\n.delete-confirm-btn {\n  background: #ff4444;\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.delete-confirm-btn:hover {\n  background: #ff2222;\n}\n\n.cancel-btn {\n  background: #666;\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.cancel-btn:hover {\n  background: #555;\n}\n\n.mention-popup {\n  position: absolute;\n  bottom: 100%;\n  left: 0;\n  width: 200px;\n  max-height: 200px;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);\n  overflow-y: auto;\n  z-index: 1000;\n}\n\n.mention-item {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  padding: 8px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.mention-item:hover {\n  background-color: #f5f5f5;\n}\n\n.mention-avatar {\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  overflow: hidden;\n}\n\n.mention-avatar img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.mention-username {\n  font-size: 0.9em;\n  color: #333;\n}\n\n.message-attachments {\n  margin-top: 8px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.attachment {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 8px 12px;\n  background: #f8f9fa;\n  border-radius: 4px;\n  font-size: 0.9em;\n  transition: background-color 0.2s;\n}\n\n.attachment:hover {\n  background: #e9ecef;\n}\n\n.attachment i {\n  color: #6c757d;\n  font-size: 1.1em;\n}\n\n.attachment-link {\n  color: #0066cc;\n  text-decoration: none;\n  flex-grow: 1;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.attachment-link:hover {\n  text-decoration: underline;\n}\n\n.message-link {\n  color: #0066cc;\n  text-decoration: none;\n  word-break: break-all;\n  transition: color 0.2s;\n  display: inline-flex;\n  align-items: center;\n}\n\n.message-link:hover {\n  color: #0052a3;\n  text-decoration: underline;\n}\n\n/* Иконка для внешних ссылок */\n.message-link::after {\n  content: '↗';\n  display: inline-block;\n  margin-left: 3px;\n  font-size: 0.8em;\n  opacity: 0.7;\n}\n\n/* Специальная иконка для email-ссылок */\n.email-link::after {\n  content: '✉';\n}\n\n/* Стили для ссылок внутри .message-text */\n.message-text :deep(a) {\n  color: #0066cc;\n  text-decoration: none;\n  word-break: break-all;\n  transition: color 0.2s;\n  display: inline-flex;\n  align-items: center;\n}\n\n.message-text :deep(a:hover) {\n  color: #0052a3;\n  text-decoration: underline;\n}\n\n.message-text :deep(a.message-link::after) {\n  content: '↗';\n  display: inline-block;\n  margin-left: 3px;\n  font-size: 0.8em;\n  opacity: 0.7;\n}\n\n.message-text :deep(a.email-link::after) {\n  content: '✉';\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}