{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport Login from '../components/Login.vue';\nimport Register from '../components/Register.vue';\nimport Chat from '../components/Chat.vue';\nconst routes = [{\n  path: '/',\n  redirect: '/login'\n}, {\n  path: '/login',\n  name: 'Login',\n  component: Login\n}, {\n  path: '/register',\n  name: 'Register',\n  component: Register\n}, {\n  path: '/chat',\n  name: 'Chat',\n  component: Chat,\n  meta: {\n    requiresAuth: true\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\n// Навигационный guard для проверки авторизации\nrouter.beforeEach((to, from, next) => {\n  const isAuthenticated = false; // Временно установим false для тестирования\n\n  if (to.meta.requiresAuth && !isAuthenticated) {\n    next('/login');\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Login","Register","Chat","routes","path","redirect","name","component","meta","requiresAuth","router","history","beforeEach","to","from","next","isAuthenticated"],"sources":["/home/dotcore/ichat/frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\nimport Login from '../components/Login.vue'\nimport Register from '../components/Register.vue'\nimport Chat from '../components/Chat.vue'\n\nconst routes = [\n  {\n    path: '/',\n    redirect: '/login'\n  },\n  {\n    path: '/login',\n    name: 'Login',\n    component: Login\n  },\n  {\n    path: '/register',\n    name: 'Register',\n    component: Register\n  },\n  {\n    path: '/chat',\n    name: 'Chat',\n    component: Chat,\n    meta: { requiresAuth: true }\n  }\n]\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n})\n\n// Навигационный guard для проверки авторизации\nrouter.beforeEach((to, from, next) => {\n  const isAuthenticated = false // Временно установим false для тестирования\n  \n  if (to.meta.requiresAuth && !isAuthenticated) {\n    next('/login')\n  } else {\n    next()\n  }\n})\n\nexport default router "],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,KAAK,MAAM,yBAAyB;AAC3C,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,IAAI,MAAM,wBAAwB;AAEzC,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,QAAQ,EAAE;AACZ,CAAC,EACD;EACED,IAAI,EAAE,QAAQ;EACdE,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEP;AACb,CAAC,EACD;EACEI,IAAI,EAAE,WAAW;EACjBE,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEN;AACb,CAAC,EACD;EACEG,IAAI,EAAE,OAAO;EACbE,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEL,IAAI;EACfM,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,CACF;AAED,MAAMC,MAAM,GAAGZ,YAAY,CAAC;EAC1Ba,OAAO,EAAEZ,gBAAgB,CAAC,CAAC;EAC3BI;AACF,CAAC,CAAC;;AAEF;AACAO,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,eAAe,GAAG,KAAK,EAAC;;EAE9B,IAAIH,EAAE,CAACL,IAAI,CAACC,YAAY,IAAI,CAACO,eAAe,EAAE;IAC5CD,IAAI,CAAC,QAAQ,CAAC;EAChB,CAAC,MAAM;IACLA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}