{"ast":null,"code":"import { axiosInstance } from '../store/modules/auth';\nimport { emojiCategories } from '../utils/emojis';\nexport default {\n  name: 'PopupChat',\n  props: {\n    receiverId: {\n      type: [String, Number],\n      required: true\n    }\n  },\n  data() {\n    return {\n      messages: [],\n      newMessage: '',\n      loading: false,\n      receiver: {},\n      polling: null,\n      minimized: false,\n      showDeleteModal: false,\n      messageToDelete: null,\n      showMentionPopup: false,\n      mentionFilter: '',\n      mentionStartIndex: -1,\n      activeUsers: [],\n      showEmojiPicker: false,\n      currentCategory: 'smileys',\n      emojiCategories,\n      selectedFiles: []\n    };\n  },\n  computed: {\n    currentUserId() {\n      return this.$store.state.auth.userId;\n    },\n    filteredUsers() {\n      if (!this.mentionFilter) return this.activeUsers;\n      const filter = this.mentionFilter.toLowerCase();\n      return this.activeUsers.filter(user => user.username.toLowerCase().includes(filter));\n    }\n  },\n  async created() {\n    await this.loadReceiverInfo();\n    await this.loadMessages();\n    await this.loadActiveUsers();\n    this.startPolling();\n  },\n  beforeUnmount() {\n    this.stopPolling();\n  },\n  methods: {\n    async loadReceiverInfo() {\n      try {\n        const response = await axiosInstance.get(`/users/${this.receiverId}`);\n        this.receiver = response.data;\n      } catch (error) {\n        console.error('Error loading receiver info:', error);\n      }\n    },\n    async loadMessages() {\n      try {\n        const response = await axiosInstance.get(`/private-messages/${this.receiverId}`, {\n          headers: {\n            'X-Current-User-Id': this.currentUserId\n          }\n        });\n        this.messages = response.data;\n\n        // Отмечаем непрочитанные сообщения как прочитанные\n        const unreadMessages = this.messages.filter(msg => msg.receiver_id === this.currentUserId && !msg.is_read);\n        for (const msg of unreadMessages) {\n          await axiosInstance.put(`/private-messages/${msg.id}/read`, null, {\n            headers: {\n              'X-Current-User-Id': this.currentUserId\n            }\n          });\n        }\n        this.$nextTick(() => {\n          this.scrollToBottom();\n        });\n      } catch (error) {\n        console.error('Error loading messages:', error);\n      }\n    },\n    async sendMessage() {\n      if (this.newMessage.trim() === '' && this.selectedFiles.length === 0 || this.loading) return;\n      this.loading = true;\n      try {\n        let attachments = [];\n        if (this.selectedFiles.length > 0) {\n          const formData = new FormData();\n          this.selectedFiles.forEach(file => {\n            formData.append('files', file);\n          });\n          const response = await axiosInstance.post('/messages/attachments', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data',\n              'X-Current-User-Id': this.currentUserId\n            }\n          });\n          attachments = response.data.attachments;\n        }\n        await axiosInstance.post('/private-messages', {\n          content: this.newMessage.trim() || '',\n          receiver_id: parseInt(this.receiverId),\n          attachments: attachments\n        });\n        this.newMessage = '';\n        this.selectedFiles = [];\n        if (this.$refs.fileInput) {\n          this.$refs.fileInput.value = '';\n        }\n        await this.loadMessages();\n        this.scrollToBottom();\n      } catch (error) {\n        console.error('Error sending message:', error);\n        alert('Ошибка при отправке сообщения');\n      } finally {\n        this.loading = false;\n      }\n    },\n    startPolling() {\n      this.polling = setInterval(this.loadMessages, 3000);\n    },\n    stopPolling() {\n      if (this.polling) {\n        clearInterval(this.polling);\n        this.polling = null;\n      }\n    },\n    scrollToBottom() {\n      const container = this.$refs.messagesContainer;\n      if (container) {\n        container.scrollTop = container.scrollHeight;\n      }\n    },\n    formatDate(dateStr) {\n      if (!dateStr) return '';\n      const date = new Date(dateStr);\n      return date.toLocaleString('ru-RU', {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n    toggleMinimize() {\n      this.minimized = !this.minimized;\n    },\n    closeChat() {\n      this.$emit('close');\n    },\n    confirmDelete(message) {\n      this.messageToDelete = message;\n      this.showDeleteModal = true;\n    },\n    cancelDelete() {\n      this.messageToDelete = null;\n      this.showDeleteModal = false;\n    },\n    async deleteMessage() {\n      if (!this.messageToDelete) return;\n      try {\n        await axiosInstance.delete(`/private-messages/${this.messageToDelete.id}`, {\n          headers: {\n            'X-Current-User-Id': this.currentUserId\n          }\n        });\n        await this.loadMessages();\n        this.showDeleteModal = false;\n        this.messageToDelete = null;\n      } catch (error) {\n        console.error('Error deleting message:', error);\n      }\n    },\n    async loadActiveUsers() {\n      try {\n        const response = await axiosInstance.get('/users/active');\n        this.activeUsers = response.data;\n      } catch (error) {\n        console.error('Error loading active users:', error);\n      }\n    },\n    handleInput(event) {\n      const text = event.target.value;\n      const lastAtIndex = text.lastIndexOf('@');\n      if (lastAtIndex !== -1 && (lastAtIndex === 0 || text[lastAtIndex - 1] === ' ')) {\n        this.mentionStartIndex = lastAtIndex;\n        this.mentionFilter = text.slice(lastAtIndex + 1);\n        this.showMentionPopup = true;\n      } else if (this.showMentionPopup && this.mentionStartIndex !== -1) {\n        this.mentionFilter = text.slice(this.mentionStartIndex + 1);\n        if (!this.mentionFilter || text[this.mentionStartIndex] !== '@') {\n          this.closeMentionPopup();\n        }\n      }\n    },\n    handleKeydown(event) {\n      if (!this.showMentionPopup) return;\n      if (event.key === 'Escape') {\n        this.closeMentionPopup();\n      }\n    },\n    selectMention(user) {\n      const beforeMention = this.newMessage.slice(0, this.mentionStartIndex);\n      const afterMention = this.newMessage.slice(this.mentionStartIndex + this.mentionFilter.length + 1);\n      this.newMessage = `${beforeMention}@${user.username} ${afterMention}`;\n      this.closeMentionPopup();\n      this.$refs.messageInput.focus();\n    },\n    closeMentionPopup() {\n      this.showMentionPopup = false;\n      this.mentionFilter = '';\n      this.mentionStartIndex = -1;\n    },\n    handleFileSelect(event) {\n      const files = Array.from(event.target.files);\n      if (files.length > 3) {\n        alert('Можно прикрепить максимум 3 файла');\n        return;\n      }\n      this.selectedFiles = files;\n    },\n    removeFile(index) {\n      this.selectedFiles.splice(index, 1);\n      if (this.selectedFiles.length === 0) {\n        this.$refs.fileInput.value = '';\n      }\n    },\n    formatFileSize(bytes) {\n      if (bytes < 1024) return bytes + ' B';else if (bytes < 1048576) return (bytes / 1024).toFixed(1) + ' KB';else return (bytes / 1048576).toFixed(1) + ' MB';\n    },\n    toggleEmojiPicker() {\n      this.showEmojiPicker = !this.showEmojiPicker;\n    },\n    addEmoji(emoji) {\n      this.newMessage += emoji;\n    }\n  }\n};","map":{"version":3,"names":["axiosInstance","emojiCategories","name","props","receiverId","type","String","Number","required","data","messages","newMessage","loading","receiver","polling","minimized","showDeleteModal","messageToDelete","showMentionPopup","mentionFilter","mentionStartIndex","activeUsers","showEmojiPicker","currentCategory","selectedFiles","computed","currentUserId","$store","state","auth","userId","filteredUsers","filter","toLowerCase","user","username","includes","created","loadReceiverInfo","loadMessages","loadActiveUsers","startPolling","beforeUnmount","stopPolling","methods","response","get","error","console","headers","unreadMessages","msg","receiver_id","is_read","put","id","$nextTick","scrollToBottom","sendMessage","trim","length","attachments","formData","FormData","forEach","file","append","post","content","parseInt","$refs","fileInput","value","alert","setInterval","clearInterval","container","messagesContainer","scrollTop","scrollHeight","formatDate","dateStr","date","Date","toLocaleString","hour","minute","toggleMinimize","closeChat","$emit","confirmDelete","message","cancelDelete","deleteMessage","delete","handleInput","event","text","target","lastAtIndex","lastIndexOf","slice","closeMentionPopup","handleKeydown","key","selectMention","beforeMention","afterMention","messageInput","focus","handleFileSelect","files","Array","from","removeFile","index","splice","formatFileSize","bytes","toFixed","toggleEmojiPicker","addEmoji","emoji"],"sources":["/home/dotcore/ichat/frontend/src/components/PopupChat.vue"],"sourcesContent":["<template>\n  <div class=\"popup-chat\" :class=\"{ minimized }\">\n    <div class=\"chat-header\" @click=\"toggleMinimize\">\n      <div class=\"user-info\">\n        <div v-if=\"receiver.avatar_url\" class=\"user-avatar\">\n          <img :src=\"`http://localhost:8000${receiver.avatar_url}`\" alt=\"Аватар\">\n        </div>\n        <div v-else class=\"user-avatar default-avatar\">\n          <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n            <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"/>\n          </svg>\n        </div>\n        <span class=\"username\">{{ receiver.username }}</span>\n      </div>\n      <div class=\"chat-controls\">\n        <button class=\"minimize-btn\">\n          {{ minimized ? '△' : '▽' }}\n        </button>\n        <button class=\"close-btn\" @click.stop=\"closeChat\">✕</button>\n      </div>\n    </div>\n\n    <div v-if=\"!minimized\" class=\"chat-content\">\n      <div class=\"messages\" ref=\"messagesContainer\">\n        <div v-for=\"message in messages\" :key=\"message.id\" \n             :class=\"['message', { 'own-message': message.sender_id === currentUserId }]\">\n          <div class=\"message-content\">{{ message.content }}</div>\n          <div class=\"message-info\">\n            <span class=\"timestamp\">{{ formatDate(message.created_at) }}</span>\n            <button \n              class=\"delete-btn\"\n              @click=\"confirmDelete(message)\"\n            >\n              ✕\n            </button>\n            <span v-if=\"message.sender_id === currentUserId\" class=\"read-status\">\n              {{ message.is_read ? '✓✓' : '✓' }}\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"input-area\">\n        <div v-if=\"showEmojiPicker\" class=\"emoji-picker\" ref=\"emojiPicker\">\n          <div class=\"emoji-categories\">\n            <button \n              v-for=\"(category, name) in emojiCategories\" \n              :key=\"name\"\n              @click=\"currentCategory = name\"\n              :class=\"{ active: currentCategory === name }\"\n            >\n              {{ category.icon }}\n            </button>\n          </div>\n          <div class=\"emoji-list\">\n            <button \n              v-for=\"emoji in currentEmojis\" \n              :key=\"emoji\"\n              @click=\"addEmoji(emoji)\"\n              class=\"emoji-button\"\n            >\n              {{ emoji }}\n            </button>\n          </div>\n        </div>\n\n        <div class=\"input-wrapper\">\n          <input \n            v-model=\"newMessage\" \n            @keyup.enter=\"sendMessage\"\n            @input=\"handleInput\"\n            @keydown=\"handleKeydown\"\n            placeholder=\"Введите сообщение...\"\n            :disabled=\"loading\"\n            ref=\"messageInput\"\n          >\n          <label class=\"attachment-trigger\" title=\"Прикрепить файлы\">\n            <i class=\"fas fa-paperclip\"></i>\n            <input \n              type=\"file\" \n              multiple \n              @change=\"handleFileSelect\" \n              ref=\"fileInput\"\n              accept=\"*/*\"\n              style=\"display: none;\"\n            >\n          </label>\n          <span \n            class=\"emoji-trigger\"\n            @click.stop=\"toggleEmojiPicker\"\n            title=\"Добавить эмодзи\"\n          >\n            <i class=\"far fa-smile\"></i>\n          </span>\n        </div>\n\n        <div v-if=\"selectedFiles.length > 0\" class=\"selected-files\">\n          <div v-for=\"(file, index) in selectedFiles\" :key=\"index\" class=\"file-preview\">\n            <span class=\"file-name\">{{ file.name }}</span>\n            <span class=\"file-size\">({{ formatFileSize(file.size) }})</span>\n            <button class=\"remove-file\" @click=\"removeFile(index)\">✕</button>\n          </div>\n        </div>\n\n        <button \n          @click=\"sendMessage\" \n          :disabled=\"(newMessage.trim() === '' && selectedFiles.length === 0) || loading\"\n        >\n          <i class=\"fas fa-paper-plane\"></i>\n        </button>\n      </div>\n    </div>\n\n    <!-- Модальное окно подтверждения удаления -->\n    <div v-if=\"showDeleteModal\" class=\"modal\">\n      <div class=\"modal-content\">\n        <h3>Подтверждение удаления</h3>\n        <p>Вы действительно хотите удалить это сообщение?</p>\n        <p class=\"warning\">Сообщение будет удалено для всех участников переписки</p>\n        <div class=\"modal-buttons\">\n          <button @click=\"deleteMessage\" class=\"delete-confirm-btn\">Удалить</button>\n          <button @click=\"cancelDelete\" class=\"cancel-btn\">Отмена</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { axiosInstance } from '../store/modules/auth'\nimport { emojiCategories } from '../utils/emojis'\n\nexport default {\n  name: 'PopupChat',\n  props: {\n    receiverId: {\n      type: [String, Number],\n      required: true\n    }\n  },\n  data() {\n    return {\n      messages: [],\n      newMessage: '',\n      loading: false,\n      receiver: {},\n      polling: null,\n      minimized: false,\n      showDeleteModal: false,\n      messageToDelete: null,\n      showMentionPopup: false,\n      mentionFilter: '',\n      mentionStartIndex: -1,\n      activeUsers: [],\n      showEmojiPicker: false,\n      currentCategory: 'smileys',\n      emojiCategories,\n      selectedFiles: []\n    }\n  },\n  computed: {\n    currentUserId() {\n      return this.$store.state.auth.userId\n    },\n    filteredUsers() {\n      if (!this.mentionFilter) return this.activeUsers\n      const filter = this.mentionFilter.toLowerCase()\n      return this.activeUsers.filter(user => \n        user.username.toLowerCase().includes(filter)\n      )\n    }\n  },\n  async created() {\n    await this.loadReceiverInfo()\n    await this.loadMessages()\n    await this.loadActiveUsers()\n    this.startPolling()\n  },\n  beforeUnmount() {\n    this.stopPolling()\n  },\n  methods: {\n    async loadReceiverInfo() {\n      try {\n        const response = await axiosInstance.get(`/users/${this.receiverId}`)\n        this.receiver = response.data\n      } catch (error) {\n        console.error('Error loading receiver info:', error)\n      }\n    },\n    async loadMessages() {\n      try {\n        const response = await axiosInstance.get(\n          `/private-messages/${this.receiverId}`, \n          { \n            headers: {\n              'X-Current-User-Id': this.currentUserId\n            }\n          }\n        )\n        this.messages = response.data\n        \n        // Отмечаем непрочитанные сообщения как прочитанные\n        const unreadMessages = this.messages.filter(\n          msg => msg.receiver_id === this.currentUserId && !msg.is_read\n        )\n        \n        for (const msg of unreadMessages) {\n          await axiosInstance.put(\n            `/private-messages/${msg.id}/read`,\n            null,\n            {\n              headers: {\n                'X-Current-User-Id': this.currentUserId\n              }\n            }\n          )\n        }\n        \n        this.$nextTick(() => {\n          this.scrollToBottom()\n        })\n      } catch (error) {\n        console.error('Error loading messages:', error)\n      }\n    },\n    async sendMessage() {\n      if ((this.newMessage.trim() === '' && this.selectedFiles.length === 0) || this.loading) return\n\n      this.loading = true\n      try {\n        let attachments = []\n        \n        if (this.selectedFiles.length > 0) {\n          const formData = new FormData()\n          this.selectedFiles.forEach(file => {\n            formData.append('files', file)\n          })\n\n          const response = await axiosInstance.post('/messages/attachments', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data',\n              'X-Current-User-Id': this.currentUserId\n            }\n          })\n          attachments = response.data.attachments\n        }\n\n        await axiosInstance.post('/private-messages', {\n          content: this.newMessage.trim() || '',\n          receiver_id: parseInt(this.receiverId),\n          attachments: attachments\n        })\n\n        this.newMessage = ''\n        this.selectedFiles = []\n        if (this.$refs.fileInput) {\n          this.$refs.fileInput.value = ''\n        }\n        await this.loadMessages()\n        this.scrollToBottom()\n      } catch (error) {\n        console.error('Error sending message:', error)\n        alert('Ошибка при отправке сообщения')\n      } finally {\n        this.loading = false\n      }\n    },\n    startPolling() {\n      this.polling = setInterval(this.loadMessages, 3000)\n    },\n    stopPolling() {\n      if (this.polling) {\n        clearInterval(this.polling)\n        this.polling = null\n      }\n    },\n    scrollToBottom() {\n      const container = this.$refs.messagesContainer\n      if (container) {\n        container.scrollTop = container.scrollHeight\n      }\n    },\n    formatDate(dateStr) {\n      if (!dateStr) return ''\n      const date = new Date(dateStr)\n      return date.toLocaleString('ru-RU', {\n        hour: '2-digit',\n        minute: '2-digit'\n      })\n    },\n    toggleMinimize() {\n      this.minimized = !this.minimized\n    },\n    closeChat() {\n      this.$emit('close')\n    },\n    confirmDelete(message) {\n      this.messageToDelete = message\n      this.showDeleteModal = true\n    },\n    cancelDelete() {\n      this.messageToDelete = null\n      this.showDeleteModal = false\n    },\n    async deleteMessage() {\n      if (!this.messageToDelete) return\n\n      try {\n        await axiosInstance.delete(\n          `/private-messages/${this.messageToDelete.id}`,\n          {\n            headers: {\n              'X-Current-User-Id': this.currentUserId\n            }\n          }\n        )\n        await this.loadMessages()\n        this.showDeleteModal = false\n        this.messageToDelete = null\n      } catch (error) {\n        console.error('Error deleting message:', error)\n      }\n    },\n    async loadActiveUsers() {\n      try {\n        const response = await axiosInstance.get('/users/active')\n        this.activeUsers = response.data\n      } catch (error) {\n        console.error('Error loading active users:', error)\n      }\n    },\n    handleInput(event) {\n      const text = event.target.value\n      const lastAtIndex = text.lastIndexOf('@')\n      \n      if (lastAtIndex !== -1 && (lastAtIndex === 0 || text[lastAtIndex - 1] === ' ')) {\n        this.mentionStartIndex = lastAtIndex\n        this.mentionFilter = text.slice(lastAtIndex + 1)\n        this.showMentionPopup = true\n      } else if (this.showMentionPopup && this.mentionStartIndex !== -1) {\n        this.mentionFilter = text.slice(this.mentionStartIndex + 1)\n        if (!this.mentionFilter || text[this.mentionStartIndex] !== '@') {\n          this.closeMentionPopup()\n        }\n      }\n    },\n    handleKeydown(event) {\n      if (!this.showMentionPopup) return\n\n      if (event.key === 'Escape') {\n        this.closeMentionPopup()\n      }\n    },\n    selectMention(user) {\n      const beforeMention = this.newMessage.slice(0, this.mentionStartIndex)\n      const afterMention = this.newMessage.slice(this.mentionStartIndex + this.mentionFilter.length + 1)\n      this.newMessage = `${beforeMention}@${user.username} ${afterMention}`\n      this.closeMentionPopup()\n      this.$refs.messageInput.focus()\n    },\n    closeMentionPopup() {\n      this.showMentionPopup = false\n      this.mentionFilter = ''\n      this.mentionStartIndex = -1\n    },\n    handleFileSelect(event) {\n      const files = Array.from(event.target.files)\n      if (files.length > 3) {\n        alert('Можно прикрепить максимум 3 файла')\n        return\n      }\n      this.selectedFiles = files\n    },\n    removeFile(index) {\n      this.selectedFiles.splice(index, 1)\n      if (this.selectedFiles.length === 0) {\n        this.$refs.fileInput.value = ''\n      }\n    },\n    formatFileSize(bytes) {\n      if (bytes < 1024) return bytes + ' B'\n      else if (bytes < 1048576) return (bytes / 1024).toFixed(1) + ' KB'\n      else return (bytes / 1048576).toFixed(1) + ' MB'\n    },\n    toggleEmojiPicker() {\n      this.showEmojiPicker = !this.showEmojiPicker\n    },\n    addEmoji(emoji) {\n      this.newMessage += emoji\n    }\n  }\n}\n</script>\n\n<style scoped>\n.popup-chat {\n  position: fixed;\n  bottom: 90px;\n  right: 20px;\n  width: 300px;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  display: flex;\n  flex-direction: column;\n  z-index: 998;\n}\n\n.chat-header {\n  padding: 10px;\n  background: #42b983;\n  color: white;\n  border-radius: 8px 8px 0 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  cursor: pointer;\n}\n\n.user-info {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.user-avatar {\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  overflow: hidden;\n}\n\n.user-avatar img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.default-avatar {\n  background-color: #e0e0e0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n}\n\n.default-avatar svg {\n  width: 20px;\n  height: 20px;\n  color: #757575;\n}\n\n.chat-controls {\n  display: flex;\n  gap: 5px;\n}\n\n.minimize-btn, .close-btn {\n  background: none;\n  border: none;\n  color: white;\n  cursor: pointer;\n  padding: 0 5px;\n}\n\n.chat-content {\n  height: 400px;\n  display: flex;\n  flex-direction: column;\n}\n\n.messages {\n  flex-grow: 1;\n  overflow-y: auto;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.message {\n  max-width: 80%;\n  padding: 8px;\n  border-radius: 8px;\n  background: #f5f5f5;\n}\n\n.own-message {\n  align-self: flex-end;\n  background: #e3f2fd;\n}\n\n.message-content {\n  margin-bottom: 4px;\n  word-break: break-word;\n}\n\n.message-info {\n  display: flex;\n  justify-content: flex-end;\n  gap: 5px;\n  font-size: 0.8em;\n  color: #666;\n}\n\n.input-area {\n  padding: 10px;\n  border-top: 1px solid #eee;\n  display: flex;\n  gap: 10px;\n  position: relative;\n}\n\n.input-wrapper {\n  position: relative;\n  flex-grow: 1;\n  display: flex;\n  align-items: center;\n}\n\n.attachment-trigger {\n  position: absolute;\n  right: 40px;\n  top: 50%;\n  transform: translateY(-50%);\n  cursor: pointer;\n  color: #999;\n  transition: color 0.2s;\n  padding: 5px;\n}\n\n.attachment-trigger:hover {\n  color: #666;\n}\n\n.emoji-trigger {\n  position: absolute;\n  right: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n  cursor: pointer;\n  color: #999;\n  transition: color 0.2s;\n  padding: 5px;\n}\n\n.emoji-trigger:hover {\n  color: #666;\n}\n\n.selected-files {\n  margin-top: 8px;\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n}\n\n.file-preview {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 4px 8px;\n  background: #f5f5f5;\n  border-radius: 4px;\n  font-size: 0.9em;\n}\n\n.file-name {\n  max-width: 200px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.file-size {\n  color: #666;\n}\n\n.remove-file {\n  background: none;\n  border: none;\n  color: #999;\n  cursor: pointer;\n  padding: 0 4px;\n}\n\n.remove-file:hover {\n  color: #ff4444;\n}\n\n.emoji-picker {\n  position: absolute;\n  bottom: 100%;\n  right: 0;\n  background: white;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  z-index: 1000;\n}\n\n.emoji-categories {\n  display: flex;\n  justify-content: space-around;\n  margin-bottom: 6px;\n  padding-bottom: 6px;\n  border-bottom: 1px solid #eee;\n}\n\n.emoji-categories button {\n  background: none;\n  border: none;\n  padding: 2px;\n  cursor: pointer;\n  font-size: 1em;\n  opacity: 0.6;\n  transition: opacity 0.2s;\n}\n\n.emoji-categories button:hover,\n.emoji-categories button.active {\n  opacity: 1;\n}\n\n.emoji-list {\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  gap: 1px;\n  max-height: 150px;\n  overflow-y: auto;\n  padding: 2px;\n}\n\n.emoji-button {\n  background: none;\n  border: none;\n  padding: 2px;\n  cursor: pointer;\n  font-size: 1.2em;\n  transition: opacity 0.2s;\n  opacity: 0.8;\n}\n\n.emoji-button:hover {\n  opacity: 1;\n}\n\n.minimized {\n  height: auto;\n}\n\n.minimized .chat-content {\n  display: none;\n}\n\n.read-status {\n  color: #42b983;\n}\n\n.delete-btn {\n  background: none;\n  border: none;\n  color: #999;\n  cursor: pointer;\n  padding: 0 5px;\n  font-size: 1.2em;\n  line-height: 1;\n  opacity: 0;\n  transition: opacity 0.2s;\n}\n\n.message:hover .delete-btn {\n  opacity: 1;\n}\n\n.delete-btn:hover {\n  color: #ff4444;\n}\n\n.modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1100;\n}\n\n.modal-content {\n  background: white;\n  padding: 20px;\n  border-radius: 8px;\n  width: 300px;\n  text-align: center;\n}\n\n.warning {\n  color: #ff4444;\n  font-size: 0.9em;\n  margin: 10px 0;\n}\n\n.modal-buttons {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  margin-top: 20px;\n}\n\n.delete-confirm-btn {\n  background: #ff4444;\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.delete-confirm-btn:hover {\n  background: #ff2222;\n}\n\n.cancel-btn {\n  background: #666;\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.cancel-btn:hover {\n  background: #555;\n}\n\n.mention-popup {\n  position: absolute;\n  bottom: 100%;\n  left: 0;\n  width: 200px;\n  max-height: 200px;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);\n  overflow-y: auto;\n  z-index: 1000;\n}\n\n.mention-item {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  padding: 8px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.mention-item:hover {\n  background-color: #f5f5f5;\n}\n\n.mention-avatar {\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  overflow: hidden;\n}\n\n.mention-avatar img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.mention-username {\n  font-size: 0.9em;\n  color: #333;\n}\n\n.message-attachments {\n  margin-top: 8px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.attachment {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 8px 12px;\n  background: #f8f9fa;\n  border-radius: 4px;\n  font-size: 0.9em;\n  transition: background-color 0.2s;\n}\n\n.attachment:hover {\n  background: #e9ecef;\n}\n\n.attachment i {\n  color: #6c757d;\n  font-size: 1.1em;\n}\n\n.attachment-link {\n  color: #0066cc;\n  text-decoration: none;\n  flex-grow: 1;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.attachment-link:hover {\n  text-decoration: underline;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}