{"ast":null,"code":"export default {\n  name: 'Register',\n  data() {\n    return {\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      error: null,\n      successMessage: null,\n      loading: false\n    };\n  },\n  methods: {\n    async handleSubmit() {\n      this.error = null;\n      this.successMessage = null;\n      this.loading = true;\n      if (this.password !== this.confirmPassword) {\n        this.error = 'Пароли не совпадают';\n        this.loading = false;\n        return;\n      }\n      try {\n        await this.$store.dispatch('auth/register', {\n          username: this.username,\n          email: this.email,\n          password: this.password\n        });\n        this.successMessage = 'Спасибо за регистрацию! Теперь вы можете войти';\n\n        // Очищаем форму\n        this.username = '';\n        this.email = '';\n        this.password = '';\n        this.confirmPassword = '';\n\n        // Перенаправляем на страницу входа через 2 секунды\n        setTimeout(() => {\n          this.$router.push('/login');\n        }, 2000);\n      } catch (error) {\n        this.error = error.message;\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","username","email","password","confirmPassword","error","successMessage","loading","methods","handleSubmit","$store","dispatch","setTimeout","$router","push","message"],"sources":["/home/dotcore/ichat/frontend/src/components/Register.vue"],"sourcesContent":["<template>\n  <div class=\"login\">\n    <h2>Регистрация</h2>\n    <div v-if=\"error\" class=\"error-message\">\n      {{ error }}\n    </div>\n    <div v-if=\"successMessage\" class=\"success-message\">\n      {{ successMessage }}\n    </div>\n    <form @submit.prevent=\"handleSubmit\">\n      <div class=\"form-group\">\n        <label>Имя пользователя:</label>\n        <input \n          type=\"text\" \n          v-model=\"username\" \n          required\n          placeholder=\"Введите имя пользователя\"\n        >\n      </div>\n      <div class=\"form-group\">\n        <label>Email:</label>\n        <input \n          type=\"email\" \n          v-model=\"email\" \n          required\n          placeholder=\"Введите email\"\n        >\n      </div>\n      <div class=\"form-group\">\n        <label>Пароль:</label>\n        <input \n          type=\"password\" \n          v-model=\"password\" \n          required\n          placeholder=\"Введите пароль\"\n        >\n      </div>\n      <div class=\"form-group\">\n        <label>Подтверждение пароля:</label>\n        <input \n          type=\"password\" \n          v-model=\"confirmPassword\" \n          required\n          placeholder=\"Подтвердите пароль\"\n        >\n      </div>\n      <button type=\"submit\" :disabled=\"loading\">\n        {{ loading ? 'Регистрация...' : 'Зарегистрироваться' }}\n      </button>\n    </form>\n    <div class=\"form-footer\">\n      <p>Уже есть аккаунт? <router-link to=\"/login\">Войти</router-link></p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Register',\n  data() {\n    return {\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      error: null,\n      successMessage: null,\n      loading: false\n    }\n  },\n  methods: {\n    async handleSubmit() {\n      this.error = null\n      this.successMessage = null\n      this.loading = true\n\n      if (this.password !== this.confirmPassword) {\n        this.error = 'Пароли не совпадают'\n        this.loading = false\n        return\n      }\n\n      try {\n        await this.$store.dispatch('auth/register', {\n          username: this.username,\n          email: this.email,\n          password: this.password\n        })\n        this.successMessage = 'Спасибо за регистрацию! Теперь вы можете войти'\n        \n        // Очищаем форму\n        this.username = ''\n        this.email = ''\n        this.password = ''\n        this.confirmPassword = ''\n        \n        // Перенаправляем на страницу входа через 2 секунды\n        setTimeout(() => {\n          this.$router.push('/login')\n        }, 2000)\n      } catch (error) {\n        this.error = error.message\n      } finally {\n        this.loading = false\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.error-message {\n  color: #dc3545;\n  background-color: #f8d7da;\n  border: 1px solid #f5c6cb;\n  border-radius: 4px;\n  padding: 10px;\n  margin-bottom: 15px;\n}\n\n.success-message {\n  color: #28a745;\n  background-color: #d4edda;\n  border: 1px solid #c3e6cb;\n  border-radius: 4px;\n  padding: 10px;\n  margin-bottom: 15px;\n}\n\n.form-footer {\n  text-align: center;\n  margin-top: 20px;\n  padding-top: 20px;\n  border-top: 1px solid #eee;\n}\n\n.form-footer a {\n  color: #42b983;\n  text-decoration: none;\n}\n\n.form-footer a:hover {\n  text-decoration: underline;\n}\n\nbutton:disabled {\n  background-color: #ccc;\n  cursor: not-allowed;\n}\n</style> "],"mappings":"AAyDA,eAAe;EACbA,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,EAAE;MACnBC,KAAK,EAAE,IAAI;MACXC,cAAc,EAAE,IAAI;MACpBC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,YAAYA,CAAA,EAAG;MACnB,IAAI,CAACJ,KAAI,GAAI,IAAG;MAChB,IAAI,CAACC,cAAa,GAAI,IAAG;MACzB,IAAI,CAACC,OAAM,GAAI,IAAG;MAElB,IAAI,IAAI,CAACJ,QAAO,KAAM,IAAI,CAACC,eAAe,EAAE;QAC1C,IAAI,CAACC,KAAI,GAAI,qBAAoB;QACjC,IAAI,CAACE,OAAM,GAAI,KAAI;QACnB;MACF;MAEA,IAAI;QACF,MAAM,IAAI,CAACG,MAAM,CAACC,QAAQ,CAAC,eAAe,EAAE;UAC1CV,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC;QACD,IAAI,CAACG,cAAa,GAAI,gDAA+C;;QAErE;QACA,IAAI,CAACL,QAAO,GAAI,EAAC;QACjB,IAAI,CAACC,KAAI,GAAI,EAAC;QACd,IAAI,CAACC,QAAO,GAAI,EAAC;QACjB,IAAI,CAACC,eAAc,GAAI,EAAC;;QAExB;QACAQ,UAAU,CAAC,MAAM;UACf,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ;QAC5B,CAAC,EAAE,IAAI;MACT,EAAE,OAAOT,KAAK,EAAE;QACd,IAAI,CAACA,KAAI,GAAIA,KAAK,CAACU,OAAM;MAC3B,UAAU;QACR,IAAI,CAACR,OAAM,GAAI,KAAI;MACrB;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}