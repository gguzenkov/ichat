{"ast":null,"code":"import { axiosInstance } from '../store/modules/auth';\nexport default {\n  name: 'Profile',\n  data() {\n    return {\n      userInfo: {\n        username: '',\n        email: '',\n        avatar: null\n      },\n      passwordForm: {\n        currentPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      },\n      loading: false,\n      error: null,\n      success: null,\n      avatarUrl: null\n    };\n  },\n  async created() {\n    await this.loadUserInfo();\n  },\n  methods: {\n    async loadUserInfo() {\n      try {\n        const response = await axiosInstance.get(`/users/${this.$store.state.auth.userId}`);\n        this.userInfo = response.data;\n        this.avatarUrl = response.data.avatar_url;\n      } catch (error) {\n        console.error('Error loading user info:', error);\n        this.error = 'Ошибка при загрузке информации пользователя';\n      }\n    },\n    triggerFileInput() {\n      this.$refs.fileInput.click();\n    },\n    async handleAvatarUpload(event) {\n      const file = event.target.files[0];\n      if (!file) return;\n      const formData = new FormData();\n      formData.append('avatar', file);\n      try {\n        this.loading = true;\n        const response = await axiosInstance.post(`/users/${this.$store.state.auth.userId}/avatar`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        this.avatarUrl = response.data.avatar_url;\n        this.success = 'Аватар успешно обновлен';\n        setTimeout(() => {\n          const img = new Image();\n          img.src = `http://localhost:8000${this.avatarUrl}?${new Date().getTime()}`;\n        }, 100);\n      } catch (error) {\n        console.error('Error uploading avatar:', error);\n        this.error = 'Ошибка при загрузке аватара';\n      } finally {\n        this.loading = false;\n      }\n    },\n    async changePassword() {\n      if (this.passwordForm.newPassword !== this.passwordForm.confirmPassword) {\n        this.error = 'Пароли не совпадают';\n        return;\n      }\n      try {\n        this.loading = true;\n        await axiosInstance.post(`/users/${this.$store.state.auth.userId}/change-password`, {\n          current_password: this.passwordForm.currentPassword,\n          new_password: this.passwordForm.newPassword\n        });\n        this.success = 'Пароль успешно изменен';\n        this.passwordForm = {\n          currentPassword: '',\n          newPassword: '',\n          confirmPassword: ''\n        };\n        this.error = null;\n      } catch (error) {\n        console.error('Error changing password:', error);\n        if (error.response?.status === 401) {\n          this.error = 'Неверный текущий пароль';\n        } else {\n          this.error = 'Ошибка при изменении пароля';\n        }\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axiosInstance","name","data","userInfo","username","email","avatar","passwordForm","currentPassword","newPassword","confirmPassword","loading","error","success","avatarUrl","created","loadUserInfo","methods","response","get","$store","state","auth","userId","avatar_url","console","triggerFileInput","$refs","fileInput","click","handleAvatarUpload","event","file","target","files","formData","FormData","append","post","headers","setTimeout","img","Image","src","Date","getTime","changePassword","current_password","new_password","status"],"sources":["/home/dotcore/ichat/frontend/src/components/Profile.vue"],"sourcesContent":["<template>\n  <div class=\"profile-container\">\n    <div class=\"profile-card\">\n      <div class=\"avatar-section\">\n        <div class=\"avatar\">\n          <img \n            :src=\"avatarUrl ? `http://localhost:8000${avatarUrl}` : '/default-avatar.png'\" \n            alt=\"Аватар\"\n          >\n          <div class=\"avatar-overlay\" @click=\"triggerFileInput\">\n            <span>Изменить фото</span>\n          </div>\n        </div>\n        <input\n          type=\"file\"\n          ref=\"fileInput\"\n          style=\"display: none\"\n          accept=\"image/*\"\n          @change=\"handleAvatarUpload\"\n        >\n      </div>\n\n      <div class=\"profile-info\">\n        <h2>Профиль пользователя</h2>\n        \n        <div class=\"info-group\">\n          <label>Логин:</label>\n          <span>{{ userInfo.username }}</span>\n        </div>\n\n        <div class=\"info-group\">\n          <label>E-mail:</label>\n          <span>{{ userInfo.email }}</span>\n        </div>\n\n        <div class=\"password-section\">\n          <h3>Изменить пароль</h3>\n          <div class=\"form-group\">\n            <label>Текущий пароль:</label>\n            <input \n              type=\"password\" \n              v-model=\"passwordForm.currentPassword\"\n              placeholder=\"Введите текущий пароль\"\n            >\n          </div>\n          <div class=\"form-group\">\n            <label>Новый пароль:</label>\n            <input \n              type=\"password\" \n              v-model=\"passwordForm.newPassword\"\n              placeholder=\"Введите новый пароль\"\n            >\n          </div>\n          <div class=\"form-group\">\n            <label>Подтверждение пароля:</label>\n            <input \n              type=\"password\" \n              v-model=\"passwordForm.confirmPassword\"\n              placeholder=\"Подтвердите новый пароль\"\n            >\n          </div>\n          <button @click=\"changePassword\" :disabled=\"loading\">\n            {{ loading ? 'Сохранение...' : 'Изменить пароль' }}\n          </button>\n        </div>\n\n        <div v-if=\"error\" class=\"error-message\">\n          {{ error }}\n        </div>\n        <div v-if=\"success\" class=\"success-message\">\n          {{ success }}\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { axiosInstance } from '../store/modules/auth'\n\nexport default {\n  name: 'Profile',\n  data() {\n    return {\n      userInfo: {\n        username: '',\n        email: '',\n        avatar: null\n      },\n      passwordForm: {\n        currentPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      },\n      loading: false,\n      error: null,\n      success: null,\n      avatarUrl: null\n    }\n  },\n  async created() {\n    await this.loadUserInfo()\n  },\n  methods: {\n    async loadUserInfo() {\n      try {\n        const response = await axiosInstance.get(`/users/${this.$store.state.auth.userId}`)\n        this.userInfo = response.data\n        this.avatarUrl = response.data.avatar_url\n      } catch (error) {\n        console.error('Error loading user info:', error)\n        this.error = 'Ошибка при загрузке информации пользователя'\n      }\n    },\n    \n    triggerFileInput() {\n      this.$refs.fileInput.click()\n    },\n    \n    async handleAvatarUpload(event) {\n      const file = event.target.files[0]\n      if (!file) return\n      \n      const formData = new FormData()\n      formData.append('avatar', file)\n      \n      try {\n        this.loading = true\n        const response = await axiosInstance.post(`/users/${this.$store.state.auth.userId}/avatar`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        })\n        this.avatarUrl = response.data.avatar_url\n        this.success = 'Аватар успешно обновлен'\n        \n        setTimeout(() => {\n          const img = new Image()\n          img.src = `http://localhost:8000${this.avatarUrl}?${new Date().getTime()}`\n        }, 100)\n      } catch (error) {\n        console.error('Error uploading avatar:', error)\n        this.error = 'Ошибка при загрузке аватара'\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    async changePassword() {\n      if (this.passwordForm.newPassword !== this.passwordForm.confirmPassword) {\n        this.error = 'Пароли не совпадают'\n        return\n      }\n      \n      try {\n        this.loading = true\n        await axiosInstance.post(`/users/${this.$store.state.auth.userId}/change-password`, {\n          current_password: this.passwordForm.currentPassword,\n          new_password: this.passwordForm.newPassword\n        })\n        \n        this.success = 'Пароль успешно изменен'\n        this.passwordForm = {\n          currentPassword: '',\n          newPassword: '',\n          confirmPassword: ''\n        }\n        this.error = null\n      } catch (error) {\n        console.error('Error changing password:', error)\n        if (error.response?.status === 401) {\n          this.error = 'Неверный текущий пароль'\n        } else {\n          this.error = 'Ошибка при изменении пароля'\n        }\n      } finally {\n        this.loading = false\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.profile-container {\n  padding: 20px;\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n.profile-card {\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  padding: 30px;\n  display: flex;\n  gap: 40px;\n}\n\n.avatar-section {\n  flex-shrink: 0;\n}\n\n.avatar {\n  width: 200px;\n  height: 200px;\n  border-radius: 50%;\n  overflow: hidden;\n  position: relative;\n  cursor: pointer;\n}\n\n.avatar img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.avatar-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: 0;\n  transition: opacity 0.3s;\n}\n\n.avatar-overlay span {\n  color: white;\n  font-size: 14px;\n}\n\n.avatar:hover .avatar-overlay {\n  opacity: 1;\n}\n\n.profile-info {\n  flex-grow: 1;\n}\n\n.info-group {\n  margin-bottom: 20px;\n}\n\n.info-group label {\n  display: block;\n  color: #666;\n  margin-bottom: 5px;\n}\n\n.info-group span {\n  font-size: 16px;\n  color: #333;\n}\n\n.password-section {\n  margin-top: 30px;\n  padding-top: 20px;\n  border-top: 1px solid #eee;\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 5px;\n  color: #666;\n}\n\ninput {\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 14px;\n}\n\nbutton {\n  background: #42b983;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n}\n\nbutton:disabled {\n  background: #ccc;\n  cursor: not-allowed;\n}\n\n.error-message {\n  margin-top: 20px;\n  padding: 10px;\n  background: #ffe6e6;\n  color: #ff4444;\n  border-radius: 4px;\n}\n\n.success-message {\n  margin-top: 20px;\n  padding: 10px;\n  background: #e6ffe6;\n  color: #42b983;\n  border-radius: 4px;\n}\n</style> "],"mappings":"AA8EA,SAASA,aAAY,QAAS,uBAAsB;AAEpD,eAAe;EACbC,IAAI,EAAE,SAAS;EACfC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;QACRC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,MAAM,EAAE;MACV,CAAC;MACDC,YAAY,EAAE;QACZC,eAAe,EAAE,EAAE;QACnBC,WAAW,EAAE,EAAE;QACfC,eAAe,EAAE;MACnB,CAAC;MACDC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE,IAAI;MACXC,OAAO,EAAE,IAAI;MACbC,SAAS,EAAE;IACb;EACF,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,YAAY,CAAC;EAC1B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMlB,aAAa,CAACmB,GAAG,CAAC,UAAU,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,MAAM,EAAE;QAClF,IAAI,CAACpB,QAAO,GAAIe,QAAQ,CAAChB,IAAG;QAC5B,IAAI,CAACY,SAAQ,GAAII,QAAQ,CAAChB,IAAI,CAACsB,UAAS;MAC1C,EAAE,OAAOZ,KAAK,EAAE;QACda,OAAO,CAACb,KAAK,CAAC,0BAA0B,EAAEA,KAAK;QAC/C,IAAI,CAACA,KAAI,GAAI,6CAA4C;MAC3D;IACF,CAAC;IAEDc,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACC,KAAK,CAACC,SAAS,CAACC,KAAK,CAAC;IAC7B,CAAC;IAED,MAAMC,kBAAkBA,CAACC,KAAK,EAAE;MAC9B,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC;MACjC,IAAI,CAACF,IAAI,EAAE;MAEX,MAAMG,QAAO,GAAI,IAAIC,QAAQ,CAAC;MAC9BD,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEL,IAAI;MAE9B,IAAI;QACF,IAAI,CAACrB,OAAM,GAAI,IAAG;QAClB,MAAMO,QAAO,GAAI,MAAMlB,aAAa,CAACsC,IAAI,CAAC,UAAU,IAAI,CAAClB,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,MAAM,SAAS,EAAEY,QAAQ,EAAE;UACpGI,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC;QACD,IAAI,CAACzB,SAAQ,GAAII,QAAQ,CAAChB,IAAI,CAACsB,UAAS;QACxC,IAAI,CAACX,OAAM,GAAI,yBAAwB;QAEvC2B,UAAU,CAAC,MAAM;UACf,MAAMC,GAAE,GAAI,IAAIC,KAAK,CAAC;UACtBD,GAAG,CAACE,GAAE,GAAI,wBAAwB,IAAI,CAAC7B,SAAS,IAAI,IAAI8B,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,EAAC;QAC3E,CAAC,EAAE,GAAG;MACR,EAAE,OAAOjC,KAAK,EAAE;QACda,OAAO,CAACb,KAAK,CAAC,yBAAyB,EAAEA,KAAK;QAC9C,IAAI,CAACA,KAAI,GAAI,6BAA4B;MAC3C,UAAU;QACR,IAAI,CAACD,OAAM,GAAI,KAAI;MACrB;IACF,CAAC;IAED,MAAMmC,cAAcA,CAAA,EAAG;MACrB,IAAI,IAAI,CAACvC,YAAY,CAACE,WAAU,KAAM,IAAI,CAACF,YAAY,CAACG,eAAe,EAAE;QACvE,IAAI,CAACE,KAAI,GAAI,qBAAoB;QACjC;MACF;MAEA,IAAI;QACF,IAAI,CAACD,OAAM,GAAI,IAAG;QAClB,MAAMX,aAAa,CAACsC,IAAI,CAAC,UAAU,IAAI,CAAClB,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,MAAM,kBAAkB,EAAE;UAClFwB,gBAAgB,EAAE,IAAI,CAACxC,YAAY,CAACC,eAAe;UACnDwC,YAAY,EAAE,IAAI,CAACzC,YAAY,CAACE;QAClC,CAAC;QAED,IAAI,CAACI,OAAM,GAAI,wBAAuB;QACtC,IAAI,CAACN,YAAW,GAAI;UAClBC,eAAe,EAAE,EAAE;UACnBC,WAAW,EAAE,EAAE;UACfC,eAAe,EAAE;QACnB;QACA,IAAI,CAACE,KAAI,GAAI,IAAG;MAClB,EAAE,OAAOA,KAAK,EAAE;QACda,OAAO,CAACb,KAAK,CAAC,0BAA0B,EAAEA,KAAK;QAC/C,IAAIA,KAAK,CAACM,QAAQ,EAAE+B,MAAK,KAAM,GAAG,EAAE;UAClC,IAAI,CAACrC,KAAI,GAAI,yBAAwB;QACvC,OAAO;UACL,IAAI,CAACA,KAAI,GAAI,6BAA4B;QAC3C;MACF,UAAU;QACR,IAAI,CAACD,OAAM,GAAI,KAAI;MACrB;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}